course_load_scheduler.onScriptDownloaded(["var $wnd = $wnd || window.parent;\nvar __gwtModuleFunction = $wnd.course_load_scheduler;\nvar $sendStats = __gwtModuleFunction.__sendStats;\n$sendStats('moduleStartup', 'moduleEvalStart');\nvar $gwt_version = \"2.6.1\";\nvar $strongName = '7D3EAD6534C291F45814DACA5F8B736F';\nvar $doc = $wnd.document;function __gwtStartLoadingFragment(frag) {\nvar fragFile = 'deferredjs/' + $strongName + '/' + frag + '.cache.js';\nreturn __gwtModuleFunction.__startLoadingFragment(fragFile);\n}\nfunction __gwtInstallCode(code) {return __gwtModuleFunction.__installRunAsyncCode(code);}\nvar $stats = $wnd.__gwtStatsEvent ? function(a) {return $wnd.__gwtStatsEvent(a);} : null;\nvar $sessionId = $wnd.__gwtStatsSessionId ? $wnd.__gwtStatsSessionId : null;\nvar _, seedTable = {}, Q$Object = 0, Q$String = 1, Q$AnimationScheduler$AnimationHandle = 2, Q$AnimationSchedulerImplTimer$AnimationHandleImpl = 3, Q$AnimationSchedulerImplTimer$AnimationHandleImpl_$1 = 4, Q$JavaScriptException = 5, Q$Style$Display = 6, Q$Style$HasCssName = 7, Q$Style$Overflow = 8, Q$Style$Position = 9, Q$Style$TextAlign = 10, Q$Style$Unit = 11, Q$Style$Visibility = 12, Q$ClickHandler = 13, Q$DomEvent$Type = 14, Q$CloseHandler = 15, Q$HasAttachHandlers = 16, Q$ResizeHandler = 17, Q$ValueChangeHandler = 18, Q$EventHandler = 19, Q$HasHandlers = 20, Q$HasDirection$Direction = 21, Q$LongLibBase$LongEmul = 22, Q$Layout$Layer = 23, Q$SafeHtml = 24, Q$SafeUri = 25, Q$SafeUriString = 26, Q$Event$NativePreviewHandler = 27, Q$EventListener = 28, Q$DockLayoutPanel$Direction = 29, Q$DockLayoutPanel$LayoutData = 30, Q$HasVisibility = 31, Q$HasWidgets = 32, Q$IsWidget = 33, Q$RequiresResize = 34, Q$RootPanel = 35, Q$UIObject = 36, Q$Widget = 37, Q$SimpleEventBus$Command = 38, Q$UmbrellaException = 39, Q$Serializable = 40, Q$Boolean = 41, Q$CharSequence = 42, Q$Comparable = 43, Q$Enum = 44, Q$Integer = 45, Q$Number = 46, Q$StackTraceElement = 47, Q$Throwable = 48, Q$List = 49, Q$Map = 50, Q$Map$Entry = 51, Q$Set = 52, CM$ = {};\nfunction newSeed(id_0){\n  return new seedTable[id_0];\n}\n\nfunction defineSeed(id_0, superSeed, castableTypeMap){\n  var seed = seedTable[id_0];\n  if (seed && !seed.___clazz$) {\n    _ = seed.prototype;\n  }\n   else {\n    !seed && (seed = seedTable[id_0] = function(){\n    }\n    );\n    _ = seed.prototype = superSeed < 0?{}:newSeed(superSeed);\n    _.castableTypeMap$ = castableTypeMap;\n  }\n  for (var i = 3; i < arguments.length; ++i) {\n    arguments[i].prototype = _;\n  }\n  if (seed.___clazz$) {\n    _.___clazz$ = seed.___clazz$;\n    seed.___clazz$ = null;\n  }\n}\n\nfunction makeCastMap(a){\n  var result = {};\n  for (var i = 0, c = a.length; i < c; ++i) {\n    result[a[i]] = 1;\n  }\n  return result;\n}\n\nfunction nullMethod(){\n}\n\nfunction Object_1(){\n}\n\ndefineSeed(1, -1, CM$, Object_1);\n_.equals$ = function equals(other){\n  return this === other;\n}\n;\n_.getClass$ = function getClass_0(){\n  return this.___clazz$;\n}\n;\n_.hashCode$ = function hashCode_0(){\n  return getHashCode(this);\n}\n;\n_.toString$ = function toString_0(){\n  return this.___clazz$.typeName + '@' + toPowerOfTwoString(this.hashCode$());\n}\n;\n_.toString = function(){\n  return this.toString$();\n}\n;\n_.typeMarker$ = nullMethod;\nfunction $cancel(this$static){\n  if (!this$static.isRunning) {\n    return;\n  }\n  this$static.wasStarted = this$static.isStarted;\n  this$static.element = null;\n  this$static.isRunning = false;\n  this$static.isStarted = false;\n  if (this$static.requestHandle) {\n    this$static.requestHandle.cancel();\n    this$static.requestHandle = null;\n  }\n  this$static.onCancel();\n}\n\nfunction $run(this$static, duration, startTime, element){\n  $cancel(this$static);\n  this$static.isRunning = true;\n  this$static.isStarted = false;\n  this$static.duration = duration;\n  this$static.startTime = startTime;\n  this$static.element = element;\n  ++this$static.runId;\n  $execute(this$static.callback, currentTimeMillis());\n}\n\nfunction $run_0(this$static, duration, element){\n  $run(this$static, duration, currentTimeMillis(), element);\n}\n\nfunction $update(this$static, curTime){\n  var curRunId, finished, progress;\n  curRunId = this$static.runId;\n  finished = curTime >= this$static.startTime + this$static.duration;\n  if (this$static.isStarted && !finished) {\n    progress = (curTime - this$static.startTime) / this$static.duration;\n    this$static.onUpdate((1 + Math.cos(3.141592653589793 + progress * 3.141592653589793)) / 2);\n    return this$static.isRunning && this$static.runId == curRunId;\n  }\n  if (!this$static.isStarted && curTime >= this$static.startTime) {\n    this$static.isStarted = true;\n    this$static.onStart();\n    if (!(this$static.isRunning && this$static.runId == curRunId)) {\n      return false;\n    }\n  }\n  if (finished) {\n    this$static.isRunning = false;\n    this$static.isStarted = false;\n    this$static.onComplete();\n    return false;\n  }\n  return true;\n}\n\nfunction Animation_0(){\n  Animation_1.call(this, ($clinit_AnimationSchedulerImpl() , INSTANCE));\n}\n\nfunction Animation_1(scheduler){\n  this.callback = new Animation$1_0(this);\n  this.scheduler = scheduler;\n}\n\ndefineSeed(3, 1, {});\n_.onCancel = function onCancel(){\n  this.wasStarted && this.onComplete();\n}\n;\n_.onComplete = function onComplete(){\n  this.onUpdate((1 + cos_0(6.283185307179586)) / 2);\n}\n;\n_.onStart = function onStart(){\n  this.onUpdate((1 + cos_0(3.141592653589793)) / 2);\n}\n;\n_.duration = -1;\n_.isRunning = false;\n_.isStarted = false;\n_.runId = -1;\n_.startTime = -1;\n_.wasStarted = false;\nfunction $execute(this$static, timestamp){\n  $update(this$static.this$0, timestamp)?(this$static.this$0.requestHandle = this$static.this$0.scheduler.requestAnimationFrame(this$static.this$0.callback, this$static.this$0.element)):(this$static.this$0.requestHandle = null);\n}\n\nfunction Animation$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(4, 1, {}, Animation$1_0);\n_.execute = function execute(timestamp){\n  $execute(this, timestamp);\n}\n;\ndefineSeed(5, 1, {});\ndefineSeed(6, 1, makeCastMap([Q$AnimationScheduler$AnimationHandle]));\nfunction $clinit_AnimationSchedulerImpl(){\n  $clinit_AnimationSchedulerImpl = nullMethod;\n  var impl;\n  impl = new AnimationSchedulerImplMozilla_0;\n  !!impl && (impl.isNativelySupported() || (impl = new AnimationSchedulerImplTimer_0));\n  INSTANCE = impl;\n}\n\ndefineSeed(7, 5, {});\nvar INSTANCE;\nfunction $requestAnimationFrameImpl(callback, handle){\n  var wrapper = $entry(function(){\n    if (!handle.canceled) {\n      var now_0 = currentTimeMillis();\n      callback.execute(now_0);\n    }\n  }\n  );\n  $wnd.mozRequestAnimationFrame(wrapper);\n}\n\nfunction AnimationSchedulerImplMozilla_0(){\n}\n\ndefineSeed(8, 7, {}, AnimationSchedulerImplMozilla_0);\n_.isNativelySupported = function isNativelySupported(){\n  return !!$wnd.mozRequestAnimationFrame;\n}\n;\n_.requestAnimationFrame = function requestAnimationFrame(callback, element){\n  var handle;\n  handle = new AnimationSchedulerImplMozilla$AnimationHandleImpl_0;\n  $requestAnimationFrameImpl(callback, handle);\n  return handle;\n}\n;\nfunction AnimationSchedulerImplMozilla$AnimationHandleImpl_0(){\n}\n\ndefineSeed(9, 6, makeCastMap([Q$AnimationScheduler$AnimationHandle]), AnimationSchedulerImplMozilla$AnimationHandleImpl_0);\n_.cancel = function cancel(){\n  this.canceled = true;\n}\n;\n_.canceled = false;\nfunction $cancelAnimationFrame(this$static, requestId){\n  $remove_10(this$static.animationRequests, requestId);\n  this$static.animationRequests.size_0 == 0 && $cancel_0(this$static.timer);\n}\n\nfunction $updateAnimations(this$static){\n  var curAnimations, duration, requestId, requestId$index, requestId$max;\n  curAnimations = initDim(_3Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$AnimationHandleImpl_2_classLit, makeCastMap([Q$AnimationSchedulerImplTimer$AnimationHandleImpl_$1, Q$Serializable]), Q$AnimationSchedulerImplTimer$AnimationHandleImpl, this$static.animationRequests.size_0, 0);\n  curAnimations = dynamicCast($toArray(this$static.animationRequests, curAnimations), Q$AnimationSchedulerImplTimer$AnimationHandleImpl_$1);\n  duration = new Duration_0;\n  for (requestId$index = 0 , requestId$max = curAnimations.length; requestId$index < requestId$max; ++requestId$index) {\n    requestId = curAnimations[requestId$index];\n    $remove_10(this$static.animationRequests, requestId);\n    $execute(requestId.callback, duration.start_0);\n  }\n  this$static.animationRequests.size_0 > 0 && $schedule(this$static.timer, max_0(16 - (currentTimeMillis() - duration.start_0)));\n}\n\nfunction AnimationSchedulerImplTimer_0(){\n  this.animationRequests = new ArrayList_0;\n  this.timer = new AnimationSchedulerImplTimer$1_0(this);\n}\n\ndefineSeed(10, 7, {}, AnimationSchedulerImplTimer_0);\n_.isNativelySupported = function isNativelySupported_0(){\n  return true;\n}\n;\n_.requestAnimationFrame = function requestAnimationFrame_0(callback, element){\n  var requestId;\n  requestId = new AnimationSchedulerImplTimer$AnimationHandleImpl_0(this, callback);\n  $add_5(this.animationRequests, requestId);\n  this.animationRequests.size_0 == 1 && $schedule(this.timer, 16);\n  return requestId;\n}\n;\nfunction $cancel_0(this$static){\n  if (!this$static.timerId) {\n    return;\n  }\n  ++this$static.cancelCounter;\n  this$static.isRepeating?clearInterval0(this$static.timerId.value_0):clearTimeout0(this$static.timerId.value_0);\n  this$static.timerId = null;\n}\n\nfunction $schedule(this$static, delayMillis){\n  if (delayMillis < 0) {\n    throw new IllegalArgumentException_0('must be non-negative');\n  }\n  !!this$static.timerId && $cancel_0(this$static);\n  this$static.isRepeating = false;\n  this$static.timerId = valueOf(setTimeout0(createCallback(this$static, this$static.cancelCounter), delayMillis, null));\n}\n\nfunction createCallback(timer, cancelCounter){\n  return $entry(function(){\n    timer.fire(cancelCounter);\n  }\n  );\n}\n\ndefineSeed(12, 1, {});\n_.fire = function fire(scheduleCancelCounter){\n  if (scheduleCancelCounter != this.cancelCounter) {\n    return;\n  }\n  this.isRepeating || (this.timerId = null);\n  $updateAnimations(this.this$0);\n}\n;\n_.cancelCounter = 0;\n_.isRepeating = false;\n_.timerId = null;\nfunction AnimationSchedulerImplTimer$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(11, 12, {}, AnimationSchedulerImplTimer$1_0);\nfunction AnimationSchedulerImplTimer$AnimationHandleImpl_0(this$0, callback){\n  this.this$0 = this$0;\n  this.callback = callback;\n}\n\ndefineSeed(13, 6, makeCastMap([Q$AnimationScheduler$AnimationHandle, Q$AnimationSchedulerImplTimer$AnimationHandleImpl]), AnimationSchedulerImplTimer$AnimationHandleImpl_0);\n_.cancel = function cancel_0(){\n  $cancelAnimationFrame(this.this$0, this);\n}\n;\nfunction $getAriaValue(value_0){\n  var buf, item_0, item$index, item$max;\n  buf = new StringBuffer_0;\n  for (item$index = 0 , item$max = value_0.length; item$index < item$max; ++item$index) {\n    item_0 = value_0[item$index];\n    ($append(buf.impl, '' + item_0) , buf).impl.string += ' ';\n  }\n  return $trim(buf.impl.string);\n}\n\nfunction $set(this$static, element, values){\n  $setAttribute(element, this$static.name_0, $getAriaValue(values));\n}\n\nfunction Attribute_0(name_0){\n  this.name_0 = name_0;\n}\n\ndefineSeed(15, 1, {});\nfunction AriaValueAttribute_0(name_0){\n  Attribute_0.call(this, name_0);\n}\n\ndefineSeed(14, 15, {}, AriaValueAttribute_0);\nfunction PrimitiveValueAttribute_0(name_0){\n  Attribute_0.call(this, name_0);\n}\n\ndefineSeed(16, 15, {}, PrimitiveValueAttribute_0);\nfunction $clinit_State(){\n  $clinit_State = nullMethod;\n  new PrimitiveValueAttribute_0('aria-busy');\n  new AriaValueAttribute_0('aria-checked');\n  new PrimitiveValueAttribute_0('aria-disabled');\n  new AriaValueAttribute_0('aria-expanded');\n  new AriaValueAttribute_0('aria-grabbed');\n  HIDDEN = new PrimitiveValueAttribute_0('aria-hidden');\n  new AriaValueAttribute_0('aria-invalid');\n  new AriaValueAttribute_0('aria-pressed');\n  new AriaValueAttribute_0('aria-selected');\n}\n\nvar HIDDEN;\nfunction Duration_0(){\n  this.start_0 = currentTimeMillis();\n}\n\nfunction currentTimeMillis(){\n  return (new Date).getTime();\n}\n\ndefineSeed(18, 1, {}, Duration_0);\n_.start_0 = 0;\nfunction isScript(){\n  return true;\n}\n\nfunction $setStackTrace(stackTrace){\n  var c, copy, i;\n  copy = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable]), Q$StackTraceElement, stackTrace.length, 0);\n  for (i = 0 , c = stackTrace.length; i < c; ++i) {\n    if (!stackTrace[i]) {\n      throw new NullPointerException_0;\n    }\n    copy[i] = stackTrace[i];\n  }\n}\n\ndefineSeed(23, 1, makeCastMap([Q$Serializable, Q$Throwable]));\n_.getMessage = function getMessage(){\n  return this.detailMessage;\n}\n;\n_.toString$ = function toString_1(){\n  var className, msg;\n  className = this.___clazz$.typeName;\n  msg = this.getMessage();\n  return msg != null?className + ': ' + msg:className;\n}\n;\ndefineSeed(22, 23, makeCastMap([Q$Serializable, Q$Throwable]));\nfunction RuntimeException_0(){\n  $fillInStackTrace();\n}\n\nfunction RuntimeException_1(message){\n  this.detailMessage = message;\n  $fillInStackTrace();\n}\n\nfunction RuntimeException_2(message){\n  this.detailMessage = message;\n  $fillInStackTrace();\n}\n\ndefineSeed(21, 22, makeCastMap([Q$Serializable, Q$Throwable]), RuntimeException_1);\nfunction $clinit_JavaScriptException(){\n  $clinit_JavaScriptException = nullMethod;\n  NOT_SET = new Object_1;\n}\n\nfunction $ensureInit(this$static){\n  var exception, maybeJsoInvocation;\n  if (this$static.message_0 == null) {\n    exception = this$static.e === NOT_SET?null:this$static.e;\n    this$static.name_0 = exception == null?'null':instanceOfJso(exception)?getExceptionName0(dynamicCastJso(exception)):instanceOf(exception, Q$String)?'String':(maybeJsoInvocation = exception , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.___clazz$:Lcom_google_gwt_core_client_JavaScriptObject_2_classLit).typeName;\n    this$static.description = this$static.description + ': ' + (instanceOfJso(exception)?getExceptionDescription0(dynamicCastJso(exception)):exception + '');\n    this$static.message_0 = '(' + this$static.name_0 + ') ' + (instanceOfJso(exception)?$getProperties(dynamicCastJso(exception)):'') + this$static.description;\n  }\n}\n\nfunction JavaScriptException_0(e){\n  $clinit_JavaScriptException();\n  RuntimeException_0.call(this);\n  this.description = '';\n  this.e = e;\n  this.description = '';\n  $createStackTrace(this);\n}\n\nfunction getExceptionDescription0(e){\n  return e == null?null:e.message;\n}\n\nfunction getExceptionName0(e){\n  return e == null?null:e.name;\n}\n\ndefineSeed(20, 21, makeCastMap([Q$JavaScriptException, Q$Serializable, Q$Throwable]), JavaScriptException_0);\n_.getMessage = function getMessage_0(){\n  $ensureInit(this);\n  return this.message_0;\n}\n;\n_.getThrown = function getThrown(){\n  return this.e === NOT_SET?null:this.e;\n}\n;\nvar NOT_SET;\nfunction equals__devirtual$(this$static, other){\n  var maybeJsoInvocation;\n  return maybeJsoInvocation = this$static , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.equals$(other):maybeJsoInvocation === other;\n}\n\nfunction hashCode__devirtual$(this$static){\n  var maybeJsoInvocation;\n  return maybeJsoInvocation = this$static , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.hashCode$():getHashCode(maybeJsoInvocation);\n}\n\nfunction $push(this$static, value_0){\n  this$static[this$static.length] = value_0;\n}\n\nfunction $push_0(this$static, value_0){\n  this$static[this$static.length] = value_0;\n}\n\nfunction $setLength(this$static, newLength){\n  this$static.length = newLength;\n}\n\ndefineSeed(27, 1, {});\nfunction apply_0(jsFunction, thisObj, args){\n  return jsFunction.apply(thisObj, args);\n  var __0;\n}\n\nfunction dispose(d){\n  !!d && ($disposeEventSystem() , cleanupDOM(d.this$0));\n}\n\nfunction enter(){\n  var now_0;\n  if (entryDepth != 0) {\n    now_0 = currentTimeMillis();\n    if (now_0 - watchdogEntryDepthLastScheduled > 2000) {\n      watchdogEntryDepthLastScheduled = now_0;\n      watchdogEntryDepthTimerId = watchdogEntryDepthSchedule();\n    }\n  }\n  if (entryDepth++ == 0) {\n    $flushEntryCommands(($clinit_SchedulerImpl() , INSTANCE_0));\n    return true;\n  }\n  return false;\n}\n\nfunction entry_0(jsFunction){\n  return function(){\n    try {\n      if (isScript()) {\n        return entry0(jsFunction, this, arguments);\n      }\n       else {\n        var __0 = entry0(jsFunction, this, arguments);\n        __0 != null && (__0 = __0.val);\n        return __0;\n      }\n    }\n     catch (e) {\n      throw e;\n    }\n  }\n  ;\n}\n\nfunction entry0(jsFunction, thisObj, args){\n  var initialEntry;\n  initialEntry = enter();\n  try {\n    return apply_0(jsFunction, thisObj, args);\n  }\n   finally {\n    exit(initialEntry);\n  }\n}\n\nfunction exit(initialEntry){\n  initialEntry && $flushFinallyCommands(($clinit_SchedulerImpl() , INSTANCE_0));\n  --entryDepth;\n  if (initialEntry) {\n    if (watchdogEntryDepthTimerId != -1) {\n      watchdogEntryDepthCancel(watchdogEntryDepthTimerId);\n      watchdogEntryDepthTimerId = -1;\n    }\n  }\n}\n\nfunction getHashCode(o){\n  return o.$H || (o.$H = ++sNextHashId);\n}\n\nfunction registerEntry(){\n  return entry_0;\n}\n\nfunction reportToBrowser(e){\n  $wnd.setTimeout(function(){\n    throw e;\n  }\n  , 0);\n}\n\nfunction setTimeout_0(func, time){\n  return setTimeout0(func, time, null);\n}\n\nfunction watchdogEntryDepthCancel(timerId){\n  clearTimeout0(timerId);\n}\n\nfunction watchdogEntryDepthSchedule(){\n  return setTimeout_0(function(){\n    entryDepth != 0 && (entryDepth = 0);\n    watchdogEntryDepthTimerId = -1;\n  }\n  , 10);\n}\n\nvar entryDepth = 0, sNextHashId = 0, watchdogEntryDepthLastScheduled = 0, watchdogEntryDepthTimerId = -1;\nfunction $clinit_SchedulerImpl(){\n  $clinit_SchedulerImpl = nullMethod;\n  INSTANCE_0 = new SchedulerImpl_0;\n}\n\nfunction $flushEntryCommands(this$static){\n  var oldQueue, rescheduled;\n  if (this$static.entryCommands) {\n    rescheduled = null;\n    do {\n      oldQueue = this$static.entryCommands;\n      this$static.entryCommands = null;\n      rescheduled = runScheduledTasks(oldQueue, rescheduled);\n    }\n     while (this$static.entryCommands);\n    this$static.entryCommands = rescheduled;\n  }\n}\n\nfunction $flushFinallyCommands(this$static){\n  var oldQueue, rescheduled;\n  if (this$static.finallyCommands) {\n    rescheduled = null;\n    do {\n      oldQueue = this$static.finallyCommands;\n      this$static.finallyCommands = null;\n      rescheduled = runScheduledTasks(oldQueue, rescheduled);\n    }\n     while (this$static.finallyCommands);\n    this$static.finallyCommands = rescheduled;\n  }\n}\n\nfunction $flushPostEventPumpCommands(this$static){\n  var oldDeferred;\n  if (this$static.deferredCommands) {\n    oldDeferred = this$static.deferredCommands;\n    this$static.deferredCommands = null;\n    !this$static.incrementalCommands && (this$static.incrementalCommands = []);\n    runScheduledTasks(oldDeferred, this$static.incrementalCommands);\n  }\n  !!this$static.incrementalCommands && (this$static.incrementalCommands = $runRepeatingTasks(this$static.incrementalCommands));\n}\n\nfunction $isWorkQueued(this$static){\n  return !!this$static.deferredCommands || !!this$static.incrementalCommands;\n}\n\nfunction $maybeSchedulePostEventPumpCommands(this$static){\n  if (!this$static.shouldBeRunning) {\n    this$static.shouldBeRunning = true;\n    !this$static.flusher && (this$static.flusher = new SchedulerImpl$Flusher_0(this$static));\n    scheduleFixedDelayImpl(this$static.flusher, 1);\n    !this$static.rescue && (this$static.rescue = new SchedulerImpl$Rescuer_0(this$static));\n    scheduleFixedDelayImpl(this$static.rescue, 50);\n  }\n}\n\nfunction $runRepeatingTasks(tasks){\n  var canceledSomeTasks, duration, executedSomeTask, i, length_0, newTasks, t;\n  length_0 = tasks.length;\n  if (length_0 == 0) {\n    return null;\n  }\n  canceledSomeTasks = false;\n  duration = new Duration_0;\n  while (currentTimeMillis() - duration.start_0 < 100) {\n    executedSomeTask = false;\n    for (i = 0; i < length_0; i++) {\n      t = tasks[i];\n      if (!t) {\n        continue;\n      }\n      executedSomeTask = true;\n      if (!t[0].execute_0()) {\n        tasks[i] = null;\n        canceledSomeTasks = true;\n      }\n    }\n    if (!executedSomeTask) {\n      break;\n    }\n  }\n  if (canceledSomeTasks) {\n    newTasks = [];\n    for (i = 0; i < length_0; i++) {\n      !!tasks[i] && $push(newTasks, tasks[i]);\n    }\n    return newTasks.length == 0?null:newTasks;\n  }\n   else {\n    return tasks;\n  }\n}\n\nfunction $scheduleDeferred(this$static, cmd){\n  this$static.deferredCommands = push_0(this$static.deferredCommands, [cmd, false]);\n  $maybeSchedulePostEventPumpCommands(this$static);\n}\n\nfunction $scheduleFinally(this$static, cmd){\n  this$static.finallyCommands = push_0(this$static.finallyCommands, [cmd, false]);\n}\n\nfunction SchedulerImpl_0(){\n}\n\nfunction execute_0(cmd){\n  return cmd.execute_0();\n}\n\nfunction push_0(queue, task){\n  !queue && (queue = []);\n  $push(queue, task);\n  return queue;\n}\n\nfunction runScheduledTasks(tasks, rescheduled){\n  var e, i, j, t;\n  for (i = 0 , j = tasks.length; i < j; i++) {\n    t = tasks[i];\n    try {\n      t[1]?t[0].execute_0() && (rescheduled = push_0(rescheduled, t)):t[0].execute_1();\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$Throwable)) {\n        e = $e0;\n        reportToBrowser(instanceOf(e, Q$JavaScriptException)?dynamicCast(e, Q$JavaScriptException).getThrown():e);\n      }\n       else \n        throw unwrap($e0);\n    }\n  }\n  return rescheduled;\n}\n\nfunction scheduleFixedDelayImpl(cmd, delayMs){\n  $clinit_SchedulerImpl();\n  setTimeout_0(function(){\n    var ret = $entry(execute_0)(cmd);\n    !isScript() && (ret = ret == true);\n    ret && setTimeout_0(arguments.callee, delayMs);\n  }\n  , delayMs);\n}\n\ndefineSeed(29, 27, {}, SchedulerImpl_0);\n_.flushRunning = false;\n_.shouldBeRunning = false;\nvar INSTANCE_0;\nfunction SchedulerImpl$Flusher_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(30, 1, {}, SchedulerImpl$Flusher_0);\n_.execute_0 = function execute_1(){\n  this.this$0.flushRunning = true;\n  $flushPostEventPumpCommands(this.this$0);\n  this.this$0.flushRunning = false;\n  return this.this$0.shouldBeRunning = $isWorkQueued(this.this$0);\n}\n;\nfunction SchedulerImpl$Rescuer_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(31, 1, {}, SchedulerImpl$Rescuer_0);\n_.execute_0 = function execute_2(){\n  this.this$0.flushRunning && scheduleFixedDelayImpl(this.this$0.flusher, 1);\n  return this.this$0.shouldBeRunning;\n}\n;\nfunction extractNameFromToString(fnToString){\n  var index_0, start_0, toReturn;\n  toReturn = '';\n  fnToString = $trim(fnToString);\n  index_0 = fnToString.indexOf('(');\n  start_0 = fnToString.indexOf('function') == 0?8:0;\n  if (index_0 == -1) {\n    index_0 = $indexOf_0(fnToString, String.fromCharCode(64));\n    start_0 = fnToString.indexOf('function ') == 0?9:0;\n  }\n  index_0 != -1 && (toReturn = $trim(fnToString.substr(start_0, index_0 - start_0)));\n  return toReturn.length > 0?toReturn:'anonymous';\n}\n\nfunction splice(arr, length_0){\n  arr.length >= length_0 && arr.splice(0, length_0);\n  return arr;\n}\n\nfunction $createStackTrace(e){\n  var i, j, stack_0, stackTrace;\n  stack_0 = $inferFrom(e.e === ($clinit_JavaScriptException() , NOT_SET)?null:e.e);\n  stackTrace = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable]), Q$StackTraceElement, stack_0.length, 0);\n  for (i = 0 , j = stackTrace.length; i < j; i++) {\n    stackTrace[i] = new StackTraceElement_0(stack_0[i]);\n  }\n  $setStackTrace(stackTrace);\n}\n\nfunction $fillInStackTrace(){\n  var i, j, stack_0, stackTrace;\n  stack_0 = splice($inferFrom($makeException()), 2);\n  stackTrace = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable]), Q$StackTraceElement, stack_0.length, 0);\n  for (i = 0 , j = stackTrace.length; i < j; i++) {\n    stackTrace[i] = new StackTraceElement_0(stack_0[i]);\n  }\n  $setStackTrace(stackTrace);\n}\n\nfunction $getProperties(e){\n  var result = '';\n  try {\n    for (var prop in e) {\n      if (prop != 'name' && prop != 'message' && prop != 'toString') {\n        try {\n          var propValue = prop != '__gwt$exception'?e[prop]:'<skipped>';\n          result += '\\n ' + prop + ': ' + propValue;\n        }\n         catch (ignored) {\n        }\n      }\n    }\n  }\n   catch (ignored) {\n  }\n  return result;\n}\n\nfunction $makeException(){\n  try {\n    null.a();\n  }\n   catch (e) {\n    return e;\n  }\n}\n\nfunction $inferFrom(e){\n  var i, j, jso, stack_0;\n  jso = instanceOfJso(e)?dynamicCastJso(e):null;\n  stack_0 = jso && jso.stack?jso.stack.split('\\n'):[];\n  for (i = 0 , j = stack_0.length; i < j; i++) {\n    stack_0[i] = extractNameFromToString(stack_0[i]);\n  }\n  return stack_0;\n}\n\ndefineSeed(36, 1, {});\nfunction $append(this$static, x_0){\n  this$static.string += x_0;\n}\n\nfunction StringBufferImplAppend_0(){\n}\n\ndefineSeed(37, 36, {}, StringBufferImplAppend_0);\n_.string = '';\nfunction clearInterval0(timerId){\n  $wnd.clearInterval(timerId);\n}\n\nfunction clearTimeout0(timerId){\n  $wnd.clearTimeout(timerId);\n}\n\nfunction setTimeout0(func, time, disposeable){\n  var timerId = $wnd.setTimeout(function(){\n    func();\n    disposeable != null && dispose(disposeable);\n  }\n  , time);\n  return timerId;\n}\n\nfunction $appendChild(this$static, newChild){\n  return this$static.appendChild(newChild);\n}\n\nfunction $insertBefore(this$static, newChild, refChild){\n  return this$static.insertBefore(newChild, refChild);\n}\n\nfunction $removeChild(this$static, oldChild){\n  return this$static.removeChild(oldChild);\n}\n\nfunction $removeFromParent(this$static){\n  var parent_0;\n  parent_0 = $getParentElement(this$static);\n  !!parent_0 && parent_0.removeChild(this$static);\n}\n\nfunction $replaceChild(this$static, newChild, oldChild){\n  return this$static.replaceChild(newChild, oldChild);\n}\n\nfunction is(o){\n  try {\n    return !!o && !!o.nodeType;\n  }\n   catch (e) {\n    return false;\n  }\n}\n\nfunction $addClassName(this$static, className){\n  var idx, oldClassName;\n  className = trimClassName(className);\n  oldClassName = this$static.className;\n  idx = indexOfName(oldClassName, className);\n  if (idx == -1) {\n    oldClassName.length > 0?$setClassName(this$static, oldClassName + ' ' + className):$setClassName(this$static, className);\n    return true;\n  }\n  return false;\n}\n\nfunction $getPropertyInt(this$static, name_0){\n  return parseInt(this$static[name_0]) | 0;\n}\n\nfunction $getPropertyString(this$static, name_0){\n  return this$static[name_0] == null?null:String(this$static[name_0]);\n}\n\nfunction $getSubPixelOffsetWidth(this$static){\n  return this$static.offsetWidth || 0;\n}\n\nfunction $setAttribute(this$static, name_0, value_0){\n  this$static.setAttribute(name_0, value_0);\n}\n\nfunction $setClassName(this$static, className){\n  this$static.className = className;\n}\n\nfunction $setInnerHTML(this$static, html){\n  this$static.innerHTML = html || '';\n}\n\nfunction $setPropertyString(this$static, name_0, value_0){\n  this$static[name_0] = value_0;\n}\n\nfunction indexOfName(nameList, name_0){\n  var idx, last, lastPos;\n  idx = nameList.indexOf(name_0);\n  while (idx != -1) {\n    if (idx == 0 || nameList.charCodeAt(idx - 1) == 32) {\n      last = idx + name_0.length;\n      lastPos = nameList.length;\n      if (last == lastPos || last < lastPos && nameList.charCodeAt(last) == 32) {\n        break;\n      }\n    }\n    idx = nameList.indexOf(name_0, idx + 1);\n  }\n  return idx;\n}\n\nfunction is_0(o){\n  if (is(o)) {\n    return !!o && o.nodeType == 1;\n  }\n  return false;\n}\n\nfunction trimClassName(className){\n  className = $trim(className);\n  return className;\n}\n\nfunction $eventGetAltKey(evt){\n  return !!evt.altKey;\n}\n\nfunction $eventGetCtrlKey(evt){\n  return !!evt.ctrlKey;\n}\n\nfunction $eventGetKeyCode(evt){\n  return evt.keyCode | 0;\n}\n\nfunction $eventGetMetaKey(evt){\n  return !!evt.metaKey;\n}\n\nfunction $eventGetShiftKey(evt){\n  return !!evt.shiftKey;\n}\n\nfunction $getFirstChildElement(elem){\n  var child = elem.firstChild;\n  while (child && child.nodeType != 1)\n    child = child.nextSibling;\n  return child;\n}\n\nfunction $getNextSiblingElement(elem){\n  var sib = elem.nextSibling;\n  while (sib && sib.nodeType != 1)\n    sib = sib.nextSibling;\n  return sib;\n}\n\nfunction $getParentElement(node){\n  var parent_0 = node.parentNode;\n  (!parent_0 || parent_0.nodeType != 1) && (parent_0 = null);\n  return parent_0;\n}\n\nfunction $imgSetSrc(img, src_0){\n  img.src = src_0;\n}\n\nfunction $dispatchEvent(target, evt){\n  target.dispatchEvent(evt);\n}\n\nfunction $eventPreventDefault(evt){\n  evt.preventDefault();\n}\n\nfunction $setInnerText(elem, text_0){\n  elem.textContent = text_0 || '';\n}\n\nfunction $eventGetRelatedTarget(evt){\n  var relatedTarget = evt.relatedTarget;\n  if (!relatedTarget) {\n    return null;\n  }\n  try {\n    var nodeName = relatedTarget.nodeName;\n    return relatedTarget;\n  }\n   catch (e) {\n    return null;\n  }\n}\n\nfunction $getBodyOffsetLeft(doc){\n  var style = $wnd.getComputedStyle(doc.documentElement, null);\n  if (style == null) {\n    return 0;\n  }\n  return parseInt(style.marginLeft, 10) + parseInt(style.borderLeftWidth, 10);\n}\n\nfunction $getBodyOffsetTop(doc){\n  var style = $wnd.getComputedStyle(doc.documentElement, null);\n  if (style == null) {\n    return 0;\n  }\n  return parseInt(style.marginTop, 10) + parseInt(style.borderTopWidth, 10);\n}\n\nfunction $isOrHasChild(parent_0, child){\n  return parent_0 === child || !!(parent_0.compareDocumentPosition(child) & 16);\n}\n\nfunction $toString(elem){\n  var doc = elem.ownerDocument;\n  var temp = elem.cloneNode(true);\n  var tempDiv = doc.createElement('DIV');\n  tempDiv.appendChild(temp);\n  outer = tempDiv.innerHTML;\n  temp.innerHTML = '';\n  return outer;\n}\n\nfunction $createUniqueId(this$static){\n  !this$static.gwt_uid && (this$static.gwt_uid = 1);\n  return 'gwt-uid-' + this$static.gwt_uid++;\n}\n\nfunction $getClientHeight(this$static){\n  return ($equals(this$static.compatMode, 'CSS1Compat')?this$static.documentElement:this$static.body).clientHeight | 0;\n}\n\nfunction $getClientWidth(this$static){\n  return ($equals(this$static.compatMode, 'CSS1Compat')?this$static.documentElement:this$static.body).clientWidth | 0;\n}\n\nfunction $getElementById(this$static, elementId){\n  return this$static.getElementById(elementId);\n}\n\nfunction $getScrollHeight(this$static){\n  return (($equals(this$static.compatMode, 'CSS1Compat')?this$static.documentElement:this$static.body).scrollHeight || 0) | 0;\n}\n\nfunction $getScrollWidth(this$static){\n  return (($equals(this$static.compatMode, 'CSS1Compat')?this$static.documentElement:this$static.body).scrollWidth || 0) | 0;\n}\n\nfunction $setPropertyImpl(this$static, name_0, value_0){\n  this$static[name_0] = value_0;\n}\n\nfunction Enum_0(name_0, ordinal){\n  this.name_0 = name_0;\n  this.ordinal = ordinal;\n}\n\ndefineSeed(52, 1, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum]));\n_.equals$ = function equals_0(other){\n  return this === other;\n}\n;\n_.hashCode$ = function hashCode_1(){\n  return getHashCode(this);\n}\n;\n_.toString$ = function toString_2(){\n  return this.name_0;\n}\n;\n_.ordinal = 0;\n",
"function $clinit_Style$Display(){\n  $clinit_Style$Display = nullMethod;\n  NONE = new Style$Display$1_0;\n  BLOCK = new Style$Display$2_0;\n  INLINE = new Style$Display$3_0;\n  INLINE_BLOCK = new Style$Display$4_0;\n  $VALUES = initValues(_3Lcom_google_gwt_dom_client_Style$Display_2_classLit, makeCastMap([Q$Serializable]), Q$Style$Display, [NONE, BLOCK, INLINE, INLINE_BLOCK]);\n}\n\nfunction Style$Display_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_0(){\n  $clinit_Style$Display();\n  return $VALUES;\n}\n\ndefineSeed(51, 52, makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES, BLOCK, INLINE, INLINE_BLOCK, NONE;\nfunction Style$Display$1_0(){\n  Style$Display_0.call(this, 'NONE', 0);\n}\n\ndefineSeed(53, 51, makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Display$1_0);\nfunction Style$Display$2_0(){\n  Style$Display_0.call(this, 'BLOCK', 1);\n}\n\ndefineSeed(54, 51, makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Display$2_0);\nfunction Style$Display$3_0(){\n  Style$Display_0.call(this, 'INLINE', 2);\n}\n\ndefineSeed(55, 51, makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Display$3_0);\nfunction Style$Display$4_0(){\n  Style$Display_0.call(this, 'INLINE_BLOCK', 3);\n}\n\ndefineSeed(56, 51, makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Display$4_0);\nfunction $clinit_Style$Overflow(){\n  $clinit_Style$Overflow = nullMethod;\n  VISIBLE = new Style$Overflow$1_0;\n  HIDDEN_0 = new Style$Overflow$2_0;\n  SCROLL = new Style$Overflow$3_0;\n  AUTO = new Style$Overflow$4_0;\n  $VALUES_0 = initValues(_3Lcom_google_gwt_dom_client_Style$Overflow_2_classLit, makeCastMap([Q$Serializable]), Q$Style$Overflow, [VISIBLE, HIDDEN_0, SCROLL, AUTO]);\n}\n\nfunction Style$Overflow_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_1(){\n  $clinit_Style$Overflow();\n  return $VALUES_0;\n}\n\ndefineSeed(57, 52, makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_0, AUTO, HIDDEN_0, SCROLL, VISIBLE;\nfunction Style$Overflow$1_0(){\n  Style$Overflow_0.call(this, 'VISIBLE', 0);\n}\n\ndefineSeed(58, 57, makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]), Style$Overflow$1_0);\nfunction Style$Overflow$2_0(){\n  Style$Overflow_0.call(this, 'HIDDEN', 1);\n}\n\ndefineSeed(59, 57, makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]), Style$Overflow$2_0);\nfunction Style$Overflow$3_0(){\n  Style$Overflow_0.call(this, 'SCROLL', 2);\n}\n\ndefineSeed(60, 57, makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]), Style$Overflow$3_0);\nfunction Style$Overflow$4_0(){\n  Style$Overflow_0.call(this, 'AUTO', 3);\n}\n\ndefineSeed(61, 57, makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]), Style$Overflow$4_0);\nfunction $clinit_Style$Position(){\n  $clinit_Style$Position = nullMethod;\n  STATIC = new Style$Position$1_0;\n  RELATIVE = new Style$Position$2_0;\n  ABSOLUTE = new Style$Position$3_0;\n  FIXED = new Style$Position$4_0;\n  $VALUES_1 = initValues(_3Lcom_google_gwt_dom_client_Style$Position_2_classLit, makeCastMap([Q$Serializable]), Q$Style$Position, [STATIC, RELATIVE, ABSOLUTE, FIXED]);\n}\n\nfunction Style$Position_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_2(){\n  $clinit_Style$Position();\n  return $VALUES_1;\n}\n\ndefineSeed(62, 52, makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_1, ABSOLUTE, FIXED, RELATIVE, STATIC;\nfunction Style$Position$1_0(){\n  Style$Position_0.call(this, 'STATIC', 0);\n}\n\ndefineSeed(63, 62, makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]), Style$Position$1_0);\nfunction Style$Position$2_0(){\n  Style$Position_0.call(this, 'RELATIVE', 1);\n}\n\ndefineSeed(64, 62, makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]), Style$Position$2_0);\nfunction Style$Position$3_0(){\n  Style$Position_0.call(this, 'ABSOLUTE', 2);\n}\n\ndefineSeed(65, 62, makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]), Style$Position$3_0);\nfunction Style$Position$4_0(){\n  Style$Position_0.call(this, 'FIXED', 3);\n}\n\ndefineSeed(66, 62, makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]), Style$Position$4_0);\nfunction $clinit_Style$TextAlign(){\n  $clinit_Style$TextAlign = nullMethod;\n  CENTER = new Style$TextAlign$1_0;\n  JUSTIFY = new Style$TextAlign$2_0;\n  LEFT = new Style$TextAlign$3_0;\n  RIGHT = new Style$TextAlign$4_0;\n  $VALUES_2 = initValues(_3Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit, makeCastMap([Q$Serializable]), Q$Style$TextAlign, [CENTER, JUSTIFY, LEFT, RIGHT]);\n}\n\nfunction Style$TextAlign_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_3(){\n  $clinit_Style$TextAlign();\n  return $VALUES_2;\n}\n\ndefineSeed(67, 52, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_2, CENTER, JUSTIFY, LEFT, RIGHT;\nfunction Style$TextAlign$1_0(){\n  Style$TextAlign_0.call(this, 'CENTER', 0);\n}\n\ndefineSeed(68, 67, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$1_0);\nfunction Style$TextAlign$2_0(){\n  Style$TextAlign_0.call(this, 'JUSTIFY', 1);\n}\n\ndefineSeed(69, 67, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$2_0);\nfunction Style$TextAlign$3_0(){\n  Style$TextAlign_0.call(this, 'LEFT', 2);\n}\n\ndefineSeed(70, 67, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$3_0);\nfunction Style$TextAlign$4_0(){\n  Style$TextAlign_0.call(this, 'RIGHT', 3);\n}\n\ndefineSeed(71, 67, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$4_0);\nfunction $clinit_Style$Unit(){\n  $clinit_Style$Unit = nullMethod;\n  PX = new Style$Unit$1_0;\n  PCT = new Style$Unit$2_0;\n  EM = new Style$Unit$3_0;\n  EX = new Style$Unit$4_0;\n  PT = new Style$Unit$5_0;\n  PC = new Style$Unit$6_0;\n  IN = new Style$Unit$7_0;\n  CM = new Style$Unit$8_0;\n  MM = new Style$Unit$9_0;\n  $VALUES_3 = initValues(_3Lcom_google_gwt_dom_client_Style$Unit_2_classLit, makeCastMap([Q$Serializable]), Q$Style$Unit, [PX, PCT, EM, EX, PT, PC, IN, CM, MM]);\n}\n\nfunction Style$Unit_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_4(){\n  $clinit_Style$Unit();\n  return $VALUES_3;\n}\n\ndefineSeed(72, 52, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_3, CM, EM, EX, IN, MM, PC, PCT, PT, PX;\nfunction Style$Unit$1_0(){\n  Style$Unit_0.call(this, 'PX', 0);\n}\n\ndefineSeed(73, 72, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$1_0);\n_.getType = function getType(){\n  return 'px';\n}\n;\nfunction Style$Unit$2_0(){\n  Style$Unit_0.call(this, 'PCT', 1);\n}\n\ndefineSeed(74, 72, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$2_0);\n_.getType = function getType_0(){\n  return '%';\n}\n;\nfunction Style$Unit$3_0(){\n  Style$Unit_0.call(this, 'EM', 2);\n}\n\ndefineSeed(75, 72, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$3_0);\n_.getType = function getType_1(){\n  return 'em';\n}\n;\nfunction Style$Unit$4_0(){\n  Style$Unit_0.call(this, 'EX', 3);\n}\n\ndefineSeed(76, 72, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$4_0);\n_.getType = function getType_2(){\n  return 'ex';\n}\n;\nfunction Style$Unit$5_0(){\n  Style$Unit_0.call(this, 'PT', 4);\n}\n\ndefineSeed(77, 72, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$5_0);\n_.getType = function getType_3(){\n  return 'pt';\n}\n;\nfunction Style$Unit$6_0(){\n  Style$Unit_0.call(this, 'PC', 5);\n}\n\ndefineSeed(78, 72, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$6_0);\n_.getType = function getType_4(){\n  return 'pc';\n}\n;\nfunction Style$Unit$7_0(){\n  Style$Unit_0.call(this, 'IN', 6);\n}\n\ndefineSeed(79, 72, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$7_0);\n_.getType = function getType_5(){\n  return 'in';\n}\n;\nfunction Style$Unit$8_0(){\n  Style$Unit_0.call(this, 'CM', 7);\n}\n\ndefineSeed(80, 72, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$8_0);\n_.getType = function getType_6(){\n  return 'cm';\n}\n;\nfunction Style$Unit$9_0(){\n  Style$Unit_0.call(this, 'MM', 8);\n}\n\ndefineSeed(81, 72, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$9_0);\n_.getType = function getType_7(){\n  return 'mm';\n}\n;\nfunction $clinit_Style$Visibility(){\n  $clinit_Style$Visibility = nullMethod;\n  VISIBLE_0 = new Style$Visibility$1_0;\n  HIDDEN_1 = new Style$Visibility$2_0;\n  $VALUES_4 = initValues(_3Lcom_google_gwt_dom_client_Style$Visibility_2_classLit, makeCastMap([Q$Serializable]), Q$Style$Visibility, [VISIBLE_0, HIDDEN_1]);\n}\n\nfunction Style$Visibility_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_5(){\n  $clinit_Style$Visibility();\n  return $VALUES_4;\n}\n\ndefineSeed(82, 52, makeCastMap([Q$Style$HasCssName, Q$Style$Visibility, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_4, HIDDEN_1, VISIBLE_0;\nfunction Style$Visibility$1_0(){\n  Style$Visibility_0.call(this, 'VISIBLE', 0);\n}\n\ndefineSeed(83, 82, makeCastMap([Q$Style$HasCssName, Q$Style$Visibility, Q$Serializable, Q$Comparable, Q$Enum]), Style$Visibility$1_0);\nfunction Style$Visibility$2_0(){\n  Style$Visibility_0.call(this, 'HIDDEN', 1);\n}\n\ndefineSeed(84, 82, makeCastMap([Q$Style$HasCssName, Q$Style$Visibility, Q$Serializable, Q$Comparable, Q$Enum]), Style$Visibility$2_0);\nfunction $clinit_StyleInjector(){\n  $clinit_StyleInjector = nullMethod;\n  toInject = [];\n  toInjectAtEnd = [];\n  toInjectAtStart = [];\n  flusher = new StyleInjector$1_0;\n}\n\nfunction flush(){\n  $clinit_StyleInjector();\n  var css, maybeReturn, toReturn;\n  toReturn = null;\n  if (toInjectAtStart.length != 0) {\n    css = toInjectAtStart.join('');\n    maybeReturn = $injectStyleSheetAtStart(($clinit_StyleInjector$StyleInjectorImpl() , IMPL), css);\n    !toInjectAtStart && (toReturn = maybeReturn);\n    $setLength(toInjectAtStart, 0);\n  }\n  if (toInject.length != 0) {\n    css = toInject.join('');\n    maybeReturn = $injectStyleSheet(($clinit_StyleInjector$StyleInjectorImpl() , IMPL), css);\n    !toInject && (toReturn = maybeReturn);\n    $setLength(toInject, 0);\n  }\n  if (toInjectAtEnd.length != 0) {\n    css = toInjectAtEnd.join('');\n    maybeReturn = $injectStyleSheet(($clinit_StyleInjector$StyleInjectorImpl() , IMPL), css);\n    !toInjectAtEnd && (toReturn = maybeReturn);\n    $setLength(toInjectAtEnd, 0);\n  }\n  needsInjection = false;\n  return toReturn;\n}\n\nfunction schedule(){\n  $clinit_StyleInjector();\n  if (!needsInjection) {\n    needsInjection = true;\n    $scheduleFinally(($clinit_SchedulerImpl() , INSTANCE_0), flusher);\n  }\n}\n\nvar flusher, needsInjection = false, toInject, toInjectAtEnd, toInjectAtStart;\nfunction StyleInjector$1_0(){\n}\n\ndefineSeed(86, 1, {}, StyleInjector$1_0);\n_.execute_1 = function execute_3(){\n  ($clinit_StyleInjector() , needsInjection) && flush();\n}\n;\nfunction $clinit_StyleInjector$StyleInjectorImpl(){\n  $clinit_StyleInjector$StyleInjectorImpl = nullMethod;\n  IMPL = new StyleInjector$StyleInjectorImpl_0;\n}\n\nfunction $createElement(contents){\n  var style;\n  style = $doc.createElement('style');\n  $setPropertyString(style, 'language', 'text/css');\n  $setInnerText(style, contents);\n  return style;\n}\n\nfunction $getHead(this$static){\n  var elt;\n  if (!this$static.head) {\n    elt = $doc.getElementsByTagName('head')[0];\n    this$static.head = elt;\n  }\n  return this$static.head;\n}\n\nfunction $injectStyleSheet(this$static, contents){\n  var style;\n  style = $createElement(contents);\n  $appendChild($getHead(this$static), style);\n  return style;\n}\n\nfunction $injectStyleSheetAtStart(this$static, contents){\n  var style;\n  style = $createElement(contents);\n  $insertBefore($getHead(this$static), style, this$static.head.firstChild);\n  return style;\n}\n\nfunction StyleInjector$StyleInjectorImpl_0(){\n}\n\ndefineSeed(87, 1, {}, StyleInjector$StyleInjectorImpl_0);\nvar IMPL;\ndefineSeed(93, 1, {});\n_.toString$ = function toString_3(){\n  return 'An event type';\n}\n;\nfunction $overrideSource(this$static, source){\n  this$static.source = source;\n}\n\ndefineSeed(92, 93, {});\n_.revive = function revive(){\n  this.dead = false;\n  this.source = null;\n}\n;\n_.dead = false;\nfunction $setNativeEvent(this$static, nativeEvent){\n  this$static.nativeEvent = nativeEvent;\n}\n\nfunction $setRelativeElement(this$static, relativeElem){\n  this$static.relativeElem = relativeElem;\n}\n\nfunction fireNativeEvent(nativeEvent, handlerSource, relativeElem){\n  var currentNative, currentRelativeElem, type_0, type$iterator, types;\n  if (registered) {\n    types = dynamicCast($unsafeGet(registered, nativeEvent.type), Q$List);\n    if (types) {\n      for (type$iterator = types.iterator(); type$iterator.hasNext();) {\n        type_0 = dynamicCast(type$iterator.next_0(), Q$DomEvent$Type);\n        currentNative = type_0.flyweight.nativeEvent;\n        currentRelativeElem = type_0.flyweight.relativeElem;\n        $setNativeEvent(type_0.flyweight, nativeEvent);\n        $setRelativeElement(type_0.flyweight, relativeElem);\n        $fireEvent_0(handlerSource, type_0.flyweight);\n        $setNativeEvent(type_0.flyweight, currentNative);\n        $setRelativeElement(type_0.flyweight, currentRelativeElem);\n      }\n    }\n  }\n}\n\ndefineSeed(91, 92, {});\n_.getAssociatedType = function getAssociatedType(){\n  return $clinit_ClickEvent() , TYPE;\n}\n;\nvar registered;\ndefineSeed(90, 91, {});\ndefineSeed(89, 90, {});\nfunction $clinit_ClickEvent(){\n  $clinit_ClickEvent = nullMethod;\n  TYPE = new DomEvent$Type_0(new ClickEvent_0);\n}\n\nfunction ClickEvent_0(){\n}\n\ndefineSeed(88, 89, {}, ClickEvent_0);\n_.dispatch = function dispatch(handler){\n  dynamicCast(handler, Q$ClickHandler);\n}\n;\nvar TYPE;\ndefineSeed(96, 1, {});\n_.hashCode$ = function hashCode_2(){\n  return this.index_0;\n}\n;\n_.toString$ = function toString_4(){\n  return 'Event type';\n}\n;\n_.index_0 = 0;\nvar nextHashCode = 0;\nfunction GwtEvent$Type_0(){\n  this.index_0 = ++nextHashCode;\n}\n\ndefineSeed(95, 96, {}, GwtEvent$Type_0);\nfunction DomEvent$Type_0(flyweight){\n  var types;\n  GwtEvent$Type_0.call(this);\n  this.flyweight = flyweight;\n  !registered && (registered = new PrivateMap_0);\n  types = dynamicCast(registered.map_0['click'], Q$List);\n  if (!types) {\n    types = new ArrayList_0;\n    $unsafePut(registered, types);\n  }\n  types.add_0(this);\n  this.name_0 = 'click';\n}\n\ndefineSeed(94, 95, makeCastMap([Q$DomEvent$Type]), DomEvent$Type_0);\nfunction $unsafeGet(this$static, key){\n  return this$static.map_0[key];\n}\n\nfunction $unsafePut(this$static, value_0){\n  this$static.map_0['click'] = value_0;\n}\n\nfunction PrivateMap_0(){\n  this.map_0 = {};\n}\n\ndefineSeed(97, 1, {}, PrivateMap_0);\nfunction CloseEvent_1(){\n}\n\nfunction fire_0(source){\n  var event_0;\n  if (TYPE_0) {\n    event_0 = new CloseEvent_1;\n    source.fireEvent(event_0);\n  }\n}\n\ndefineSeed(99, 92, {}, CloseEvent_1);\n_.dispatch = function dispatch_0(handler){\n  dynamicCast(handler, Q$CloseHandler);\n  detachWidgets();\n}\n;\n_.getAssociatedType = function getAssociatedType_0(){\n  return TYPE_0;\n}\n;\nvar TYPE_0;\nfunction ResizeEvent_0(){\n}\n\nfunction fire_1(source){\n  var event_0;\n  if (TYPE_1) {\n    event_0 = new ResizeEvent_0;\n    $fireEvent(source, event_0);\n  }\n}\n\ndefineSeed(100, 92, {}, ResizeEvent_0);\n_.dispatch = function dispatch_1(handler){\n  dynamicCast(handler, Q$ResizeHandler).onResize(this);\n}\n;\n_.getAssociatedType = function getAssociatedType_1(){\n  return TYPE_1;\n}\n;\nvar TYPE_1;\nfunction $dispatch(handler){\n  handler.this$0.autoHideOnHistoryEvents && $hide(handler.this$0);\n}\n\nfunction ValueChangeEvent_0(){\n}\n\nfunction fire_2(source){\n  var event_0;\n  if (TYPE_2) {\n    event_0 = new ValueChangeEvent_0;\n    $fireEvent(source.handlers, event_0);\n  }\n}\n\ndefineSeed(101, 92, {}, ValueChangeEvent_0);\n_.dispatch = function dispatch_2(handler){\n  $dispatch(dynamicCast(handler, Q$ValueChangeHandler));\n}\n;\n_.getAssociatedType = function getAssociatedType_2(){\n  return TYPE_2;\n}\n;\nvar TYPE_2;\ndefineSeed(103, 1, {});\nfunction $castFireEvent(this$static, event_0){\n  var e;\n  try {\n    $doFire(this$static.real, event_0);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$UmbrellaException)) {\n      e = $e0;\n      throw new UmbrellaException_2(e.causes);\n    }\n     else \n      throw unwrap($e0);\n  }\n}\n\ndefineSeed(102, 103, makeCastMap([Q$HasHandlers]));\nfunction $addHandler(this$static, type_0, handler){\n  return new LegacyHandlerWrapper_0($doAdd(this$static.eventBus, type_0, handler));\n}\n\nfunction $fireEvent(this$static, event_0){\n  var e, oldSource;\n  !event_0.dead || event_0.revive();\n  oldSource = event_0.source;\n  $overrideSource(event_0, this$static.source);\n  try {\n    $doFire(this$static.eventBus, event_0);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$UmbrellaException)) {\n      e = $e0;\n      throw new UmbrellaException_2(e.causes);\n    }\n     else \n      throw unwrap($e0);\n  }\n   finally {\n    oldSource == null?(event_0.dead = true , event_0.source = null):(event_0.source = oldSource);\n  }\n}\n\nfunction $isEventHandled(this$static, e){\n  return $isEventHandled_0(this$static.eventBus, e);\n}\n\nfunction HandlerManager_0(source){\n  HandlerManager_1.call(this, source, false);\n}\n\nfunction HandlerManager_1(source, fireInReverseOrder){\n  this.eventBus = new HandlerManager$Bus_0(fireInReverseOrder);\n  this.source = source;\n}\n\ndefineSeed(104, 1, makeCastMap([Q$HasHandlers]), HandlerManager_0, HandlerManager_1);\n_.fireEvent = function fireEvent(event_0){\n  $fireEvent(this, event_0);\n}\n;\nfunction $defer(this$static, command){\n  !this$static.deferredDeltas && (this$static.deferredDeltas = new ArrayList_0);\n  $add_5(this$static.deferredDeltas, command);\n}\n\nfunction $doAdd(this$static, type_0, handler){\n  if (!type_0) {\n    throw new NullPointerException_1('Cannot add a handler with a null type');\n  }\n  if (!handler) {\n    throw new NullPointerException_1('Cannot add a null handler');\n  }\n  this$static.firingDepth > 0?$defer(this$static, new SimpleEventBus$2_0(this$static, type_0, handler)):$doAddNow(this$static, type_0, handler);\n  return new SimpleEventBus$1_0(this$static, type_0, handler);\n}\n\nfunction $doAddNow(this$static, type_0, handler){\n  var l;\n  l = $ensureHandlerList(this$static, type_0);\n  l.add_0(handler);\n}\n\nfunction $doFire(this$static, event_0){\n  var causes, e, handler, handlers, it;\n  if (!event_0) {\n    throw new NullPointerException_1('Cannot fire null event');\n  }\n  try {\n    ++this$static.firingDepth;\n    handlers = $getDispatchList(this$static, event_0.getAssociatedType());\n    causes = null;\n    it = this$static.isReverseOrder?handlers.listIterator_0(handlers.size_1()):handlers.listIterator();\n    while (this$static.isReverseOrder?it.i > 0:it.i < it.this$0_0.size_1()) {\n      handler = this$static.isReverseOrder?$previous(it):$next_3(it);\n      try {\n        event_0.dispatch(dynamicCast(handler, Q$EventHandler));\n      }\n       catch ($e0) {\n        $e0 = wrap($e0);\n        if (instanceOf($e0, Q$Throwable)) {\n          e = $e0;\n          !causes && (causes = new HashSet_0);\n          $add_6(causes, e);\n        }\n         else \n          throw unwrap($e0);\n      }\n    }\n    if (causes) {\n      throw new UmbrellaException_1(causes);\n    }\n  }\n   finally {\n    --this$static.firingDepth;\n    this$static.firingDepth == 0 && $handleQueuedAddsAndRemoves(this$static);\n  }\n}\n\nfunction $doRemoveNow(this$static, type_0, handler){\n  var l, removed, sourceMap;\n  l = $getHandlerList(this$static, type_0);\n  removed = l.remove_1(handler);\n  removed && l.isEmpty() && (sourceMap = dynamicCast($get_1(this$static.map_0, type_0), Q$Map) , dynamicCast($removeNullSlot(sourceMap), Q$List) , sourceMap.size_0 == 0 && $remove_6(this$static.map_0, type_0) , undefined);\n}\n\nfunction $ensureHandlerList(this$static, type_0){\n  var handlers, sourceMap;\n  sourceMap = dynamicCast($get_1(this$static.map_0, type_0), Q$Map);\n  if (!sourceMap) {\n    sourceMap = new HashMap_0;\n    $put_0(this$static.map_0, type_0, sourceMap);\n  }\n  handlers = dynamicCast(sourceMap.nullSlot, Q$List);\n  if (!handlers) {\n    handlers = new ArrayList_0;\n    $putNullSlot(sourceMap, handlers);\n  }\n  return handlers;\n}\n\nfunction $getDispatchList(this$static, type_0){\n  var directHandlers;\n  directHandlers = $getHandlerList(this$static, type_0);\n  return directHandlers;\n}\n\nfunction $getHandlerList(this$static, type_0){\n  var handlers, sourceMap;\n  sourceMap = dynamicCast($get_1(this$static.map_0, type_0), Q$Map);\n  if (!sourceMap) {\n    return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;\n  }\n  handlers = dynamicCast(sourceMap.nullSlot, Q$List);\n  if (!handlers) {\n    return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;\n  }\n  return handlers;\n}\n\nfunction $handleQueuedAddsAndRemoves(this$static){\n  var c, c$iterator;\n  if (this$static.deferredDeltas) {\n    try {\n      for (c$iterator = new AbstractList$IteratorImpl_0(this$static.deferredDeltas); c$iterator.i < c$iterator.this$0_0.size_1();) {\n        c = dynamicCast($next_3(c$iterator), Q$SimpleEventBus$Command);\n        c.execute_1();\n      }\n    }\n     finally {\n      this$static.deferredDeltas = null;\n    }\n  }\n}\n\nfunction $isEventHandled_0(this$static, eventKey){\n  return $containsKey(this$static.map_0, eventKey);\n}\n\nfunction SimpleEventBus_0(){\n  SimpleEventBus_1.call(this, false);\n}\n\nfunction SimpleEventBus_1(fireInReverseOrder){\n  this.map_0 = new HashMap_0;\n  this.isReverseOrder = fireInReverseOrder;\n}\n\ndefineSeed(106, 103, {}, SimpleEventBus_0);\n_.firingDepth = 0;\n_.isReverseOrder = false;\nfunction $doRemove(this$static, type_0, handler){\n  this$static.firingDepth > 0?$defer(this$static, new SimpleEventBus$3_0(this$static, type_0, handler)):$doRemoveNow(this$static, type_0, handler);\n}\n\nfunction HandlerManager$Bus_0(fireInReverseOrder){\n  SimpleEventBus_1.call(this, fireInReverseOrder);\n}\n\ndefineSeed(105, 106, {}, HandlerManager$Bus_0);\nfunction LegacyHandlerWrapper_0(real){\n  this.real = real;\n}\n\ndefineSeed(107, 1, {}, LegacyHandlerWrapper_0);\nfunction SimpleEventBus_3(){\n  this.real = new SimpleEventBus_0;\n}\n\ndefineSeed(108, 102, makeCastMap([Q$HasHandlers]), SimpleEventBus_3);\n_.fireEvent = function fireEvent_0(event_0){\n  $castFireEvent(this, event_0);\n}\n;\nfunction UmbrellaException_1(causes){\n  RuntimeException_2.call(this, makeMessage(causes), makeCause(causes));\n  this.causes = causes;\n}\n\nfunction makeCause(causes){\n  var iterator;\n  iterator = causes.iterator();\n  if (!iterator.hasNext()) {\n    return null;\n  }\n  return dynamicCast(iterator.next_0(), Q$Throwable);\n}\n\nfunction makeMessage(causes){\n  var b, count, first, t, t$iterator;\n  count = causes.size_1();\n  if (count == 0) {\n    return null;\n  }\n  b = new StringBuilder_1(count == 1?'Exception caught: ':count + ' exceptions caught: ');\n  first = true;\n  for (t$iterator = causes.iterator(); t$iterator.hasNext();) {\n    t = dynamicCast(t$iterator.next_0(), Q$Throwable);\n    first?(first = false):($append(b.impl, '; ') , b);\n    $append_0(b, t.getMessage());\n  }\n  return b.impl.string;\n}\n\ndefineSeed(110, 21, makeCastMap([Q$UmbrellaException, Q$Serializable, Q$Throwable]), UmbrellaException_1);\nfunction UmbrellaException_2(causes){\n  UmbrellaException_1.call(this, causes);\n}\n\ndefineSeed(109, 110, makeCastMap([Q$UmbrellaException, Q$Serializable, Q$Throwable]), UmbrellaException_2);\nfunction $get_Key$type$com$google$gwt$event$shared$SimpleEventBus$_annotation$$none$$(this$static){\n  var created;\n  if (!this$static.singleton_Key$type$com$google$gwt$event$shared$SimpleEventBus$_annotation$$none$$) {\n    created = new SimpleEventBus_3;\n    this$static.singleton_Key$type$com$google$gwt$event$shared$SimpleEventBus$_annotation$$none$$ = created;\n  }\n  return this$static.singleton_Key$type$com$google$gwt$event$shared$SimpleEventBus$_annotation$$none$$;\n}\n\nfunction org_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector_fragment_0(){\n}\n\ndefineSeed(111, 1, {}, org_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector_fragment_0);\n_.singleton_Key$type$com$google$gwt$event$shared$SimpleEventBus$_annotation$$none$$ = null;\nfunction getDirectionOnElement(elem){\n  var dirPropertyValue;\n  dirPropertyValue = $getPropertyString(elem, 'dir');\n  if ($equalsIgnoreCase('rtl', dirPropertyValue)) {\n    return $clinit_HasDirection$Direction() , RTL;\n  }\n   else if ($equalsIgnoreCase('ltr', dirPropertyValue)) {\n    return $clinit_HasDirection$Direction() , LTR;\n  }\n  return $clinit_HasDirection$Direction() , DEFAULT;\n}\n\nfunction setDirectionOnElement(elem, direction){\n  switch (direction.ordinal) {\n    case 0:\n      {\n        $setPropertyString(elem, 'dir', 'rtl');\n        break;\n      }\n\n    case 1:\n      {\n        $setPropertyString(elem, 'dir', 'ltr');\n        break;\n      }\n\n    case 2:\n      {\n        getDirectionOnElement(elem) != ($clinit_HasDirection$Direction() , DEFAULT) && $setPropertyString(elem, 'dir', '');\n        break;\n      }\n\n  }\n}\n\nfunction $clinit_HasDirection$Direction(){\n  $clinit_HasDirection$Direction = nullMethod;\n  RTL = new HasDirection$Direction_0('RTL', 0);\n  LTR = new HasDirection$Direction_0('LTR', 1);\n  DEFAULT = new HasDirection$Direction_0('DEFAULT', 2);\n  $VALUES_5 = initValues(_3Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit, makeCastMap([Q$Serializable]), Q$HasDirection$Direction, [RTL, LTR, DEFAULT]);\n}\n\nfunction HasDirection$Direction_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_6(){\n  $clinit_HasDirection$Direction();\n  return $VALUES_5;\n}\n\ndefineSeed(113, 52, makeCastMap([Q$HasDirection$Direction, Q$Serializable, Q$Comparable, Q$Enum]), HasDirection$Direction_0);\nvar $VALUES_5, DEFAULT, LTR, RTL;\nfunction Array_0(){\n}\n\nfunction createFrom(array, length_0){\n  var a, result;\n  a = array;\n  result = createFromSeed(0, length_0);\n  initValues(a.___clazz$, a.castableTypeMap$, a.queryId$, result);\n  return result;\n}\n\nfunction createFromSeed(seedType, length_0){\n  var array = new Array(length_0);\n  if (seedType == 3) {\n    for (var i = 0; i < length_0; ++i) {\n      array[i] = {l:0, m:0, h:0};\n    }\n  }\n   else if (seedType > 0 && seedType < 3) {\n    var value_0 = seedType == 1?0:false;\n    for (var i = 0; i < length_0; ++i) {\n      array[i] = value_0;\n    }\n  }\n  return array;\n}\n\nfunction initDim(arrayClass, castableTypeMap, queryId, length_0, seedType){\n  var result;\n  result = createFromSeed(seedType, length_0);\n  initValues(arrayClass, castableTypeMap, queryId, result);\n  return result;\n}\n\nfunction initValues(arrayClass, castableTypeMap, queryId, array){\n  $clinit_Array$ExpandoWrapper();\n  wrapArray(array, expandoNames_0, expandoValues_0);\n  array.___clazz$ = arrayClass;\n  array.castableTypeMap$ = castableTypeMap;\n  array.queryId$ = queryId;\n  return array;\n}\n\nfunction setCheck(array, index_0, value_0){\n  if (value_0 != null) {\n    if (array.queryId$ > 0 && !canCastUnsafe(value_0, array.queryId$)) {\n      throw new ArrayStoreException_0;\n    }\n     else if (array.queryId$ == -1 && (value_0.typeMarker$ == nullMethod || canCast(value_0, 1))) {\n      throw new ArrayStoreException_0;\n    }\n     else if (array.queryId$ < -1 && !(value_0.typeMarker$ != nullMethod && !canCast(value_0, 1)) && !canCastUnsafe(value_0, -array.queryId$)) {\n      throw new ArrayStoreException_0;\n    }\n  }\n  return array[index_0] = value_0;\n}\n\ndefineSeed(114, 1, {}, Array_0);\n_.queryId$ = 0;\nfunction $clinit_Array$ExpandoWrapper(){\n  $clinit_Array$ExpandoWrapper = nullMethod;\n  expandoNames_0 = [];\n  expandoValues_0 = [];\n  initExpandos(new Array_0, expandoNames_0, expandoValues_0);\n}\n\nfunction initExpandos(protoType, expandoNames, expandoValues){\n  var i = 0, value_0;\n  for (var name_0 in protoType) {\n    if (value_0 = protoType[name_0]) {\n      expandoNames[i] = name_0;\n      expandoValues[i] = value_0;\n      ++i;\n    }\n  }\n}\n\nfunction wrapArray(array, expandoNames, expandoValues){\n  $clinit_Array$ExpandoWrapper();\n  for (var i = 0, c = expandoNames.length; i < c; ++i) {\n    array[expandoNames[i]] = expandoValues[i];\n  }\n}\n\nvar expandoNames_0, expandoValues_0;\nfunction canCast(src_0, dstId){\n  return src_0.castableTypeMap$ && !!src_0.castableTypeMap$[dstId];\n}\n\nfunction canCastUnsafe(src_0, dstId){\n  return src_0.castableTypeMap$ && src_0.castableTypeMap$[dstId];\n}\n\nfunction dynamicCast(src_0, dstId){\n  if (src_0 != null && !canCastUnsafe(src_0, dstId)) {\n    throw new ClassCastException_0;\n  }\n  return src_0;\n}\n\nfunction dynamicCastJso(src_0){\n  if (src_0 != null && (src_0.typeMarker$ == nullMethod || canCast(src_0, 1))) {\n    throw new ClassCastException_0;\n  }\n  return src_0;\n}\n\nfunction instanceOf(src_0, dstId){\n  return src_0 != null && canCast(src_0, dstId);\n}\n\nfunction instanceOfJso(src_0){\n  return src_0 != null && src_0.typeMarker$ != nullMethod && !canCast(src_0, 1);\n}\n\nfunction isJavaObject(src_0){\n  return src_0.typeMarker$ == nullMethod || canCast(src_0, 1);\n}\n\nfunction maskUndefined(src_0){\n  return src_0 == null?null:src_0;\n}\n\nfunction round_int(x_0){\n  return ~~Math.max(Math.min(x_0, 2147483647), -2147483648);\n}\n\nfunction throwClassCastExceptionUnlessNull(o){\n  if (o != null) {\n    throw new ClassCastException_0;\n  }\n  return null;\n}\n\n",
"function init(){\n  var runtimeValue, root, injector, indexPresenter, indexView, sideBarPresenter;\n  isStatsAvailable() && onModuleStart('com.google.gwt.useragent.client.UserAgentAsserter');\n  runtimeValue = $getRuntimeValue();\n  $equals('gecko1_8', runtimeValue) || ($wnd.alert('ERROR: Possible problem with your *.gwt.xml module file.\\nThe compile time user.agent value (gecko1_8) does not match the runtime user.agent value (' + runtimeValue + '). Expect more errors.\\n') , undefined);\n  isStatsAvailable() && onModuleStart('com.google.gwt.user.client.DocumentModeAsserter');\n  $onModuleLoad();\n  isStatsAvailable() && onModuleStart('org.dselent.course_load_scheduler.client.CourseLoadScheduler');\n  root = get_0();\n  injector = ($clinit_Injector() , INSTANCE_1);\n  indexPresenter = $get_Key$type$org$dselent$course_load_scheduler$client$presenter$impl$IndexPresenterImpl$_annotation$$none$$($getFragment_org_dselent_course_load_scheduler_client_presenter_impl(injector.fieldorg_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector));\n  indexView = indexPresenter.view;\n  sideBarPresenter = $get_Key$type$org$dselent$course_load_scheduler$client$presenter$impl$SideBarPresenterImpl$_annotation$$none$$($getFragment_org_dselent_course_load_scheduler_client_presenter_impl(injector.fieldorg_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector));\n  $get_Key$type$org$dselent$course_load_scheduler$client$presenter$impl$SchedulePresenterImpl$_annotation$$none$$($getFragment_org_dselent_course_load_scheduler_client_presenter_impl(injector.fieldorg_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector));\n  $get_Key$type$org$dselent$course_load_scheduler$client$presenter$impl$SideBarPresenterImpl$_annotation$$none$$($getFragment_org_dselent_course_load_scheduler_client_presenter_impl(injector.fieldorg_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector));\n  $clear(root);\n  $add_2(root, indexPresenter.view);\n  $go(sideBarPresenter, indexView.mainPanel);\n}\n\nfunction getCachableJavaScriptException(e_0){\n  var jse = e_0.__gwt$exception;\n  if (!jse) {\n    jse = new JavaScriptException_0(e_0);\n    try {\n      e_0.__gwt$exception = jse;\n    }\n     catch (e) {\n    }\n  }\n  return jse;\n}\n\nfunction unwrap(e){\n  var jse;\n  if (instanceOf(e, Q$JavaScriptException)) {\n    jse = dynamicCast(e, Q$JavaScriptException);\n    if (jse.e !== ($clinit_JavaScriptException() , NOT_SET)) {\n      return jse.e === NOT_SET?null:jse.e;\n    }\n  }\n  return e;\n}\n\nfunction wrap(e){\n  if (instanceOf(e, Q$Throwable)) {\n    return e;\n  }\n  return e == null?new JavaScriptException_0(null):getCachableJavaScriptException(e);\n}\n\nfunction isStatsAvailable(){\n  return !!$stats;\n}\n\nfunction onModuleStart(mainClassName){\n  return $stats({moduleName:$moduleName, sessionId:$sessionId, subSystem:'startup', evtGroup:'moduleStartup', millis:(new Date).getTime(), type:'onModuleLoadStart', className:mainClassName});\n}\n\nfunction $adjustHorizontalConstraints(this$static, parentWidth, l){\n  var leftPx, rightPx, widthPx;\n  leftPx = l.left * $getUnitSize(this$static, l.leftUnit, false);\n  rightPx = l.right * $getUnitSize(this$static, l.rightUnit, false);\n  widthPx = l.width_0 * $getUnitSize(this$static, l.widthUnit, false);\n  if (l.setLeft && !l.setTargetLeft) {\n    l.setLeft = false;\n    if (l.setWidth) {\n      l.setTargetRight = true;\n      l.sourceRight = (parentWidth - (leftPx + widthPx)) / $getUnitSize(this$static, l.targetRightUnit, false);\n    }\n     else {\n      l.setTargetWidth = true;\n      l.sourceWidth = (parentWidth - (leftPx + rightPx)) / $getUnitSize(this$static, l.targetWidthUnit, false);\n    }\n  }\n   else if (l.setWidth && !l.setTargetWidth) {\n    l.setWidth = false;\n    if (l.setLeft) {\n      l.setTargetRight = true;\n      l.sourceRight = (parentWidth - (leftPx + widthPx)) / $getUnitSize(this$static, l.targetRightUnit, false);\n    }\n     else {\n      l.setTargetLeft = true;\n      l.sourceLeft = (parentWidth - (rightPx + widthPx)) / $getUnitSize(this$static, l.targetLeftUnit, false);\n    }\n  }\n   else if (l.setRight && !l.setTargetRight) {\n    l.setRight = false;\n    if (l.setWidth) {\n      l.setTargetLeft = true;\n      l.sourceLeft = (parentWidth - (rightPx + widthPx)) / $getUnitSize(this$static, l.targetLeftUnit, false);\n    }\n     else {\n      l.setTargetWidth = true;\n      l.sourceWidth = (parentWidth - (leftPx + rightPx)) / $getUnitSize(this$static, l.targetWidthUnit, false);\n    }\n  }\n  l.setLeft = l.setTargetLeft;\n  l.setRight = l.setTargetRight;\n  l.setWidth = l.setTargetWidth;\n  l.leftUnit = l.targetLeftUnit;\n  l.rightUnit = l.targetRightUnit;\n  l.widthUnit = l.targetWidthUnit;\n}\n\nfunction $adjustVerticalConstraints(this$static, parentHeight, l){\n  var bottomPx, heightPx, topPx;\n  topPx = l.top_0 * $getUnitSize(this$static, l.topUnit, true);\n  bottomPx = l.bottom * $getUnitSize(this$static, l.bottomUnit, true);\n  heightPx = l.height * $getUnitSize(this$static, l.heightUnit, true);\n  if (l.setTop && !l.setTargetTop) {\n    l.setTop = false;\n    if (l.setHeight) {\n      l.setTargetBottom = true;\n      l.sourceBottom = (parentHeight - (topPx + heightPx)) / $getUnitSize(this$static, l.targetBottomUnit, true);\n    }\n     else {\n      l.setTargetHeight = true;\n      l.sourceHeight = (parentHeight - (topPx + bottomPx)) / $getUnitSize(this$static, l.targetHeightUnit, true);\n    }\n  }\n   else if (l.setHeight && !l.setTargetHeight) {\n    l.setHeight = false;\n    if (l.setTop) {\n      l.setTargetBottom = true;\n      l.sourceBottom = (parentHeight - (topPx + heightPx)) / $getUnitSize(this$static, l.targetBottomUnit, true);\n    }\n     else {\n      l.setTargetTop = true;\n      l.sourceTop = (parentHeight - (bottomPx + heightPx)) / $getUnitSize(this$static, l.targetTopUnit, true);\n    }\n  }\n   else if (l.setBottom && !l.setTargetBottom) {\n    l.setBottom = false;\n    if (l.setHeight) {\n      l.setTargetTop = true;\n      l.sourceTop = (parentHeight - (bottomPx + heightPx)) / $getUnitSize(this$static, l.targetTopUnit, true);\n    }\n     else {\n      l.setTargetHeight = true;\n      l.sourceHeight = (parentHeight - (topPx + bottomPx)) / $getUnitSize(this$static, l.targetHeightUnit, true);\n    }\n  }\n  l.setTop = l.setTargetTop;\n  l.setBottom = l.setTargetBottom;\n  l.setHeight = l.setTargetHeight;\n  l.topUnit = l.targetTopUnit;\n  l.bottomUnit = l.targetBottomUnit;\n  l.heightUnit = l.targetHeightUnit;\n}\n\nfunction $attachChild(this$static, child){\n  var container, layer;\n  container = $attachChild_0(this$static.parentElem, child);\n  layer = new Layout$Layer_0(container, child);\n  $add_5(this$static.layers, layer);\n  return layer;\n}\n\nfunction $getUnitSize(this$static, unit, vertical){\n  return $getUnitSizeInPixels(this$static.impl, this$static.parentElem, unit, vertical);\n}\n\nfunction $layout(this$static, duration){\n  var l, l$iterator, l$iterator0, parentHeight, parentWidth;\n  !!this$static.animation && $cancel(this$static.animation);\n  if (duration == 0) {\n    for (l$iterator0 = new AbstractList$IteratorImpl_0(this$static.layers); l$iterator0.i < l$iterator0.this$0_0.size_1();) {\n      l = dynamicCast($next_3(l$iterator0), Q$Layout$Layer);\n      l.left = l.sourceLeft = l.targetLeft;\n      l.top_0 = l.sourceTop = l.targetTop;\n      l.right = l.sourceRight = l.targetRight;\n      l.bottom = l.sourceBottom = l.targetBottom;\n      l.width_0 = l.sourceWidth = l.targetWidth;\n      l.height = l.sourceHeight = l.targetHeight;\n      l.setLeft = l.setTargetLeft;\n      l.setTop = l.setTargetTop;\n      l.setRight = l.setTargetRight;\n      l.setBottom = l.setTargetBottom;\n      l.setWidth = l.setTargetWidth;\n      l.setHeight = l.setTargetHeight;\n      l.leftUnit = l.targetLeftUnit;\n      l.topUnit = l.targetTopUnit;\n      l.rightUnit = l.targetRightUnit;\n      l.bottomUnit = l.targetBottomUnit;\n      l.widthUnit = l.targetWidthUnit;\n      l.heightUnit = l.targetHeightUnit;\n      $layout_0(l);\n    }\n    return;\n  }\n  parentWidth = this$static.parentElem.clientWidth | 0;\n  parentHeight = this$static.parentElem.clientHeight | 0;\n  for (l$iterator = new AbstractList$IteratorImpl_0(this$static.layers); l$iterator.i < l$iterator.this$0_0.size_1();) {\n    l = dynamicCast($next_3(l$iterator), Q$Layout$Layer);\n    $adjustHorizontalConstraints(this$static, parentWidth, l);\n    $adjustVerticalConstraints(this$static, parentHeight, l);\n  }\n  this$static.animation = new Layout$1_0(this$static);\n  $run_0(this$static.animation, duration, this$static.parentElem);\n}\n\nfunction $removeChild_0(this$static, layer){\n  $removeChild_1(layer.container, layer.child);\n  $remove_10(this$static.layers, layer);\n}\n\nfunction Layout_0(parent_0){\n  this.impl = new LayoutImpl_0;\n  this.layers = new ArrayList_0;\n  this.parentElem = parent_0;\n  $initParent(this.impl, parent_0);\n}\n\ndefineSeed(123, 1, {}, Layout_0);\nfunction Layout$1_0(this$0){\n  this.this$0 = this$0;\n  Animation_0.call(this);\n}\n\ndefineSeed(124, 3, {}, Layout$1_0);\n_.onCancel = function onCancel_0(){\n  this.this$0.animation = null;\n  $layout(this.this$0, 0);\n}\n;\n_.onComplete = function onComplete_0(){\n  this.this$0.animation = null;\n  $layout(this.this$0, 0);\n}\n;\n_.onUpdate = function onUpdate(progress){\n  var l, l$iterator;\n  for (l$iterator = new AbstractList$IteratorImpl_0(this.this$0.layers); l$iterator.i < l$iterator.this$0_0.size_1();) {\n    l = dynamicCast($next_3(l$iterator), Q$Layout$Layer);\n    l.setTargetLeft && (l.left = l.sourceLeft + (l.targetLeft - l.sourceLeft) * progress);\n    l.setTargetRight && (l.right = l.sourceRight + (l.targetRight - l.sourceRight) * progress);\n    l.setTargetTop && (l.top_0 = l.sourceTop + (l.targetTop - l.sourceTop) * progress);\n    l.setTargetBottom && (l.bottom = l.sourceBottom + (l.targetBottom - l.sourceBottom) * progress);\n    l.setTargetWidth && (l.width_0 = l.sourceWidth + (l.targetWidth - l.sourceWidth) * progress);\n    l.setTargetHeight && (l.height = l.sourceHeight + (l.targetHeight - l.sourceHeight) * progress);\n    $layout_0(l);\n  }\n}\n;\nfunction $setBottomHeight(this$static, bottom, bottomUnit, height, heightUnit){\n  this$static.setTargetBottom = this$static.setTargetHeight = true;\n  this$static.setTargetTop = false;\n  this$static.targetBottom = bottom;\n  this$static.targetHeight = height;\n  this$static.targetBottomUnit = bottomUnit;\n  this$static.targetHeightUnit = heightUnit;\n}\n\nfunction $setLeftRight(this$static, left, leftUnit, right, rightUnit){\n  this$static.setTargetLeft = this$static.setTargetRight = true;\n  this$static.setTargetWidth = false;\n  this$static.targetLeft = left;\n  this$static.targetRight = right;\n  this$static.targetLeftUnit = leftUnit;\n  this$static.targetRightUnit = rightUnit;\n}\n\nfunction $setLeftWidth(this$static, left, leftUnit, width_0, widthUnit){\n  this$static.setTargetLeft = this$static.setTargetWidth = true;\n  this$static.setTargetRight = false;\n  this$static.targetLeft = left;\n  this$static.targetWidth = width_0;\n  this$static.targetLeftUnit = leftUnit;\n  this$static.targetWidthUnit = widthUnit;\n}\n\nfunction $setRightWidth(this$static, right, rightUnit, width_0, widthUnit){\n  this$static.setTargetRight = this$static.setTargetWidth = true;\n  this$static.setTargetLeft = false;\n  this$static.targetRight = right;\n  this$static.targetWidth = width_0;\n  this$static.targetRightUnit = rightUnit;\n  this$static.targetWidthUnit = widthUnit;\n}\n\nfunction $setTopBottom(this$static, top_0, topUnit, bottom, bottomUnit){\n  this$static.setTargetTop = this$static.setTargetBottom = true;\n  this$static.setTargetHeight = false;\n  this$static.targetTop = top_0;\n  this$static.targetBottom = bottom;\n  this$static.targetTopUnit = topUnit;\n  this$static.targetBottomUnit = bottomUnit;\n}\n\nfunction $setTopHeight(this$static, top_0, topUnit, height, heightUnit){\n  this$static.setTargetTop = this$static.setTargetHeight = true;\n  this$static.setTargetBottom = false;\n  this$static.targetTop = top_0;\n  this$static.targetHeight = height;\n  this$static.targetTopUnit = topUnit;\n  this$static.targetHeightUnit = heightUnit;\n}\n\nfunction Layout$Layer_0(container, child){\n  this.targetLeftUnit = ($clinit_Style$Unit() , PX);\n  this.targetTopUnit = PX;\n  this.targetRightUnit = PX;\n  this.targetBottomUnit = PX;\n  this.container = container;\n  this.child = child;\n}\n\ndefineSeed(125, 1, makeCastMap([Q$Layout$Layer]), Layout$Layer_0);\n_.bottom = 0;\n_.height = 0;\n_.left = 0;\n_.right = 0;\n_.setBottom = false;\n_.setHeight = false;\n_.setLeft = false;\n_.setRight = false;\n_.setTargetBottom = true;\n_.setTargetHeight = false;\n_.setTargetLeft = true;\n_.setTargetRight = true;\n_.setTargetTop = true;\n_.setTargetWidth = false;\n_.setTop = false;\n_.setWidth = false;\n_.sourceBottom = 0;\n_.sourceHeight = 0;\n_.sourceLeft = 0;\n_.sourceRight = 0;\n_.sourceTop = 0;\n_.sourceWidth = 0;\n_.targetBottom = 0;\n_.targetHeight = 0;\n_.targetLeft = 0;\n_.targetRight = 0;\n_.targetTop = 0;\n_.targetWidth = 0;\n_.top_0 = 0;\n_.visible = true;\n_.width_0 = 0;\nfunction $clinit_LayoutImpl(){\n  $clinit_LayoutImpl = nullMethod;\n  fixedRuler = createRuler(($clinit_Style$Unit() , CM), CM);\n  $appendChild($doc.body, fixedRuler);\n}\n\nfunction $attachChild_0(parent_0, child){\n  var container;\n  container = $doc.createElement('div');\n  container.appendChild(child);\n  $setPropertyImpl(container.style, 'position', ($clinit_Style$Position() , 'absolute'));\n  $setPropertyImpl(container.style, 'overflow', ($clinit_Style$Overflow() , 'hidden'));\n  $fillParent(child);\n  parent_0.insertBefore(container, null);\n  return container;\n}\n\nfunction $fillParent(elem){\n  var style;\n  style = elem.style;\n  $setPropertyImpl(style, 'position', ($clinit_Style$Position() , 'absolute'));\n  style['left'] = 0 + ($clinit_Style$Unit() , 'px');\n  style['top'] = '0px';\n  style['right'] = '0px';\n  style['bottom'] = '0px';\n}\n\nfunction $getUnitSizeInPixels(this$static, parent_0, unit, vertical){\n  if (!unit) {\n    return 1;\n  }\n  switch (unit.ordinal) {\n    case 1:\n      return (vertical?parent_0.clientHeight | 0:parent_0.clientWidth | 0) / 100;\n    case 2:\n      return ($getSubPixelOffsetWidth(this$static.relativeRuler) | 0) / 10;\n    case 3:\n      return ((this$static.relativeRuler.offsetHeight || 0) | 0) / 10;\n    case 7:\n      return ($getSubPixelOffsetWidth(fixedRuler) | 0) * 0.1;\n    case 8:\n      return ($getSubPixelOffsetWidth(fixedRuler) | 0) * 0.01;\n    case 6:\n      return ($getSubPixelOffsetWidth(fixedRuler) | 0) * 0.254;\n    case 4:\n      return ($getSubPixelOffsetWidth(fixedRuler) | 0) * 0.00353;\n    case 5:\n      return ($getSubPixelOffsetWidth(fixedRuler) | 0) * 0.0423;\n    default:case 0:\n      return 1;\n  }\n}\n\nfunction $initParent(this$static, parent_0){\n  $setPropertyImpl(parent_0.style, 'position', ($clinit_Style$Position() , 'relative'));\n  $appendChild(parent_0, this$static.relativeRuler = createRuler(($clinit_Style$Unit() , EM), EX));\n}\n\nfunction $layout_0(layer){\n  var style;\n  style = layer.container.style;\n  layer.visible?$setPropertyImpl(style, 'display', ''):$setPropertyImpl(style, 'display', ($clinit_Style$Display() , 'none'));\n  style['left'] = layer.setLeft?layer.left + 'px':'';\n  style['top'] = layer.setTop?layer.top_0 + 'px':'';\n  style['right'] = layer.setRight?layer.right + 'px':'';\n  style['bottom'] = layer.setBottom?layer.bottom + 'px':'';\n  style['width'] = layer.setWidth?layer.width_0 + 'px':'';\n  style['height'] = layer.setHeight?layer.height + 'px':'';\n  style = layer.child.style;\n  switch (2) {\n    case 0:\n    case 1:\n    case 2:\n      style['left'] = 0 + ($clinit_Style$Unit() , 'px');\n      style['right'] = '0px';\n  }\n  switch (2) {\n    case 0:\n    case 1:\n    case 2:\n      style['top'] = 0 + ($clinit_Style$Unit() , 'px');\n      style['bottom'] = '0px';\n  }\n}\n\nfunction $removeChild_1(container, child){\n  var style;\n  $removeFromParent(container);\n  $getParentElement(child) == container && $removeFromParent(child);\n  style = child.style;\n  $setPropertyImpl(style, 'position', '');\n  $setPropertyImpl(style, 'left', '');\n  $setPropertyImpl(style, 'top', '');\n  $setPropertyImpl(style, 'width', '');\n  $setPropertyImpl(style, 'height', '');\n}\n\nfunction LayoutImpl_0(){\n  $clinit_LayoutImpl();\n}\n\nfunction createRuler(widthUnit, heightUnit){\n  var ruler, style;\n  ruler = $doc.createElement('div');\n  $setInnerHTML(ruler, '&nbsp;');\n  style = ruler.style;\n  $setPropertyImpl(style, 'position', ($clinit_Style$Position() , 'absolute'));\n  $setPropertyImpl(style, 'zIndex', '-32767');\n  $setPropertyImpl(style, 'top', -20 + heightUnit.getType());\n  $setPropertyImpl(style, 'width', 10 + widthUnit.getType());\n  $setPropertyImpl(style, 'height', 10 + heightUnit.getType());\n  $setPropertyImpl(style, 'visibility', ($clinit_Style$Visibility() , 'hidden'));\n  $set(($clinit_State() , HIDDEN), ruler, initValues(_3Ljava_lang_Boolean_2_classLit, makeCastMap([Q$Serializable]), Q$Boolean, [($clinit_Boolean() , $clinit_Boolean() , TRUE)]));\n  return ruler;\n}\n\ndefineSeed(126, 1, {}, LayoutImpl_0);\nvar fixedRuler;\nfunction $replace(this$static, input_0, replacement){\n  return input_0.replace(this$static, replacement);\n}\n\nfunction OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_0(html){\n  if (html == null) {\n    throw new NullPointerException_1('html is null');\n  }\n  this.html = html;\n}\n\ndefineSeed(128, 1, makeCastMap([Q$SafeHtml, Q$Serializable]), OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_0);\n_.asString = function asString(){\n  return this.html;\n}\n;\n_.equals$ = function equals_1(obj){\n  if (!instanceOf(obj, Q$SafeHtml)) {\n    return false;\n  }\n  return $equals(this.html, dynamicCast(obj, Q$SafeHtml).asString());\n}\n;\n_.hashCode$ = function hashCode_3(){\n  return getHashCode_0(this.html);\n}\n;\nfunction SafeHtmlString_0(){\n  this.html = '';\n}\n\ndefineSeed(129, 1, makeCastMap([Q$SafeHtml, Q$Serializable]), SafeHtmlString_0);\n_.asString = function asString_0(){\n  return this.html;\n}\n;\n_.equals$ = function equals_2(obj){\n  if (!instanceOf(obj, Q$SafeHtml)) {\n    return false;\n  }\n  return $equals(this.html, dynamicCast(obj, Q$SafeHtml).asString());\n}\n;\n_.hashCode$ = function hashCode_4(){\n  return getHashCode_0(this.html);\n}\n;\n_.toString$ = function toString_5(){\n  return 'safe: \"' + this.html + '\"';\n}\n;\nfunction $clinit_SafeHtmlUtils(){\n  $clinit_SafeHtmlUtils = nullMethod;\n  new SafeHtmlString_0;\n  AMP_RE = new RegExp('&', 'g');\n  GT_RE = new RegExp('>', 'g');\n  LT_RE = new RegExp('<', 'g');\n  SQUOT_RE = new RegExp(\"'\", 'g');\n  QUOT_RE = new RegExp('\"', 'g');\n}\n\nfunction htmlEscape(s){\n  $clinit_SafeHtmlUtils();\n  s.indexOf('&') != -1 && (s = $replace(AMP_RE, s, '&amp;'));\n  s.indexOf('<') != -1 && (s = $replace(LT_RE, s, '&lt;'));\n  s.indexOf('>') != -1 && (s = $replace(GT_RE, s, '&gt;'));\n  s.indexOf('\"') != -1 && (s = $replace(QUOT_RE, s, '&quot;'));\n  s.indexOf(\"'\") != -1 && (s = $replace(SQUOT_RE, s, '&#39;'));\n  return s;\n}\n\nvar AMP_RE, GT_RE, LT_RE, QUOT_RE, SQUOT_RE;\nfunction SafeUriString_0(){\n  this.uri_0 = 'WEB-INF/classes/org/dselent/course_load_scheduler/client/view/images/loading.gif';\n}\n\ndefineSeed(131, 1, makeCastMap([Q$SafeUri, Q$SafeUriString]), SafeUriString_0);\n_.equals$ = function equals_3(obj){\n  if (!instanceOf(obj, Q$SafeUri)) {\n    return false;\n  }\n  return $equals(this.uri_0, dynamicCast(dynamicCast(obj, Q$SafeUri), Q$SafeUriString).uri_0);\n}\n;\n_.hashCode$ = function hashCode_5(){\n  return getHashCode_0(this.uri_0);\n}\n;\nfunction $clinit_UriUtils(){\n  $clinit_UriUtils = nullMethod;\n  new RegExp('%5B', 'g');\n  new RegExp('%5D', 'g');\n}\n\nfunction $get(this$static){\n  if (!this$static.element) {\n    this$static.element = $getElementById($doc, this$static.domId);\n    if (!this$static.element) {\n      throw new RuntimeException_1('Cannot find element with id \"' + this$static.domId + '\". Perhaps it is not attached to the document body.');\n    }\n    this$static.element.removeAttribute('id');\n  }\n  return this$static.element;\n}\n\nfunction LazyDomElement_0(domId){\n  this.domId = domId;\n}\n\ndefineSeed(133, 1, {}, LazyDomElement_0);\nfunction attachToDom(element){\n  var origParent, origSibling;\n  ensureHiddenDiv();\n  origParent = $getParentElement(element);\n  origSibling = $getNextSiblingElement(element);\n  $appendChild(hiddenDiv, element);\n  return new UiBinderUtil$TempAttachment_0(origParent, origSibling, element);\n}\n\nfunction ensureHiddenDiv(){\n  if (!hiddenDiv) {\n    hiddenDiv = $doc.createElement('div');\n    setVisible(hiddenDiv, false);\n    $appendChild(getBodyElement(), hiddenDiv);\n  }\n}\n\nfunction orphan(node){\n  $removeChild(node.parentNode, node);\n}\n\nvar hiddenDiv;\nfunction UiBinderUtil$TempAttachment_0(origParent, origSibling, element){\n  this.origParent = origParent;\n  this.origSibling = origSibling;\n  this.element = element;\n}\n\ndefineSeed(135, 1, {}, UiBinderUtil$TempAttachment_0);\nfunction $clinit_DOM(){\n  $clinit_DOM = nullMethod;\n  impl_0 = new DOMImplMozilla_0;\n}\n\nfunction appendChild(parent_0, child){\n  $clinit_DOM();\n  $appendChild(parent_0, ($clinit_PotentialElement() , $resolve(child)));\n}\n\nfunction dispatchEvent_0(evt, elem, listener){\n  $clinit_DOM();\n  var prevCurrentEvent;\n  prevCurrentEvent = currentEvent;\n  currentEvent = evt;\n  elem == sCaptureElem && $eventGetTypeInt(evt.type) == 8192 && (sCaptureElem = null);\n  listener.onBrowserEvent(evt);\n  currentEvent = prevCurrentEvent;\n}\n\nfunction insertChild(parent_0, child){\n  $clinit_DOM();\n  $insertChild(parent_0, ($clinit_PotentialElement() , $resolve(child)), 0);\n}\n\nfunction previewEvent(evt){\n  $clinit_DOM();\n  var ret;\n  ret = fire_3(handlers_0, evt);\n  if (!ret && !!evt) {\n    evt.stopPropagation();\n    $eventPreventDefault(evt);\n  }\n  return ret;\n}\n\nfunction sinkBitlessEvent(elem, eventTypeName){\n  $clinit_DOM();\n  $sinkBitlessEvent(impl_0, elem, eventTypeName);\n}\n\nfunction sinkEvents(elem, eventBits){\n  $clinit_DOM();\n  $sinkEvents(impl_0, elem, eventBits);\n}\n\nvar currentEvent = null, impl_0, sCaptureElem;\nfunction $onModuleLoad(){\n  var allowedModes, currentMode, i;\n  currentMode = $doc.compatMode;\n  allowedModes = initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable]), Q$String, ['CSS1Compat']);\n  for (i = 0; i < allowedModes.length; i++) {\n    if ($equals(allowedModes[i], currentMode)) {\n      return;\n    }\n  }\n  allowedModes.length == 1 && $equals('CSS1Compat', allowedModes[0]) && $equals('BackCompat', currentMode)?\"GWT no longer supports Quirks Mode (document.compatMode=' BackCompat').<br>Make sure your application's host HTML page has a Standards Mode (document.compatMode=' CSS1Compat') doctype,<br>e.g. by using &lt;!doctype html&gt; at the start of your application's HTML page.<br><br>To continue using this unsupported rendering mode and risk layout problems, suppress this message by adding<br>the following line to your*.gwt.xml module file:<br>&nbsp;&nbsp;&lt;extend-configuration-property name=\\\"document.compatMode\\\" value=\\\"\" + currentMode + '\"/&gt;':\"Your *.gwt.xml module configuration prohibits the use of the current doucment rendering mode (document.compatMode=' \" + currentMode + \"').<br>Modify your application's host HTML page doctype, or update your custom 'document.compatMode' configuration property settings.\";\n}\n\nfunction addNativePreviewHandler(handler){\n  $clinit_DOM();\n  $maybeInitializeEventSystem(impl_0);\n  !TYPE_3 && (TYPE_3 = new GwtEvent$Type_0);\n  if (!handlers_0) {\n    handlers_0 = new HandlerManager_1(null, true);\n    singleton = new Event$NativePreviewEvent_0;\n  }\n  return $addHandler(handlers_0, TYPE_3, handler);\n}\n\nfunction getTypeInt(typeName){\n  return $eventGetTypeInt(($clinit_DOM() , typeName));\n}\n\nfunction sinkEvents_0(elem){\n  $clinit_DOM();\n  $sinkEvents(impl_0, elem, 32768);\n}\n\nvar handlers_0;\nfunction $dispatch_0(this$static, handler){\n  $previewNativeEvent(handler.this$0, this$static);\n  singleton.isFirstHandler = false;\n}\n\nfunction $revive(this$static){\n  this$static.dead = false;\n  this$static.source = null;\n  this$static.isCanceled = false;\n  this$static.isConsumed = false;\n  this$static.isFirstHandler = true;\n  this$static.nativeEvent = null;\n}\n\nfunction $setNativeEvent_0(this$static, nativeEvent){\n  this$static.nativeEvent = nativeEvent;\n}\n\nfunction Event$NativePreviewEvent_0(){\n}\n\nfunction fire_3(handlers, nativeEvent){\n  var lastIsCanceled, lastIsConsumed, lastIsFirstHandler, lastNativeEvent, ret;\n  if (!!TYPE_3 && !!handlers && $isEventHandled(handlers, TYPE_3)) {\n    lastIsCanceled = singleton.isCanceled;\n    lastIsConsumed = singleton.isConsumed;\n    lastIsFirstHandler = singleton.isFirstHandler;\n    lastNativeEvent = singleton.nativeEvent;\n    $revive(singleton);\n    $setNativeEvent_0(singleton, nativeEvent);\n    $fireEvent(handlers, singleton);\n    ret = !(singleton.isCanceled && !singleton.isConsumed);\n    singleton.isCanceled = lastIsCanceled;\n    singleton.isConsumed = lastIsConsumed;\n    singleton.isFirstHandler = lastIsFirstHandler;\n    singleton.nativeEvent = lastNativeEvent;\n    return ret;\n  }\n  return true;\n}\n\ndefineSeed(140, 92, {}, Event$NativePreviewEvent_0);\n_.dispatch = function dispatch_3(handler){\n  $dispatch_0(this, dynamicCast(handler, Q$Event$NativePreviewHandler));\n}\n;\n_.getAssociatedType = function getAssociatedType_3(){\n  return TYPE_3;\n}\n;\n_.revive = function revive_0(){\n  $revive(this);\n}\n;\n_.isCanceled = false;\n_.isConsumed = false;\n_.isFirstHandler = false;\nvar TYPE_3, singleton;\nfunction $clinit_History(){\n  $clinit_History = nullMethod;\n  impl_1 = new HistoryImplMozilla_0;\n  $init(impl_1)?null:(impl_1 = null);\n}\n\nfunction addValueChangeHandler(handler){\n  $clinit_History();\n  return impl_1?$addValueChangeHandler(impl_1, handler):null;\n}\n\nvar impl_1;\nfunction $clinit_Window(){\n  $clinit_Window = nullMethod;\n  impl_2 = new WindowImplMozilla_0;\n}\n\nfunction addCloseHandler(handler){\n  $clinit_Window();\n  maybeInitializeCloseHandlers();\n  return addHandler(TYPE_0?TYPE_0:(TYPE_0 = new GwtEvent$Type_0), handler);\n}\n\nfunction addHandler(type_0, handler){\n  return $addHandler((!handlers_1 && (handlers_1 = new Window$WindowHandlers_0) , handlers_1), type_0, handler);\n}\n\nfunction addResizeHandler(handler){\n  $clinit_Window();\n  maybeInitializeCloseHandlers();\n  maybeInitializeResizeHandlers();\n  return addHandler((!TYPE_1 && (TYPE_1 = new GwtEvent$Type_0) , TYPE_1), handler);\n}\n\nfunction maybeInitializeCloseHandlers(){\n  if (!closeHandlersInitialized) {\n    $initWindowCloseHandler(impl_2);\n    closeHandlersInitialized = true;\n  }\n}\n\nfunction maybeInitializeResizeHandlers(){\n  if (!resizeHandlersInitialized) {\n    $initWindowResizeHandler(impl_2);\n    resizeHandlersInitialized = true;\n  }\n}\n\nfunction onClosing(){\n  $clinit_Window();\n  var event_0;\n  if (closeHandlersInitialized) {\n    event_0 = new Window$ClosingEvent_0;\n    !!handlers_1 && $fireEvent(handlers_1, event_0);\n    return null;\n  }\n  return null;\n}\n\nfunction onResize(){\n  $clinit_Window();\n  var height, width_0;\n  if (resizeHandlersInitialized) {\n    width_0 = $getClientWidth($doc);\n    height = $getClientHeight($doc);\n    if (lastResizeWidth != width_0 || lastResizeHeight != height) {\n      lastResizeWidth = width_0;\n      lastResizeHeight = height;\n      fire_1((!handlers_1 && (handlers_1 = new Window$WindowHandlers_0) , handlers_1));\n    }\n  }\n}\n\nvar closeHandlersInitialized = false, handlers_1, impl_2, lastResizeHeight = 0, lastResizeWidth = 0, resizeHandlersInitialized = false;\nfunction $clinit_Window$ClosingEvent(){\n  $clinit_Window$ClosingEvent = nullMethod;\n  TYPE_4 = new GwtEvent$Type_0;\n}\n\nfunction Window$ClosingEvent_0(){\n  $clinit_Window$ClosingEvent();\n}\n\ndefineSeed(143, 92, {}, Window$ClosingEvent_0);\n_.dispatch = function dispatch_4(handler){\n  throwClassCastExceptionUnlessNull(handler);\n  null.nullMethod();\n}\n;\n_.getAssociatedType = function getAssociatedType_4(){\n  return TYPE_4;\n}\n;\nvar TYPE_4;\nfunction Window$WindowHandlers_0(){\n  HandlerManager_0.call(this, null);\n}\n\ndefineSeed(144, 104, makeCastMap([Q$HasHandlers]), Window$WindowHandlers_0);\nfunction $eventGetTypeInt(eventType){\n  switch (eventType) {\n    case 'blur':\n      return 4096;\n    case 'change':\n      return 1024;\n    case 'click':\n      return 1;\n    case 'dblclick':\n      return 2;\n    case 'focus':\n      return 2048;\n    case 'keydown':\n      return 128;\n    case 'keypress':\n      return 256;\n    case 'keyup':\n      return 512;\n    case 'load':\n      return 32768;\n    case 'losecapture':\n      return 8192;\n    case 'mousedown':\n      return 4;\n    case 'mousemove':\n      return 64;\n    case 'mouseout':\n      return 32;\n    case 'mouseover':\n      return 16;\n    case 'mouseup':\n      return 8;\n    case 'scroll':\n      return 16384;\n    case 'error':\n      return 65536;\n    case 'DOMMouseScroll':\n    case 'mousewheel':\n      return 131072;\n    case 'contextmenu':\n      return 262144;\n    case 'paste':\n      return 524288;\n    case 'touchstart':\n      return 1048576;\n    case 'touchmove':\n      return 2097152;\n    case 'touchend':\n      return 4194304;\n    case 'touchcancel':\n      return 8388608;\n    case 'gesturestart':\n      return 16777216;\n    case 'gesturechange':\n      return 33554432;\n    case 'gestureend':\n      return 67108864;\n    default:return -1;\n  }\n}\n\nfunction $maybeInitializeEventSystem(this$static){\n  if (!eventSystemIsInitialized) {\n    $initEventSystem();\n    $initSyntheticMouseUpEvents();\n    new DOMImpl$1_0(this$static);\n    eventSystemIsInitialized = true;\n  }\n}\n\nfunction cleanupDOM(dom){\n  var allElements, elem, i, listener;\n  allElements = $doc.getElementsByTagName('*');\n  for (i = 0; i < allElements.length; i++) {\n    elem = allElements[i];\n    listener = getEventListener(elem);\n    if (listener) {\n      $sinkEvents(dom, elem, 0);\n      setEventListener(elem, null);\n    }\n    maybeRemoveDisposableEvent(elem);\n  }\n}\n\nfunction getEventListener(elem){\n  var maybeListener = elem.__listener;\n  return !instanceOfJso(maybeListener) && instanceOf(maybeListener, Q$EventListener)?maybeListener:null;\n}\n\n",
"function maybeRemoveDisposableEvent(elem){\n  var diEvents = elem.__gwt_disposeEvent;\n  if (diEvents) {\n    for (var i = 0, l = diEvents.length; i < l; i++) {\n      var diEvent = diEvents[i];\n      elem.removeEventListener(diEvent.event, diEvent.handler, diEvent.capture);\n      elem.__gwt_disposeEvent = null;\n    }\n  }\n}\n\nfunction setEventListener(elem, listener){\n  elem.__listener = listener;\n}\n\ndefineSeed(145, 1, {});\nvar eventSystemIsInitialized = false;\nfunction DOMImpl$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(146, 1, {}, DOMImpl$1_0);\nfunction $clinit_DOMImplStandard(){\n  $clinit_DOMImplStandard = nullMethod;\n  bitlessEventDispatchers = {_default_:dispatchEvent_2, dragenter:dispatchDragEvent, dragover:dispatchDragEvent};\n  captureEventDispatchers = {click:dispatchCapturedMouseEvent, dblclick:dispatchCapturedMouseEvent, mousedown:dispatchCapturedMouseEvent, mouseup:dispatchCapturedMouseEvent, mousemove:dispatchCapturedMouseEvent, mouseover:dispatchCapturedMouseEvent, mouseout:dispatchCapturedMouseEvent, mousewheel:dispatchCapturedMouseEvent, keydown:dispatchCapturedEvent, keyup:dispatchCapturedEvent, keypress:dispatchCapturedEvent, touchstart:dispatchCapturedMouseEvent, touchend:dispatchCapturedMouseEvent, touchmove:dispatchCapturedMouseEvent, touchcancel:dispatchCapturedMouseEvent, gesturestart:dispatchCapturedMouseEvent, gestureend:dispatchCapturedMouseEvent, gesturechange:dispatchCapturedMouseEvent};\n}\n\nfunction $disposeEventSystem(){\n  var foreach = foreach_0;\n  foreach(captureEvents, function(e, fn){\n    $wnd.removeEventListener(e, fn, true);\n  }\n  );\n}\n\nfunction $initEventSystem(){\n  dispatchEvent_1 = $entry(dispatchEvent_2);\n  dispatchUnhandledEvent = $entry(dispatchUnhandledEvent_0);\n  var foreach = foreach_0;\n  var bitlessEvents = bitlessEventDispatchers;\n  foreach(bitlessEvents, function(e, fn){\n    bitlessEvents[e] = $entry(fn);\n  }\n  );\n  var captureEvents_0 = captureEventDispatchers;\n  foreach(captureEvents_0, function(e, fn){\n    captureEvents_0[e] = $entry(fn);\n  }\n  );\n  foreach(captureEvents_0, function(e, fn){\n    $wnd.addEventListener(e, fn, true);\n  }\n  );\n}\n\nfunction $insertChild(parent_0, toAdd, index_0){\n  var count = 0, child = parent_0.firstChild, before = null;\n  while (child) {\n    if (child.nodeType == 1) {\n      if (count == index_0) {\n        before = child;\n        break;\n      }\n      ++count;\n    }\n    child = child.nextSibling;\n  }\n  parent_0.insertBefore(toAdd, before);\n}\n\nfunction $sinkBitlessEvent(this$static, elem, eventTypeName){\n  var dispatchMap, dispatcher;\n  $maybeInitializeEventSystem(this$static);\n  dispatchMap = bitlessEventDispatchers;\n  dispatcher = dispatchMap[eventTypeName] || dispatchMap['_default_'];\n  elem.addEventListener(eventTypeName, dispatcher, false);\n}\n\nfunction $sinkEventsImpl(elem, bits){\n  var chMask = (elem.__eventBits || 0) ^ bits;\n  elem.__eventBits = bits;\n  if (!chMask)\n    return;\n  chMask & 1 && (elem.onclick = bits & 1?dispatchEvent_1:null);\n  chMask & 2 && (elem.ondblclick = bits & 2?dispatchEvent_1:null);\n  chMask & 4 && (elem.onmousedown = bits & 4?dispatchEvent_1:null);\n  chMask & 8 && (elem.onmouseup = bits & 8?dispatchEvent_1:null);\n  chMask & 16 && (elem.onmouseover = bits & 16?dispatchEvent_1:null);\n  chMask & 32 && (elem.onmouseout = bits & 32?dispatchEvent_1:null);\n  chMask & 64 && (elem.onmousemove = bits & 64?dispatchEvent_1:null);\n  chMask & 128 && (elem.onkeydown = bits & 128?dispatchEvent_1:null);\n  chMask & 256 && (elem.onkeypress = bits & 256?dispatchEvent_1:null);\n  chMask & 512 && (elem.onkeyup = bits & 512?dispatchEvent_1:null);\n  chMask & 1024 && (elem.onchange = bits & 1024?dispatchEvent_1:null);\n  chMask & 2048 && (elem.onfocus = bits & 2048?dispatchEvent_1:null);\n  chMask & 4096 && (elem.onblur = bits & 4096?dispatchEvent_1:null);\n  chMask & 8192 && (elem.onlosecapture = bits & 8192?dispatchEvent_1:null);\n  chMask & 16384 && (elem.onscroll = bits & 16384?dispatchEvent_1:null);\n  chMask & 32768 && (elem.onload = bits & 32768?dispatchUnhandledEvent:null);\n  chMask & 65536 && (elem.onerror = bits & 65536?dispatchEvent_1:null);\n  chMask & 131072 && (elem.onmousewheel = bits & 131072?dispatchEvent_1:null);\n  chMask & 262144 && (elem.oncontextmenu = bits & 262144?dispatchEvent_1:null);\n  chMask & 524288 && (elem.onpaste = bits & 524288?dispatchEvent_1:null);\n  chMask & 1048576 && (elem.ontouchstart = bits & 1048576?dispatchEvent_1:null);\n  chMask & 2097152 && (elem.ontouchmove = bits & 2097152?dispatchEvent_1:null);\n  chMask & 4194304 && (elem.ontouchend = bits & 4194304?dispatchEvent_1:null);\n  chMask & 8388608 && (elem.ontouchcancel = bits & 8388608?dispatchEvent_1:null);\n  chMask & 16777216 && (elem.ongesturestart = bits & 16777216?dispatchEvent_1:null);\n  chMask & 33554432 && (elem.ongesturechange = bits & 33554432?dispatchEvent_1:null);\n  chMask & 67108864 && (elem.ongestureend = bits & 67108864?dispatchEvent_1:null);\n}\n\nfunction dispatchCapturedEvent(evt){\n  previewEvent(evt);\n}\n\nfunction dispatchCapturedMouseEvent(evt){\n  $clinit_DOMImplStandard();\n  !previewEvent(evt);\n  return;\n}\n\nfunction dispatchDragEvent(evt){\n  $eventPreventDefault(evt);\n  dispatchEvent_2(evt);\n}\n\nfunction dispatchEvent_2(evt){\n  var element;\n  element = getFirstAncestorWithListener(evt);\n  if (!element) {\n    return;\n  }\n  dispatchEvent_0(evt, element.nodeType != 1?null:element, getEventListener(element));\n}\n\nfunction dispatchUnhandledEvent_0(evt){\n  var element;\n  element = evt.currentTarget;\n  $setPropertyString(element, '__gwtLastUnhandledEvent', evt.type);\n  dispatchEvent_2(evt);\n}\n\nfunction getFirstAncestorWithListener(evt){\n  var curElem;\n  curElem = evt.currentTarget;\n  while (!!curElem && !getEventListener(curElem)) {\n    curElem = curElem.parentNode;\n  }\n  return curElem;\n}\n\ndefineSeed(148, 145, {});\nvar bitlessEventDispatchers, captureElem, captureEventDispatchers, dispatchEvent_1, dispatchUnhandledEvent;\nfunction $clinit_DOMImplMozilla(){\n  $clinit_DOMImplMozilla = nullMethod;\n  $clinit_DOMImplStandard();\n  captureEventDispatchers['DOMMouseScroll'] = dispatchCapturedMouseEvent;\n}\n\nfunction $initSyntheticMouseUpEvents(){\n  $wnd.addEventListener('mouseout', $entry(function(evt){\n    var cap = ($clinit_DOMImplStandard() , captureElem);\n    if (cap && !evt.relatedTarget) {\n      if ('html' == evt.target.tagName.toLowerCase()) {\n        var muEvent = $doc.createEvent('MouseEvents');\n        muEvent.initMouseEvent('mouseup', true, true, $wnd, 0, evt.screenX, evt.screenY, evt.clientX, evt.clientY, evt.ctrlKey, evt.altKey, evt.shiftKey, evt.metaKey, evt.button, null);\n        cap.dispatchEvent(muEvent);\n      }\n    }\n  }\n  ), true);\n}\n\nfunction $sinkEvents(this$static, elem, bits){\n  $maybeInitializeEventSystem(this$static);\n  $sinkEventsImpl(elem, bits);\n  bits & 131072 && elem.addEventListener('DOMMouseScroll', ($clinit_DOMImplStandard() , dispatchEvent_1), false);\n}\n\nfunction DOMImplMozilla_0(){\n  $clinit_DOMImplMozilla();\n}\n\ndefineSeed(147, 148, {}, DOMImplMozilla_0);\nfunction $get_0(this$static, elem){\n  var index_0;\n  index_0 = getIndex(elem);\n  if (index_0 < 0) {\n    return null;\n  }\n  return dynamicCast($get_2(this$static.uiObjectList, index_0), Q$UIObject);\n}\n\nfunction $put(this$static, uiObject){\n  var index_0;\n  if (!this$static.freeList) {\n    index_0 = this$static.uiObjectList.size_0;\n    $add_5(this$static.uiObjectList, uiObject);\n  }\n   else {\n    index_0 = this$static.freeList.index_0;\n    $set_0(this$static.uiObjectList, index_0, uiObject);\n    this$static.freeList = this$static.freeList.next;\n  }\n  ($clinit_DOM() , uiObject.element)['__uiObjectID'] = index_0;\n}\n\nfunction $removeByElement(this$static, elem){\n  var index_0;\n  index_0 = getIndex(elem);\n  elem['__uiObjectID'] = null;\n  $set_0(this$static.uiObjectList, index_0, null);\n  this$static.freeList = new ElementMapperImpl$FreeNode_0(index_0, this$static.freeList);\n}\n\nfunction ElementMapperImpl_0(){\n  this.uiObjectList = new ArrayList_0;\n}\n\nfunction getIndex(elem){\n  var index_0 = elem['__uiObjectID'];\n  return index_0 == null?-1:index_0;\n}\n\ndefineSeed(149, 1, {}, ElementMapperImpl_0);\n_.freeList = null;\nfunction ElementMapperImpl$FreeNode_0(index_0, next){\n  this.index_0 = index_0;\n  this.next = next;\n}\n\ndefineSeed(150, 1, {}, ElementMapperImpl$FreeNode_0);\n_.index_0 = 0;\nfunction foreach_0(map_0, fn){\n  for (var e in map_0) {\n    map_0.hasOwnProperty(e) && fn(e, map_0[e]);\n  }\n}\n\nfunction $addValueChangeHandler(this$static, handler){\n  return $addHandler(this$static.handlers, (!TYPE_2 && (TYPE_2 = new GwtEvent$Type_0) , TYPE_2), handler);\n}\n\nfunction $decodeFragment(encodedFragment){\n  return decodeURI(encodedFragment.replace('%23', '#'));\n}\n\nfunction setToken(token){\n  token_1 = token;\n}\n\ndefineSeed(152, 1, makeCastMap([Q$HasHandlers]));\n_.decodeFragment = function decodeFragment(encodedFragment){\n  return $decodeFragment(encodedFragment);\n}\n;\n_.fireEvent = function fireEvent_1(event_0){\n  $fireEvent(this.handlers, event_0);\n}\n;\n_.newItemOnEvent = function newItemOnEvent(historyToken){\n  historyToken = historyToken == null?'':historyToken;\n  if (!$equals(historyToken, token_1 == null?'':token_1)) {\n    token_1 = historyToken;\n    fire_2(this);\n  }\n}\n;\nvar token_1 = '';\nfunction $init(this$static){\n  var token_0 = '';\n  var hash_0 = $wnd.location.hash;\n  hash_0.length > 0 && (token_0 = this$static.decodeFragment(hash_0.substring(1)));\n  setToken(token_0);\n  var historyImpl = this$static;\n  var checkHistory = $entry(function(){\n    var token = '', hash = $wnd.location.hash;\n    hash.length > 0 && (token = historyImpl.decodeFragment(hash.substring(1)));\n    historyImpl.newItemOnEvent(token);\n  }\n  );\n  var checkHistoryCycle = function(){\n    setTimeout_0(checkHistoryCycle, 250);\n    checkHistory();\n  }\n  ;\n  checkHistoryCycle();\n  return true;\n}\n\ndefineSeed(154, 152, makeCastMap([Q$HasHandlers]));\nfunction HistoryImplMozilla_0(){\n  this.handlers = new HandlerManager_0(null);\n}\n\ndefineSeed(153, 154, makeCastMap([Q$HasHandlers]), HistoryImplMozilla_0);\n_.decodeFragment = function decodeFragment_0(encodedFragment){\n  if ($wnd.navigator.userAgent.indexOf('Trident') != -1) {\n    return $decodeFragment(encodedFragment);\n  }\n  return encodedFragment;\n}\n;\nfunction $initWindowCloseHandler(this$static){\n  var oldOnBeforeUnload = this$static.oldOnBeforeUnload = $wnd.onbeforeunload;\n  var oldOnUnload = this$static.oldOnUnload = $wnd.onunload;\n  $wnd.onbeforeunload = function(evt){\n    var ret, oldRet;\n    try {\n      ret = $entry(onClosing)();\n    }\n     finally {\n      oldRet = oldOnBeforeUnload && oldOnBeforeUnload(evt);\n    }\n    if (ret != null) {\n      return ret;\n    }\n    if (oldRet != null) {\n      return oldRet;\n    }\n  }\n  ;\n  $wnd.onunload = $entry(function(evt){\n    try {\n      $clinit_Window();\n      closeHandlersInitialized && fire_0((!handlers_1 && (handlers_1 = new Window$WindowHandlers_0) , handlers_1));\n    }\n     finally {\n      oldOnUnload && oldOnUnload(evt);\n      $wnd.onresize = null;\n      $wnd.onscroll = null;\n      $wnd.onbeforeunload = null;\n      $wnd.onunload = null;\n    }\n  }\n  );\n}\n\nfunction $initWindowResizeHandler(this$static){\n  var oldOnResize = this$static.oldOnResize = $wnd.onresize;\n  $wnd.onresize = $entry(function(evt){\n    try {\n      onResize();\n    }\n     finally {\n      oldOnResize && oldOnResize(evt);\n    }\n  }\n  );\n}\n\ndefineSeed(155, 1, {});\nfunction WindowImplMozilla_0(){\n}\n\ndefineSeed(156, 155, {}, WindowImplMozilla_0);\nfunction $getElement(this$static){\n  return $clinit_DOM() , this$static.element;\n}\n\nfunction $replaceNode(node, newNode){\n  var p = node.parentNode;\n  if (!p) {\n    return;\n  }\n  p.insertBefore(newNode, node);\n  p.removeChild(node);\n}\n\nfunction $resolvePotentialElement(){\n  throw new UnsupportedOperationException_0;\n}\n\nfunction $setElement(this$static, elem){\n  $setElement_0(this$static, ($clinit_DOM() , elem));\n}\n\nfunction $setElement_0(this$static, elem){\n  this$static.element = elem;\n}\n\nfunction $sinkBitlessEvent_0(this$static, eventTypeName){\n  sinkBitlessEvent(($clinit_DOM() , this$static.element), eventTypeName);\n}\n\nfunction setStyleName(elem, style){\n  if (!elem) {\n    throw new RuntimeException_1('Null widget handle. If you are creating a composite, ensure that initWidget() has been called.');\n  }\n  style = $trim(style);\n  if (style.length == 0) {\n    throw new IllegalArgumentException_0('Style names cannot be empty');\n  }\n  $addClassName(elem, style);\n}\n\nfunction setVisible(elem, visible){\n  elem.style.display = visible?'':'none';\n  visible?elem.removeAttribute('aria-hidden'):elem.setAttribute('aria-hidden', 'true');\n}\n\ndefineSeed(161, 1, makeCastMap([Q$HasVisibility, Q$UIObject]));\n_.resolvePotentialElement = function resolvePotentialElement(){\n  return $resolvePotentialElement();\n}\n;\n_.toString$ = function toString_6(){\n  if (!this.element) {\n    return '(null handle)';\n  }\n  return $toString(($clinit_DOM() , this.element));\n}\n;\nfunction $addDomHandler(this$static, handler, type_0){\n  var typeInt;\n  typeInt = getTypeInt(type_0.name_0);\n  typeInt == -1?$sinkBitlessEvent_0(this$static, type_0.name_0):this$static.eventsToSink == -1?sinkEvents(($clinit_DOM() , this$static.element), typeInt | (this$static.element.__eventBits || 0)):(this$static.eventsToSink |= typeInt);\n  return $addHandler(!this$static.handlerManager?(this$static.handlerManager = new HandlerManager_0(this$static)):this$static.handlerManager, type_0, handler);\n}\n\nfunction $fireEvent_0(this$static, event_0){\n  !!this$static.handlerManager && $fireEvent(this$static.handlerManager, event_0);\n}\n\nfunction $onAttach(this$static){\n  var bitsToAdd;\n  if (this$static.isAttached()) {\n    throw new IllegalStateException_1(\"Should only call onAttach when the widget is detached from the browser's document\");\n  }\n  this$static.attached = true;\n  $clinit_DOM();\n  setEventListener(this$static.element, this$static);\n  bitsToAdd = this$static.eventsToSink;\n  this$static.eventsToSink = -1;\n  bitsToAdd > 0 && (this$static.eventsToSink == -1?sinkEvents(this$static.element, bitsToAdd | (this$static.element.__eventBits || 0)):(this$static.eventsToSink |= bitsToAdd));\n  this$static.doAttachChildren();\n  this$static.onLoad();\n}\n\nfunction $onBrowserEvent(this$static, event_0){\n  var related;\n  switch ($clinit_DOM() , $eventGetTypeInt(event_0.type)) {\n    case 16:\n    case 32:\n      related = $eventGetRelatedTarget(event_0);\n      if (!!related && $isOrHasChild(this$static.element, related)) {\n        return;\n      }\n\n  }\n  fireNativeEvent(event_0, this$static, this$static.element);\n}\n\nfunction $onDetach(this$static){\n  if (!this$static.isAttached()) {\n    throw new IllegalStateException_1(\"Should only call onDetach when the widget is attached to the browser's document\");\n  }\n  try {\n    this$static.onUnload();\n  }\n   finally {\n    try {\n      this$static.doDetachChildren();\n    }\n     finally {\n      $clinit_DOM();\n      setEventListener(this$static.element, null);\n      this$static.attached = false;\n    }\n  }\n}\n\nfunction $removeFromParent_0(this$static){\n  if (!this$static.parent_0) {\n    $clinit_RootPanel();\n    $contains_0(widgetsToDetach, this$static) && detachNow(this$static);\n  }\n   else if (instanceOf(this$static.parent_0, Q$HasWidgets)) {\n    dynamicCast(this$static.parent_0, Q$HasWidgets).remove(this$static);\n  }\n   else if (this$static.parent_0) {\n    throw new IllegalStateException_1(\"This widget's parent does not implement HasWidgets\");\n  }\n}\n\nfunction $replaceElement(this$static, elem){\n  this$static.attached && ($clinit_DOM() , setEventListener(this$static.element, null));\n  !!this$static.element && $replaceNode(this$static.element, elem);\n  this$static.element = elem;\n  this$static.attached && ($clinit_DOM() , setEventListener(this$static.element, this$static));\n}\n\nfunction $setParent(this$static, parent_0){\n  var oldParent;\n  oldParent = this$static.parent_0;\n  if (!parent_0) {\n    try {\n      !!oldParent && oldParent.isAttached() && this$static.onDetach();\n    }\n     finally {\n      this$static.parent_0 = null;\n    }\n  }\n   else {\n    if (oldParent) {\n      throw new IllegalStateException_1('Cannot set a new parent without first clearing the old parent');\n    }\n    this$static.parent_0 = parent_0;\n    parent_0.isAttached() && this$static.onAttach();\n  }\n}\n\nfunction $sinkEvents_0(this$static, eventBitsToAdd){\n  this$static.eventsToSink == -1?sinkEvents(($clinit_DOM() , this$static.element), eventBitsToAdd | (this$static.element.__eventBits || 0)):(this$static.eventsToSink |= eventBitsToAdd);\n}\n\ndefineSeed(160, 161, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.doAttachChildren = function doAttachChildren(){\n}\n;\n_.doDetachChildren = function doDetachChildren(){\n}\n;\n_.fireEvent = function fireEvent_2(event_0){\n  $fireEvent_0(this, event_0);\n}\n;\n_.isAttached = function isAttached(){\n  return this.attached;\n}\n;\n_.onAttach = function onAttach(){\n  $onAttach(this);\n}\n;\n_.onBrowserEvent = function onBrowserEvent(event_0){\n  $onBrowserEvent(this, event_0);\n}\n;\n_.onDetach = function onDetach(){\n  $onDetach(this);\n}\n;\n_.onLoad = function onLoad(){\n}\n;\n_.onUnload = function onUnload(){\n}\n;\n_.attached = false;\n_.eventsToSink = 0;\nfunction $clear(this$static){\n  var it;\n  it = new WidgetCollection$WidgetIterator_0(this$static.children);\n  while (it.index_0 < it.this$0.size_0) {\n    $next_1(it);\n    $remove_5(it);\n  }\n}\n\ndefineSeed(159, 160, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.doAttachChildren = function doAttachChildren_0(){\n  tryCommand(this, ($clinit_AttachDetachException() , attachCommand));\n}\n;\n_.doDetachChildren = function doDetachChildren_0(){\n  tryCommand(this, ($clinit_AttachDetachException() , detachCommand));\n}\n;\nfunction $add(this$static, child, container){\n  $removeFromParent_0(child);\n  $add_4(this$static.children, child);\n  $clinit_DOM();\n  appendChild(container, child.element);\n  $setParent(child, this$static);\n}\n\nfunction $remove(this$static, w){\n  var elem;\n  if (w.parent_0 != this$static) {\n    return false;\n  }\n  try {\n    $setParent(w, null);\n  }\n   finally {\n    elem = ($clinit_DOM() , w.element);\n    $removeChild($getParentElement(elem), elem);\n    $remove_4(this$static.children, w);\n  }\n  return true;\n}\n\nfunction ComplexPanel_0(){\n  this.children = new WidgetCollection_0(this);\n}\n\ndefineSeed(158, 159, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.iterator = function iterator_0(){\n  return new WidgetCollection$WidgetIterator_0(this.children);\n}\n;\n_.remove = function remove(w){\n  return $remove(this, w);\n}\n;\nfunction $add_0(this$static, w){\n  $add(this$static, w, ($clinit_DOM() , this$static.element));\n}\n\nfunction $remove_0(this$static, w){\n  var removed;\n  removed = $remove(this$static, w);\n  removed && changeToStaticPositioning(($clinit_DOM() , w.element));\n  return removed;\n}\n\nfunction changeToStaticPositioning(elem){\n  $setPropertyImpl(elem.style, 'left', '');\n  $setPropertyImpl(elem.style, 'top', '');\n  $setPropertyImpl(elem.style, 'position', '');\n}\n\ndefineSeed(157, 158, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.remove = function remove_0(w){\n  return $remove_0(this, w);\n}\n;\nfunction $clinit_AttachDetachException(){\n  $clinit_AttachDetachException = nullMethod;\n  attachCommand = new AttachDetachException$1_0;\n  detachCommand = new AttachDetachException$2_0;\n}\n\nfunction AttachDetachException_0(causes){\n  UmbrellaException_2.call(this, causes);\n}\n\nfunction tryCommand(hasWidgets, c){\n  $clinit_AttachDetachException();\n  var caught, e, w, w$iterator;\n  caught = null;\n  for (w$iterator = hasWidgets.iterator(); w$iterator.hasNext();) {\n    w = dynamicCast(w$iterator.next_0(), Q$Widget);\n    try {\n      c.execute_2(w);\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$Throwable)) {\n        e = $e0;\n        !caught && (caught = new HashSet_0);\n        $add_6(caught, e);\n      }\n       else \n        throw unwrap($e0);\n    }\n  }\n  if (caught) {\n    throw new AttachDetachException_0(caught);\n  }\n}\n\ndefineSeed(162, 109, makeCastMap([Q$UmbrellaException, Q$Serializable, Q$Throwable]), AttachDetachException_0);\nvar attachCommand, detachCommand;\nfunction AttachDetachException$1_0(){\n}\n\ndefineSeed(163, 1, {}, AttachDetachException$1_0);\n_.execute_2 = function execute_4(w){\n  w.onAttach();\n}\n;\nfunction AttachDetachException$2_0(){\n}\n\ndefineSeed(164, 1, {}, AttachDetachException$2_0);\n_.execute_2 = function execute_5(w){\n  w.onDetach();\n}\n;\ndefineSeed(167, 160, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.onAttach = function onAttach_0(){\n  var tabIndex;\n  $onAttach(this);\n  tabIndex = ($clinit_DOM() , this.element).tabIndex;\n  -1 == tabIndex && (this.element.tabIndex = 0 , undefined);\n}\n;\nfunction $setHTML(this$static, html){\n  $setInnerHTML(($clinit_DOM() , this$static.element), html);\n}\n\nfunction ButtonBase_0(elem){\n  $setElement_0(this, ($clinit_DOM() , elem));\n}\n\ndefineSeed(166, 167, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction Button_0(){\n  var e;\n  ButtonBase_0.call(this, (e = $doc.createElement('BUTTON') , e.type = 'button' , e));\n  $setClassName(($clinit_DOM() , this.element), 'gwt-Button');\n}\n\ndefineSeed(165, 166, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), Button_0);\nfunction $setCellHorizontalAlignment(td, align_0){\n  $setPropertyString(($clinit_DOM() , td), 'align', align_0.textAlignString);\n}\n\nfunction $setCellVerticalAlignment(td, align_0){\n  $setCellVerticalAlignment_0(($clinit_DOM() , td), align_0);\n}\n\nfunction $setCellVerticalAlignment_0(td, align_0){\n  $setPropertyImpl(td.style, 'verticalAlign', align_0.verticalAlignString);\n}\n\ndefineSeed(168, 158, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction $initWidget(this$static, widget){\n  var elem;\n  if (this$static.widget) {\n    throw new IllegalStateException_1('Composite.initWidget() may only be called once.');\n  }\n  $removeFromParent_0(widget);\n  elem = ($clinit_DOM() , widget.element);\n  $setElement_0(this$static, elem);\n  isPotential(elem) && $setResolver(($clinit_PotentialElement() , elem), this$static);\n  this$static.widget = widget;\n  $setParent(widget, this$static);\n}\n\ndefineSeed(169, 160, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.isAttached = function isAttached_0(){\n  if (this.widget) {\n    return this.widget.attached;\n  }\n  return false;\n}\n;\n_.onAttach = function onAttach_1(){\n  if (this.eventsToSink != -1) {\n    $sinkEvents_0(this.widget, this.eventsToSink);\n    this.eventsToSink = -1;\n  }\n  this.widget.onAttach();\n  $clinit_DOM();\n  setEventListener(this.element, this);\n}\n;\n_.onBrowserEvent = function onBrowserEvent_0(event_0){\n  $onBrowserEvent(this, event_0);\n  $onBrowserEvent(this.widget, event_0);\n}\n;\n_.onDetach = function onDetach_0(){\n  this.widget.onDetach();\n}\n;\n_.resolvePotentialElement = function resolvePotentialElement_0(){\n  $setElement(this, $resolvePotentialElement());\n  return $clinit_DOM() , this.element;\n}\n;\nfunction $setTextOrHtml(this$static, content_0){\n  $setInnerText(this$static.element, content_0);\n  if (this$static.textDir != this$static.initialElementDir) {\n    this$static.textDir = this$static.initialElementDir;\n    setDirectionOnElement(this$static.element, this$static.initialElementDir);\n  }\n}\n\nfunction DirectionalTextHelper_0(element){\n  this.element = element;\n  this.initialElementDir = getDirectionOnElement(element);\n  this.textDir = this.initialElementDir;\n}\n\ndefineSeed(170, 1, {}, DirectionalTextHelper_0);\nfunction $doLayout(this$static){\n  var bottom, child, child$iterator, data_0, layer, left, right, top_0;\n  left = 0;\n  top_0 = 0;\n  right = 0;\n  bottom = 0;\n  for (child$iterator = new WidgetCollection$WidgetIterator_0(this$static.children); child$iterator.index_0 < child$iterator.this$0.size_0;) {\n    child = $next_1(child$iterator);\n    data_0 = dynamicCast(child.layoutData, Q$DockLayoutPanel$LayoutData);\n    layer = data_0.layer;\n    if (data_0.hidden) {\n      layer.visible = false;\n      continue;\n    }\n    switch ($getResolvedDirection(data_0.direction).ordinal) {\n      case 0:\n        $setLeftRight(layer, left, this$static.unit, right, this$static.unit);\n        $setTopHeight(layer, top_0, this$static.unit, data_0.size_0, this$static.unit);\n        top_0 += data_0.size_0;\n        break;\n      case 2:\n        $setLeftRight(layer, left, this$static.unit, right, this$static.unit);\n        $setBottomHeight(layer, bottom, this$static.unit, data_0.size_0, this$static.unit);\n        bottom += data_0.size_0;\n        break;\n      case 3:\n        $setTopBottom(layer, top_0, this$static.unit, bottom, this$static.unit);\n        $setLeftWidth(layer, left, this$static.unit, data_0.size_0, this$static.unit);\n        left += data_0.size_0;\n        break;\n      case 1:\n        $setTopBottom(layer, top_0, this$static.unit, bottom, this$static.unit);\n        $setRightWidth(layer, right, this$static.unit, data_0.size_0, this$static.unit);\n        right += data_0.size_0;\n        break;\n      case 4:\n        $setLeftRight(layer, left, this$static.unit, right, this$static.unit);\n        $setTopBottom(layer, top_0, this$static.unit, bottom, this$static.unit);\n    }\n    layer.visible = true;\n  }\n}\n\nfunction $getResolvedDirection(direction){\n  if (direction == ($clinit_DockLayoutPanel$Direction() , LINE_START)) {\n    return WEST;\n  }\n   else if (direction == LINE_END) {\n    return EAST;\n  }\n  return direction;\n}\n\nfunction $insert(this$static, widget, direction, size_0){\n  var children, data_0, layer;\n  $removeFromParent_0(widget);\n  children = this$static.children;\n  $insert_1(children, widget, children.size_0);\n  direction == ($clinit_DockLayoutPanel$Direction() , CENTER_0) && (this$static.center = widget);\n  layer = $attachChild(this$static.layout, ($clinit_DOM() , widget.element));\n  data_0 = new DockLayoutPanel$LayoutData_0(direction, size_0, layer);\n  widget.layoutData = data_0;\n  $setParent(widget, this$static);\n  $schedule_0(this$static.layoutCmd);\n}\n\nfunction DockLayoutPanel_0(unit){\n  ComplexPanel_0.call(this);\n  this.unit = unit;\n  $setElement(this, $doc.createElement('div'));\n  this.layout = new Layout_0(($clinit_DOM() , this.element));\n  this.layoutCmd = new DockLayoutPanel$DockAnimateCommand_0(this, this.layout);\n}\n\ndefineSeed(171, 158, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$RequiresResize, Q$UIObject, Q$Widget]), DockLayoutPanel_0);\n_.onAttach = function onAttach_2(){\n  $onAttach(this);\n}\n;\n_.onDetach = function onDetach_1(){\n  $onDetach(this);\n}\n;\n_.onResize_0 = function onResize_0(){\n  var child, child$iterator;\n  for (child$iterator = new WidgetCollection$WidgetIterator_0(this.children); child$iterator.index_0 < child$iterator.this$0.size_0;) {\n    child = $next_1(child$iterator);\n    instanceOf(child, Q$RequiresResize) && dynamicCast(child, Q$RequiresResize).onResize_0();\n  }\n}\n;\n_.remove = function remove_1(w){\n  var data_0, removed;\n  removed = $remove(this, w);\n  if (removed) {\n    w == this.center && (this.center = null);\n    data_0 = dynamicCast(w.layoutData, Q$DockLayoutPanel$LayoutData);\n    $removeChild_0(this.layout, data_0.layer);\n  }\n  return removed;\n}\n;\nfunction $clinit_DockLayoutPanel$Direction(){\n  $clinit_DockLayoutPanel$Direction = nullMethod;\n  NORTH = new DockLayoutPanel$Direction_0('NORTH', 0);\n  EAST = new DockLayoutPanel$Direction_0('EAST', 1);\n  SOUTH = new DockLayoutPanel$Direction_0('SOUTH', 2);\n  WEST = new DockLayoutPanel$Direction_0('WEST', 3);\n  CENTER_0 = new DockLayoutPanel$Direction_0('CENTER', 4);\n  LINE_START = new DockLayoutPanel$Direction_0('LINE_START', 5);\n  LINE_END = new DockLayoutPanel$Direction_0('LINE_END', 6);\n  $VALUES_6 = initValues(_3Lcom_google_gwt_user_client_ui_DockLayoutPanel$Direction_2_classLit, makeCastMap([Q$Serializable]), Q$DockLayoutPanel$Direction, [NORTH, EAST, SOUTH, WEST, CENTER_0, LINE_START, LINE_END]);\n}\n\nfunction DockLayoutPanel$Direction_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_7(){\n  $clinit_DockLayoutPanel$Direction();\n  return $VALUES_6;\n}\n\ndefineSeed(172, 52, makeCastMap([Q$DockLayoutPanel$Direction, Q$Serializable, Q$Comparable, Q$Enum]), DockLayoutPanel$Direction_0);\nvar $VALUES_6, CENTER_0, EAST, LINE_END, LINE_START, NORTH, SOUTH, WEST;\nfunction $schedule_0(this$static){\n  this$static.duration = 0;\n  this$static.canceled = false;\n  if (!this$static.scheduled) {\n    this$static.scheduled = true;\n    $scheduleFinally(($clinit_SchedulerImpl() , INSTANCE_0), this$static);\n  }\n}\n\nfunction LayoutCommand_0(layout){\n  this.layout = layout;\n}\n\ndefineSeed(174, 1, {}, LayoutCommand_0);\n_.doBeforeLayout = function doBeforeLayout(){\n}\n;\n_.execute_1 = function execute_6(){\n  this.scheduled = false;\n  if (this.canceled) {\n    return;\n  }\n  this.doBeforeLayout();\n  $layout(this.layout, this.duration);\n}\n;\n_.canceled = false;\n_.duration = 0;\n_.scheduled = false;\nfunction DockLayoutPanel$DockAnimateCommand_0(this$0, layout){\n  this.this$0 = this$0;\n  LayoutCommand_0.call(this, layout);\n}\n\ndefineSeed(173, 174, {}, DockLayoutPanel$DockAnimateCommand_0);\n_.doBeforeLayout = function doBeforeLayout_0(){\n  $doLayout(this.this$0);\n}\n;\nfunction DockLayoutPanel$LayoutData_0(direction, size_0, layer){\n  this.direction = direction;\n  this.size_0 = size_0;\n  this.layer = layer;\n}\n\ndefineSeed(175, 1, makeCastMap([Q$DockLayoutPanel$LayoutData]), DockLayoutPanel$LayoutData_0);\n_.hidden = false;\n",
"_.size_0 = 0;\nfunction $checkCellBounds(this$static, row, column){\n  var cellSize;\n  $checkRowBounds(this$static, row);\n  if (column < 0) {\n    throw new IndexOutOfBoundsException_1('Column ' + column + ' must be non-negative: ' + column);\n  }\n  cellSize = this$static.numColumns;\n  if (cellSize <= column) {\n    throw new IndexOutOfBoundsException_1('Column index: ' + column + ', Column size: ' + this$static.numColumns);\n  }\n}\n\nfunction $checkRowBounds(this$static, row){\n  var rowSize;\n  rowSize = this$static.numRows;\n  if (row >= rowSize || row < 0) {\n    throw new IndexOutOfBoundsException_1('Row index: ' + row + ', Row size: ' + rowSize);\n  }\n}\n\nfunction $cleanCell(this$static, row, column, clearInnerHTML){\n  var td;\n  td = $getRawElement(this$static.cellFormatter, row, column);\n  $internalClearCell(this$static, ($clinit_DOM() , td), clearInnerHTML);\n  return td;\n}\n\nfunction $internalClearCell(this$static, td, clearInnerHTML){\n  var maybeChild, widget;\n  maybeChild = ($clinit_DOM() , $getFirstChildElement(td));\n  widget = null;\n  !!maybeChild && (widget = dynamicCast($get_0(this$static.widgetMap, maybeChild), Q$Widget));\n  if (widget) {\n    $remove_1(this$static, widget);\n    return true;\n  }\n   else {\n    clearInnerHTML && $setInnerHTML(td, '');\n    return false;\n  }\n}\n\nfunction $remove_1(this$static, widget){\n  var elem;\n  if (widget.parent_0 != this$static) {\n    return false;\n  }\n  try {\n    $setParent(widget, null);\n  }\n   finally {\n    elem = ($clinit_DOM() , widget.element);\n    $removeChild($getParentElement(elem), elem);\n    $removeByElement(this$static.widgetMap, elem);\n  }\n  return true;\n}\n\nfunction $removeRow(this$static, row){\n  var column, columnCount;\n  columnCount = this$static.numColumns;\n  for (column = 0; column < columnCount; ++column) {\n    $cleanCell(this$static, row, column, false);\n  }\n  $removeChild(this$static.bodyElem, $getRow(this$static.bodyElem, row));\n}\n\nfunction $setCellFormatter(this$static, cellFormatter){\n  this$static.cellFormatter = cellFormatter;\n}\n\nfunction $setColumnFormatter(this$static, formatter){\n  !!this$static.columnFormatter && (formatter.columnGroup = this$static.columnFormatter.columnGroup);\n  this$static.columnFormatter = formatter;\n  $prepareColumnGroup(this$static.columnFormatter);\n}\n\nfunction $setWidget(this$static, row, column, widget){\n  var td;\n  $prepareCell(this$static, row, column);\n  td = $cleanCell(this$static, row, column, true);\n  if (widget) {\n    $removeFromParent_0(widget);\n    $put(this$static.widgetMap, widget);\n    appendChild(td, ($clinit_DOM() , widget.element));\n    $setParent(widget, this$static);\n  }\n}\n\ndefineSeed(177, 159, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.iterator = function iterator_1(){\n  return new HTMLTable$1_0(this);\n}\n;\n_.remove = function remove_2(widget){\n  return $remove_1(this, widget);\n}\n;\nfunction $prepareCell(this$static, row, column){\n  $prepareRow(this$static, row);\n  if (column < 0) {\n    throw new IndexOutOfBoundsException_1('Cannot access a column with a negative index: ' + column);\n  }\n  if (column >= this$static.numColumns) {\n    throw new IndexOutOfBoundsException_1('Column index: ' + column + ', Column size: ' + this$static.numColumns);\n  }\n}\n\nfunction $prepareRow(this$static, row){\n  if (row < 0) {\n    throw new IndexOutOfBoundsException_1('Cannot access a row with a negative index: ' + row);\n  }\n  if (row >= this$static.numRows) {\n    throw new IndexOutOfBoundsException_1('Row index: ' + row + ', Row size: ' + this$static.numRows);\n  }\n}\n\nfunction $removeRow_0(this$static, row){\n  $removeRow(this$static, row);\n  --this$static.numRows;\n}\n\nfunction $resizeColumns(this$static){\n  var i, j, td, tr, tr_0, td_0, td_1;\n  if (this$static.numColumns == 5) {\n    return;\n  }\n  if (this$static.numColumns > 5) {\n    for (i = 0; i < this$static.numRows; i++) {\n      for (j = this$static.numColumns - 1; j >= 5; j--) {\n        $checkCellBounds(this$static, i, j);\n        td = $cleanCell(this$static, i, j, false);\n        tr = $getRow(this$static.bodyElem, i);\n        tr.removeChild(td);\n      }\n    }\n  }\n   else {\n    for (i = 0; i < this$static.numRows; i++) {\n      for (j = this$static.numColumns; j < 5; j++) {\n        tr_0 = $getRow(this$static.bodyElem, i);\n        td_0 = (td_1 = ($clinit_DOM() , $doc.createElement('td')) , $setInnerHTML(td_1, '&nbsp;') , $clinit_DOM() , td_1);\n        $insertChild(tr_0, ($clinit_PotentialElement() , $resolve(td_0)), j);\n      }\n    }\n  }\n  this$static.numColumns = 5;\n  $resizeColumnGroup(this$static.columnFormatter, 5, false);\n}\n\nfunction $resizeRows(this$static){\n  if (this$static.numRows == 5) {\n    return;\n  }\n  if (this$static.numRows < 5) {\n    addRows(($clinit_DOM() , this$static.bodyElem), 5 - this$static.numRows, this$static.numColumns);\n    this$static.numRows = 5;\n  }\n   else {\n    while (this$static.numRows > 5) {\n      $removeRow_0(this$static, this$static.numRows - 1);\n    }\n  }\n}\n\nfunction Grid_0(){\n  this.widgetMap = new ElementMapperImpl_0;\n  this.tableElem = ($clinit_DOM() , $doc.createElement('table'));\n  this.bodyElem = $doc.createElement('tbody');\n  appendChild(this.tableElem, this.bodyElem);\n  $setElement(this, this.tableElem);\n  $setCellFormatter(this, new HTMLTable$CellFormatter_0(this));\n  $setColumnFormatter(this, new HTMLTable$ColumnFormatter_0(this));\n}\n\nfunction addRows(table, rows_0, columns){\n  var td = $doc.createElement('td');\n  td.innerHTML = '&nbsp;';\n  var row = $doc.createElement('tr');\n  for (var cellNum = 0; cellNum < columns; cellNum++) {\n    var cell = td.cloneNode(true);\n    row.appendChild(cell);\n  }\n  table.appendChild(row);\n  for (var rowNum = 1; rowNum < rows_0; rowNum++) {\n    table.appendChild(row.cloneNode(true));\n  }\n}\n\ndefineSeed(176, 177, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), Grid_0);\n_.numColumns = 0;\n_.numRows = 0;\nfunction $add_1(this$static, widget){\n  $add(this$static, widget, ($clinit_DOM() , this$static.element));\n}\n\nfunction $addAndReplaceElement(this$static, widget, toReplace){\n  $addAndReplaceElement_0(this$static, widget, ($clinit_DOM() , toReplace));\n}\n\nfunction $addAndReplaceElement_0(this$static, widget, toReplace){\n  var children, next, toRemove;\n  if (toReplace == ($clinit_DOM() , widget.element)) {\n    return;\n  }\n  $removeFromParent_0(widget);\n  toRemove = null;\n  children = new WidgetCollection$WidgetIterator_0(this$static.children);\n  while (children.index_0 < children.this$0.size_0) {\n    next = $next_1(children);\n    if ($isOrHasChild(toReplace, next.element)) {\n      if (next.element == toReplace) {\n        toRemove = next;\n        break;\n      }\n      $remove_5(children);\n    }\n  }\n  $add_4(this$static.children, widget);\n  if (!toRemove) {\n    $replaceChild(toReplace.parentNode, widget.element, toReplace);\n  }\n   else {\n    $insertBefore(toReplace.parentNode, widget.element, toReplace);\n    $remove(this$static, toRemove);\n  }\n  $setParent(widget, this$static);\n}\n\nfunction HTMLPanel_0(html){\n  ComplexPanel_0.call(this);\n  $setElement(this, $doc.createElement('div'));\n  $setInnerHTML(($clinit_DOM() , this.element), html);\n}\n\ndefineSeed(178, 158, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), HTMLPanel_0);\nfunction $findNext(this$static){\n  while (++this$static.nextIndex < this$static.widgetList.size_0) {\n    if ($get_2(this$static.widgetList, this$static.nextIndex) != null) {\n      return;\n    }\n  }\n}\n\nfunction $next(this$static){\n  var result;\n  if (this$static.nextIndex >= this$static.widgetList.size_0) {\n    throw new NoSuchElementException_0;\n  }\n  result = dynamicCast($get_2(this$static.widgetList, this$static.nextIndex), Q$Widget);\n  this$static.lastIndex = this$static.nextIndex;\n  $findNext(this$static);\n  return result;\n}\n\nfunction HTMLTable$1_0(this$0){\n  this.this$0 = this$0;\n  this.widgetList = this.this$0.widgetMap.uiObjectList;\n  $findNext(this);\n}\n\ndefineSeed(179, 1, {}, HTMLTable$1_0);\n_.hasNext = function hasNext(){\n  return this.nextIndex < this.widgetList.size_0;\n}\n;\n_.next_0 = function next_0(){\n  return $next(this);\n}\n;\n_.remove_0 = function remove_3(){\n  var w;\n  if (this.lastIndex < 0) {\n    throw new IllegalStateException_0;\n  }\n  w = dynamicCast($get_2(this.widgetList, this.lastIndex), Q$Widget);\n  $removeFromParent_0(w);\n  this.lastIndex = -1;\n}\n;\n_.lastIndex = -1;\n_.nextIndex = -1;\nfunction $getCellElement(tbody, row, col){\n  return tbody.rows[row].cells[col];\n}\n\nfunction $getRawElement(this$static, row, column){\n  return $getCellElement(this$static.this$0.bodyElem, row, column);\n}\n\nfunction HTMLTable$CellFormatter_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(180, 1, {}, HTMLTable$CellFormatter_0);\nfunction $prepareColumnGroup(this$static){\n  if (!this$static.columnGroup) {\n    this$static.columnGroup = ($clinit_DOM() , $doc.createElement('colgroup'));\n    insertChild(this$static.this$0.tableElem, this$static.columnGroup);\n    appendChild(this$static.columnGroup, $doc.createElement('col'));\n  }\n}\n\nfunction $resizeColumnGroup(this$static, columns, growOnly){\n  var i, num;\n  columns = columns > 1?columns:1;\n  num = this$static.columnGroup.childNodes.length;\n  if (num < columns) {\n    for (i = num; i < columns; i++) {\n      $appendChild(this$static.columnGroup, $doc.createElement('col'));\n    }\n  }\n   else if (!growOnly && num > columns) {\n    for (i = num; i > columns; i--) {\n      $removeChild(this$static.columnGroup, this$static.columnGroup.lastChild);\n    }\n  }\n}\n\nfunction HTMLTable$ColumnFormatter_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(181, 1, {}, HTMLTable$ColumnFormatter_0);\nfunction $getRow(tbody, row){\n  return $getRow_0(($clinit_DOM() , tbody), row);\n}\n\nfunction $getRow_0(tbody, row){\n  return $clinit_DOM() , tbody.rows[row];\n}\n\nfunction $clinit_HasAutoHorizontalAlignment(){\n  $clinit_HasAutoHorizontalAlignment = nullMethod;\n  ALIGN_CONTENT_START = new HasHorizontalAlignment$AutoHorizontalAlignmentConstant_0;\n}\n\nvar ALIGN_CONTENT_START;\nfunction $clinit_HasHorizontalAlignment(){\n  $clinit_HasHorizontalAlignment = nullMethod;\n  ALIGN_CENTER = new HasHorizontalAlignment$HorizontalAlignmentConstant_0(($clinit_Style$TextAlign() , 'center'));\n  new HasHorizontalAlignment$HorizontalAlignmentConstant_0('justify');\n  ALIGN_LEFT = new HasHorizontalAlignment$HorizontalAlignmentConstant_0('left');\n  ALIGN_RIGHT = new HasHorizontalAlignment$HorizontalAlignmentConstant_0('right');\n  ALIGN_LOCALE_START = ALIGN_LEFT;\n  ALIGN_LOCALE_END = ALIGN_RIGHT;\n  ALIGN_DEFAULT = ALIGN_LOCALE_START;\n}\n\nvar ALIGN_CENTER, ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_LOCALE_END, ALIGN_LOCALE_START, ALIGN_RIGHT;\nfunction HasHorizontalAlignment$AutoHorizontalAlignmentConstant_0(){\n}\n\ndefineSeed(184, 1, {}, HasHorizontalAlignment$AutoHorizontalAlignmentConstant_0);\nfunction HasHorizontalAlignment$HorizontalAlignmentConstant_0(textAlignString){\n  this.textAlignString = textAlignString;\n}\n\nfunction endOf(direction){\n  return direction == ($clinit_HasDirection$Direction() , LTR)?($clinit_HasHorizontalAlignment() , ALIGN_RIGHT):direction == RTL?($clinit_HasHorizontalAlignment() , ALIGN_LEFT):($clinit_HasHorizontalAlignment() , ALIGN_LOCALE_END);\n}\n\nfunction startOf(direction){\n  return direction == ($clinit_HasDirection$Direction() , LTR)?($clinit_HasHorizontalAlignment() , ALIGN_LEFT):direction == RTL?($clinit_HasHorizontalAlignment() , ALIGN_RIGHT):($clinit_HasHorizontalAlignment() , ALIGN_LOCALE_START);\n}\n\ndefineSeed(185, 184, {}, HasHorizontalAlignment$HorizontalAlignmentConstant_0);\nfunction $clinit_HasVerticalAlignment(){\n  $clinit_HasVerticalAlignment = nullMethod;\n  new HasVerticalAlignment$VerticalAlignmentConstant_0('bottom');\n  ALIGN_MIDDLE = new HasVerticalAlignment$VerticalAlignmentConstant_0('middle');\n  ALIGN_TOP = new HasVerticalAlignment$VerticalAlignmentConstant_0('top');\n}\n\nvar ALIGN_MIDDLE, ALIGN_TOP;\nfunction HasVerticalAlignment$VerticalAlignmentConstant_0(verticalAlignString){\n  this.verticalAlignString = verticalAlignString;\n}\n\ndefineSeed(186, 1, {}, HasVerticalAlignment$VerticalAlignmentConstant_0);\nfunction $clinit_Image(){\n  $clinit_Image = nullMethod;\n  new HashMap_0;\n}\n\nfunction $changeState(this$static, newState){\n  this$static.state = newState;\n}\n\nfunction $setUrl(this$static, url_0){\n  !!this$static.state && $setPropertyString(($clinit_DOM() , this$static.element), '__gwtLastUnhandledEvent', '');\n  $imgSetSrc(($clinit_DOM() , this$static.element), url_0.uri_0);\n}\n\nfunction Image_1(){\n  $clinit_Image();\n  $changeState(this, new Image$UnclippedState_0(this));\n  $setClassName(($clinit_DOM() , this.element), 'gwt-Image');\n}\n\ndefineSeed(187, 160, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), Image_1);\n_.onBrowserEvent = function onBrowserEvent_1(event_0){\n  ($clinit_DOM() , $eventGetTypeInt(event_0.type)) == 32768 && !!this.state && $setPropertyString(this.element, '__gwtLastUnhandledEvent', '');\n  $onBrowserEvent(this, event_0);\n}\n;\n_.onLoad = function onLoad_0(){\n  $onLoad(this.state, this);\n}\n;\nfunction $onLoad(this$static, image){\n  var unhandledEvent;\n  unhandledEvent = $getPropertyString(($clinit_DOM() , image.element), '__gwtLastUnhandledEvent');\n  $equals('load', unhandledEvent) && (this$static.syntheticEventCommand = new Image$State$1_0(this$static, image) , $scheduleDeferred(($clinit_SchedulerImpl() , INSTANCE_0), this$static.syntheticEventCommand));\n}\n\ndefineSeed(188, 1, {});\n_.syntheticEventCommand = null;\nfunction Image$State$1_0(this$1, val$image){\n  this.this$1 = this$1;\n  this.val$image = val$image;\n}\n\ndefineSeed(189, 1, {}, Image$State$1_0);\n_.execute_1 = function execute_7(){\n  var evt, evt_0;\n  if (this.val$image.state != this.this$1 || this != this.this$1.syntheticEventCommand) {\n    return;\n  }\n  this.this$1.syntheticEventCommand = null;\n  if (!this.val$image.attached) {\n    $setPropertyString($getImageElement(this.val$image), '__gwtLastUnhandledEvent', 'load');\n    return;\n  }\n  evt = (evt_0 = $doc.createEvent('HTMLEvents') , evt_0.initEvent('load', false, false) , evt_0);\n  $dispatchEvent($getImageElement(this.val$image), evt);\n}\n;\nfunction $getImageElement(image){\n  return $clinit_DOM() , image.element;\n}\n\nfunction $setUrl_0(image, url_0){\n  !!image.state && $setPropertyString(($clinit_DOM() , image.element), '__gwtLastUnhandledEvent', '');\n  $imgSetSrc(($clinit_DOM() , image.element), url_0.uri_0);\n}\n\nfunction Image$UnclippedState_0(image){\n  $replaceElement(image, $doc.createElement('img'));\n  sinkEvents_0(($clinit_DOM() , image.element));\n  image.eventsToSink == -1?sinkEvents(image.element, 133398655 | (image.element.__eventBits || 0)):(image.eventsToSink |= 133398655);\n}\n\ndefineSeed(190, 188, {}, Image$UnclippedState_0);\nfunction $setHorizontalAlignment(this$static, align_0){\n  this$static.autoHorizontalAlignment = align_0;\n  $updateHorizontalAlignment(this$static);\n}\n\nfunction $updateHorizontalAlignment(this$static){\n  var align_0;\n  !this$static.autoHorizontalAlignment?(align_0 = null):this$static.autoHorizontalAlignment?(align_0 = this$static.autoHorizontalAlignment):(align_0 = this$static.autoHorizontalAlignment == ($clinit_HasAutoHorizontalAlignment() , ALIGN_CONTENT_START)?startOf(this$static.directionalTextHelper.textDir):endOf(this$static.directionalTextHelper.textDir));\n  if (align_0 != this$static.horzAlign) {\n    this$static.horzAlign = align_0;\n    ($clinit_DOM() , this$static.element).style['textAlign'] = !this$static.horzAlign?'':this$static.horzAlign.textAlignString;\n  }\n}\n\nfunction LabelBase_0(element){\n  $setElement_0(this, ($clinit_DOM() , element));\n  this.directionalTextHelper = new DirectionalTextHelper_0(this.element);\n}\n\ndefineSeed(192, 160, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction Label_0(){\n  LabelBase_0.call(this, $doc.createElement('div'));\n  $setClassName(($clinit_DOM() , this.element), 'gwt-Label');\n}\n\ndefineSeed(191, 192, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), Label_0);\nfunction $add_2(this$static, widget){\n  $insert_0(this$static, widget, this$static.children.size_0);\n}\n\nfunction $insert_0(this$static, widget, beforeIndex){\n  var layer;\n  $removeFromParent_0(widget);\n  $insert_1(this$static.children, widget, beforeIndex);\n  layer = $attachChild(this$static.layout, ($clinit_DOM() , widget.element));\n  widget.layoutData = layer;\n  $setParent(widget, this$static);\n  $schedule_0(this$static.layoutCmd);\n}\n\nfunction $onResize(this$static){\n  var child, child$iterator;\n  for (child$iterator = new WidgetCollection$WidgetIterator_0(this$static.children); child$iterator.index_0 < child$iterator.this$0.size_0;) {\n    child = $next_1(child$iterator);\n    instanceOf(child, Q$RequiresResize) && dynamicCast(child, Q$RequiresResize).onResize_0();\n  }\n}\n\ndefineSeed(193, 158, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$RequiresResize, Q$UIObject, Q$Widget]));\n_.onAttach = function onAttach_3(){\n  $onAttach(this);\n}\n;\n_.onDetach = function onDetach_2(){\n  $onDetach(this);\n}\n;\n_.onResize_0 = function onResize_1(){\n  $onResize(this);\n}\n;\n_.remove = function remove_4(w){\n  var removed;\n  removed = $remove(this, w);\n  removed && $removeChild_0(this.layout, dynamicCast(w.layoutData, Q$Layout$Layer));\n  return removed;\n}\n;\nfunction $remove_2(this$static, w){\n  if (this$static.widget != w) {\n    return false;\n  }\n  try {\n    $setParent(w, null);\n  }\n   finally {\n    $removeChild(this$static.getContainerElement(), ($clinit_DOM() , w.element));\n    this$static.widget = null;\n  }\n  return true;\n}\n\nfunction SimplePanel_0(elem){\n  $setElement_0(this, ($clinit_DOM() , elem));\n}\n\ndefineSeed(195, 159, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.getContainerElement = function getContainerElement(){\n  return $clinit_DOM() , this.element;\n}\n;\n_.iterator = function iterator_2(){\n  return new SimplePanel$1_0;\n}\n;\n_.remove = function remove_5(w){\n  return $remove_2(this, w);\n}\n;\nfunction $clinit_PopupPanel(){\n  $clinit_PopupPanel = nullMethod;\n  $clinit_PopupImplMozilla();\n}\n\nfunction $eventTargetsPopup(this$static, event_0){\n  var target;\n  target = event_0.target;\n  if (is_0(target)) {\n    return $isOrHasChild(($clinit_DOM() , this$static.element), target);\n  }\n  return false;\n}\n\nfunction $getOffsetHeight(this$static){\n  return $getPropertyInt(($clinit_DOM() , this$static.element), 'offsetHeight');\n}\n\nfunction $getOffsetWidth(this$static){\n  return $getPropertyInt(($clinit_DOM() , this$static.element), 'offsetWidth');\n}\n\nfunction $hide(this$static){\n  if (!this$static.showing) {\n    return;\n  }\n  $setState(this$static.resizeAnimation, false);\n  fire_0(this$static);\n}\n\nfunction $previewNativeEvent(this$static, event_0){\n  var eventTargetsPopupOrPartner, nativeEvent, target, type_0;\n  if (event_0.isCanceled || !this$static.previewAllNativeEvents && event_0.isConsumed) {\n    this$static.modal && (event_0.isCanceled = true);\n    return;\n  }\n  event_0.isFirstHandler && (event_0.nativeEvent , false) && (event_0.isCanceled = true);\n  if (event_0.isCanceled) {\n    return;\n  }\n  nativeEvent = event_0.nativeEvent;\n  eventTargetsPopupOrPartner = $eventTargetsPopup(this$static, nativeEvent);\n  eventTargetsPopupOrPartner && (event_0.isConsumed = true);\n  this$static.modal && (event_0.isCanceled = true);\n  type_0 = ($clinit_DOM() , $eventGetTypeInt(nativeEvent.type));\n  switch (type_0) {\n    case 512:\n    case 256:\n    case 128:\n      {\n        $eventGetKeyCode(nativeEvent) & 65535;\n        ($eventGetShiftKey(nativeEvent)?1:0) | ($eventGetMetaKey(nativeEvent)?8:0) | ($eventGetCtrlKey(nativeEvent)?2:0) | ($eventGetAltKey(nativeEvent)?4:0);\n        return;\n      }\n\n    case 4:\n    case 1048576:\n      if (sCaptureElem != null) {\n        event_0.isConsumed = true;\n        return;\n      }\n\n      if (!eventTargetsPopupOrPartner && this$static.autoHide) {\n        $hide(this$static);\n        return;\n      }\n\n      break;\n    case 8:\n    case 64:\n    case 1:\n    case 2:\n    case 4194304:\n      {\n        if (sCaptureElem != null) {\n          event_0.isConsumed = true;\n          return;\n        }\n        break;\n      }\n\n    case 2048:\n      {\n        target = nativeEvent.target;\n        if (this$static.modal && !eventTargetsPopupOrPartner && !!target) {\n          target.blur && target != $doc.body && target.blur();\n          event_0.isCanceled = true;\n          return;\n        }\n        break;\n      }\n\n  }\n}\n\nfunction $setPopupPosition(this$static, left, top_0){\n  var elem;\n  this$static.leftPosition = left;\n  this$static.topPosition = top_0;\n  left -= $getBodyOffsetLeft($doc);\n  top_0 -= $getBodyOffsetTop($doc);\n  elem = ($clinit_DOM() , this$static.element);\n  elem.style['left'] = left + ($clinit_Style$Unit() , 'px');\n  elem.style['top'] = top_0 + 'px';\n}\n\nfunction $updateHandlers(this$static){\n  if (this$static.nativePreviewHandlerRegistration) {\n    $removeHandler(this$static.nativePreviewHandlerRegistration.real);\n    this$static.nativePreviewHandlerRegistration = null;\n  }\n  if (this$static.historyHandlerRegistration) {\n    $removeHandler(this$static.historyHandlerRegistration.real);\n    this$static.historyHandlerRegistration = null;\n  }\n  if (this$static.showing) {\n    this$static.nativePreviewHandlerRegistration = addNativePreviewHandler(new PopupPanel$3_0(this$static));\n    this$static.historyHandlerRegistration = addValueChangeHandler(new PopupPanel$4_0(this$static));\n  }\n}\n\nfunction PopupPanel_0(){\n  $clinit_PopupPanel();\n  SimplePanel_0.call(this, ($clinit_DOM() , $doc.createElement('div')));\n  this.glassResizer = new PopupPanel$1_0;\n  this.leftPosition = -1;\n  this.resizeAnimation = new PopupPanel$ResizeAnimation_0(this);\n  this.topPosition = -1;\n  $appendChild(this.element, $createElement_0());\n  $setPopupPosition(this, 0, 0);\n  $getStyleElement($getFirstChildElement(this.element)).className = 'gwt-PopupPanel';\n  $getContainerElement($getFirstChildElement(this.element)).className = 'popupContent';\n}\n\ndefineSeed(194, 195, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), PopupPanel_0);\n_.getContainerElement = function getContainerElement_0(){\n  return $getContainerElement(($clinit_DOM() , $getFirstChildElement(this.element)));\n}\n;\n_.onUnload = function onUnload_0(){\n  this.showing && $setState(this.resizeAnimation, true);\n}\n;\n_.autoHide = false;\n_.autoHideOnHistoryEvents = false;\n_.isGlassEnabled = false;\n_.leftPosition = 0;\n_.modal = false;\n_.previewAllNativeEvents = false;\n_.showing = false;\n_.topPosition = 0;\nfunction $onResize_0(){\n  var height, width_0, winHeight, winWidth;\n  null.nullMethod();\n  winWidth = ($clinit_Window() , $getClientWidth($doc));\n  winHeight = $getClientHeight($doc);\n  null.nullMethod($clinit_Style$Display());\n  null.nullMethod(0 + ($clinit_Style$Unit() , 'px'));\n  null.nullMethod('0px');\n  width_0 = $getScrollWidth($doc);\n  height = $getScrollHeight($doc);\n  null.nullMethod((width_0 > winWidth?width_0:winWidth) + 'px');\n  null.nullMethod((height > winHeight?height:winHeight) + 'px');\n  null.nullMethod($clinit_Style$Display());\n}\n\nfunction PopupPanel$1_0(){\n}\n\ndefineSeed(196, 1, makeCastMap([Q$ResizeHandler, Q$EventHandler]), PopupPanel$1_0);\n_.onResize = function onResize_2(event_0){\n  $onResize_0();\n}\n;\nfunction PopupPanel$3_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(197, 1, makeCastMap([Q$EventHandler, Q$Event$NativePreviewHandler]), PopupPanel$3_0);\nfunction PopupPanel$4_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(198, 1, makeCastMap([Q$ValueChangeHandler, Q$EventHandler]), PopupPanel$4_0);\nfunction $maybeShowGlass(this$static){\n  if (this$static.showing) {\n    if (this$static.curPanel.isGlassEnabled) {\n      $appendChild($doc.body, this$static.curPanel.glass);\n      $clinit_PopupPanel();\n      this$static.resizeRegistration = addResizeHandler(this$static.curPanel.glassResizer);\n      $onResize_0();\n      this$static.glassShowing = true;\n    }\n  }\n   else if (this$static.glassShowing) {\n    $removeChild($doc.body, this$static.curPanel.glass);\n    $clinit_PopupPanel();\n    $removeHandler(this$static.resizeRegistration.real);\n    this$static.resizeRegistration = null;\n    this$static.glassShowing = false;\n  }\n}\n\nfunction $onComplete(this$static){\n  if (!this$static.showing) {\n    $maybeShowGlass(this$static);\n    this$static.isUnloading || $remove_0(($clinit_RootPanel() , get_1()), this$static.curPanel);\n    $clinit_PopupPanel();\n    $getElement(this$static.curPanel);\n  }\n  $setClip(($clinit_PopupPanel() , $getElement(this$static.curPanel)), 'rect(auto, auto, auto, auto)');\n  $setPropertyImpl($getElement(this$static.curPanel).style, 'overflow', 'visible');\n}\n\nfunction $onInstantaneousRun(this$static){\n  $maybeShowGlass(this$static);\n  if (this$static.showing) {\n    $setPropertyImpl($getElement(this$static.curPanel).style, 'position', 'absolute');\n    this$static.curPanel.topPosition != -1 && $setPopupPosition(this$static.curPanel, this$static.curPanel.leftPosition, this$static.curPanel.topPosition);\n    $add_0(($clinit_RootPanel() , get_1()), this$static.curPanel);\n    $clinit_PopupPanel();\n    $getElement(this$static.curPanel);\n  }\n   else {\n    this$static.isUnloading || $remove_0(($clinit_RootPanel() , get_1()), this$static.curPanel);\n    $clinit_PopupPanel();\n    $getElement(this$static.curPanel);\n  }\n  $setPropertyImpl($getElement(this$static.curPanel).style, 'overflow', 'visible');\n}\n\nfunction $onUpdate(this$static, progress){\n  var bottom, height, left, right, top_0, width_0;\n  this$static.showing || (progress = 1 - progress);\n  top_0 = 0;\n  left = 0;\n  right = 0;\n  bottom = 0;\n  height = round_int(progress * this$static.offsetHeight_0);\n  width_0 = round_int(progress * this$static.offsetWidth_0);\n  switch (0) {\n    case 2:\n    case 0:\n      top_0 = this$static.offsetHeight_0 - height >> 1;\n      left = this$static.offsetWidth_0 - width_0 >> 1;\n      right = left + width_0;\n      bottom = top_0 + height;\n  }\n  $setClip(($clinit_PopupPanel() , $getElement(this$static.curPanel)), 'rect(' + top_0 + 'px, ' + right + 'px, ' + bottom + 'px, ' + left + 'px)');\n}\n\nfunction $setState(this$static, isUnloading){\n  this$static.isUnloading = isUnloading;\n  $cancel(this$static);\n  this$static.curPanel.showing = false;\n  $updateHandlers(this$static.curPanel);\n  this$static.showing = false;\n  $onInstantaneousRun(this$static);\n}\n\nfunction PopupPanel$ResizeAnimation_0(panel){\n  Animation_0.call(this);\n  this.curPanel = null;\n  this.offsetWidth_0 = -1;\n  this.curPanel = panel;\n}\n\ndefineSeed(199, 3, {}, PopupPanel$ResizeAnimation_0);\n_.onComplete = function onComplete_1(){\n  $onComplete(this);\n}\n;\n_.onStart = function onStart_0(){\n  this.offsetHeight_0 = $getOffsetHeight(this.curPanel);\n  this.offsetWidth_0 = $getOffsetWidth(this.curPanel);\n  $setPropertyImpl($getElement(this.curPanel).style, 'overflow', 'hidden');\n  $onUpdate(this, (1 + cos_0(3.141592653589793)) / 2);\n}\n;\n_.onUpdate = function onUpdate_0(progress){\n  $onUpdate(this, progress);\n}\n;\n_.glassShowing = false;\n_.isUnloading = false;\n_.offsetHeight_0 = 0;\n_.offsetWidth_0 = 0;\n_.showing = false;\nfunction $clinit_PotentialElement(){\n  $clinit_PotentialElement = nullMethod;\n  declareShim();\n}\n\nfunction $resolve(this$static){\n  return this$static.__gwt_resolve?this$static.__gwt_resolve():this$static;\n}\n\nfunction $setResolver(this$static, resolver){\n  this$static.__gwt_resolve = buildResolveCallback(resolver);\n}\n\nfunction buildResolveCallback(resolver){\n  return function(){\n    this.__gwt_resolve = cannotResolveTwice;\n    return resolver.resolvePotentialElement();\n  }\n  ;\n}\n\nfunction cannotResolveTwice(){\n  throw 'A PotentialElement cannot be resolved twice.';\n}\n\nfunction declareShim(){\n  var shim = function(){\n  }\n  ;\n  shim.prototype = {className:'', clientHeight:0, clientWidth:0, dir:'', getAttribute:function(name_0, value_0){\n    return this[name_0];\n  }\n  , href:'', id:'', lang:'', nodeType:1, removeAttribute:function(name_0, value_0){\n    this[name_0] = undefined;\n  }\n  , setAttribute:function(name_0, value_0){\n    this[name_0] = value_0;\n  }\n  , src:'', style:{}, title:''};\n  $wnd.GwtPotentialElementShim = shim;\n}\n\nfunction isPotential(o){\n  $clinit_PotentialElement();\n  try {\n    return !!o && !!o.__gwt_resolve;\n  }\n   catch (e) {\n    return false;\n  }\n}\n\nfunction RootLayoutPanel_0(){\n  ComplexPanel_0.call(this);\n  $setElement_0(this, ($clinit_DOM() , $doc.createElement('div')));\n  this.layout = new Layout_0(this.element);\n  this.layoutCmd = new LayoutCommand_0(this.layout);\n  addResizeHandler(new RootLayoutPanel$1_0(this));\n}\n\nfunction get_0(){\n  if (!singleton_0) {\n    singleton_0 = new RootLayoutPanel_0;\n    $add_0(($clinit_RootPanel() , get_1()), singleton_0);\n  }\n  return singleton_0;\n}\n\ndefineSeed(201, 193, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$RequiresResize, Q$UIObject, Q$Widget]), RootLayoutPanel_0);\n_.onLoad = function onLoad_1(){\n  $fillParent(this.layout.parentElem);\n}\n;\nvar singleton_0;\nfunction RootLayoutPanel$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(202, 1, makeCastMap([Q$ResizeHandler, Q$EventHandler]), RootLayoutPanel$1_0);\n_.onResize = function onResize_3(event_0){\n  $onResize(this.this$0);\n}\n;\nfunction $clinit_RootPanel(){\n  $clinit_RootPanel = nullMethod;\n  maybeDetachCommand = new RootPanel$1_0;\n  rootPanels = new HashMap_0;\n  widgetsToDetach = new HashSet_0;\n}\n\nfunction RootPanel_0(elem){\n  ComplexPanel_0.call(this);\n  $setElement_0(this, ($clinit_DOM() , elem));\n  $onAttach(this);\n}\n\n",
"function detachNow(widget){\n  $clinit_RootPanel();\n  try {\n    widget.onDetach();\n  }\n   finally {\n    $remove_11(widgetsToDetach, widget);\n  }\n}\n\nfunction detachWidgets(){\n  $clinit_RootPanel();\n  try {\n    tryCommand(widgetsToDetach, maybeDetachCommand);\n  }\n   finally {\n    $clearImpl(widgetsToDetach.map_0);\n    $clearImpl(rootPanels);\n  }\n}\n\nfunction get_1(){\n  $clinit_RootPanel();\n  var rp;\n  rp = dynamicCast($get_1(rootPanels, null), Q$RootPanel);\n  if (rp) {\n    return rp;\n  }\n  rootPanels.size_0 == 0 && addCloseHandler(new RootPanel$3_0);\n  rp = new RootPanel$DefaultRootPanel_0;\n  $put_0(rootPanels, null, rp);\n  $add_6(widgetsToDetach, rp);\n  return rp;\n}\n\nfunction getBodyElement(){\n  $clinit_RootPanel();\n  return $doc.body;\n}\n\ndefineSeed(203, 157, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$RootPanel, Q$UIObject, Q$Widget]));\nvar maybeDetachCommand, rootPanels, widgetsToDetach;\nfunction RootPanel$1_0(){\n}\n\ndefineSeed(204, 1, {}, RootPanel$1_0);\n_.execute_2 = function execute_8(w){\n  w.isAttached() && w.onDetach();\n}\n;\nfunction RootPanel$3_0(){\n}\n\ndefineSeed(205, 1, makeCastMap([Q$CloseHandler, Q$EventHandler]), RootPanel$3_0);\nfunction RootPanel$DefaultRootPanel_0(){\n  RootPanel_0.call(this, getBodyElement());\n}\n\ndefineSeed(206, 203, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$RootPanel, Q$UIObject, Q$Widget]), RootPanel$DefaultRootPanel_0);\nfunction $next_0(){\n  throw new NoSuchElementException_0;\n}\n\nfunction SimplePanel$1_0(){\n}\n\ndefineSeed(207, 1, {}, SimplePanel$1_0);\n_.hasNext = function hasNext_0(){\n  return false;\n}\n;\n_.next_0 = function next_1(){\n  return $next_0();\n}\n;\n_.remove_0 = function remove_6(){\n}\n;\nfunction $add_3(this$static, w){\n  var td, tr, td_0;\n  tr = ($clinit_DOM() , $doc.createElement('tr'));\n  td = (td_0 = $doc.createElement('td') , $setCellHorizontalAlignment(td_0, this$static.horzAlign) , $setCellVerticalAlignment(td_0, this$static.vertAlign) , td_0);\n  $appendChild(tr, ($clinit_PotentialElement() , $resolve(td)));\n  appendChild(this$static.body_0, tr);\n  $add(this$static, w, td);\n}\n\nfunction $setHorizontalAlignment_0(this$static, align_0){\n  this$static.horzAlign = align_0;\n}\n\nfunction $setVerticalAlignment(this$static, align_0){\n  this$static.vertAlign = align_0;\n}\n\nfunction VerticalPanel_0(){\n  ComplexPanel_0.call(this);\n  this.table = ($clinit_DOM() , $doc.createElement('table'));\n  this.body_0 = $doc.createElement('tbody');\n  appendChild(this.table, this.body_0);\n  $setElement(this, this.table);\n  this.horzAlign = ($clinit_HasHorizontalAlignment() , ALIGN_DEFAULT);\n  this.vertAlign = ($clinit_HasVerticalAlignment() , ALIGN_TOP);\n  $setPropertyString(this.table, 'cellSpacing', '0');\n  $setPropertyString(this.table, 'cellPadding', '0');\n}\n\ndefineSeed(208, 168, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), VerticalPanel_0);\n_.remove = function remove_7(w){\n  var removed, td;\n  td = ($clinit_DOM() , $clinit_DOM() , $getParentElement(w.element));\n  removed = $remove(this, w);\n  removed && $removeChild(this.body_0, $getParentElement(td));\n  return removed;\n}\n;\nfunction $add_4(this$static, w){\n  $insert_1(this$static, w, this$static.size_0);\n}\n\nfunction $indexOf(this$static, w){\n  var i;\n  for (i = 0; i < this$static.size_0; ++i) {\n    if (this$static.array[i] == w) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction $insert_1(this$static, w, beforeIndex){\n  var i, i0, newArray;\n  if (beforeIndex < 0 || beforeIndex > this$static.size_0) {\n    throw new IndexOutOfBoundsException_0;\n  }\n  if (this$static.size_0 == this$static.array.length) {\n    newArray = initDim(_3Lcom_google_gwt_user_client_ui_Widget_2_classLit, makeCastMap([Q$Serializable]), Q$Widget, this$static.array.length * 2, 0);\n    for (i0 = 0; i0 < this$static.array.length; ++i0) {\n      setCheck(newArray, i0, this$static.array[i0]);\n    }\n    this$static.array = newArray;\n  }\n  ++this$static.size_0;\n  for (i = this$static.size_0 - 1; i > beforeIndex; --i) {\n    setCheck(this$static.array, i, this$static.array[i - 1]);\n  }\n  setCheck(this$static.array, beforeIndex, w);\n}\n\nfunction $remove_3(this$static, index_0){\n  var i;\n  if (index_0 < 0 || index_0 >= this$static.size_0) {\n    throw new IndexOutOfBoundsException_0;\n  }\n  --this$static.size_0;\n  for (i = index_0; i < this$static.size_0; ++i) {\n    setCheck(this$static.array, i, this$static.array[i + 1]);\n  }\n  setCheck(this$static.array, this$static.size_0, null);\n}\n\nfunction $remove_4(this$static, w){\n  var index_0;\n  index_0 = $indexOf(this$static, w);\n  if (index_0 == -1) {\n    throw new NoSuchElementException_0;\n  }\n  $remove_3(this$static, index_0);\n}\n\nfunction WidgetCollection_0(parent_0){\n  this.parent_0 = parent_0;\n  this.array = initDim(_3Lcom_google_gwt_user_client_ui_Widget_2_classLit, makeCastMap([Q$Serializable]), Q$Widget, 4, 0);\n}\n\ndefineSeed(209, 1, {}, WidgetCollection_0);\n_.iterator = function iterator_3(){\n  return new WidgetCollection$WidgetIterator_0(this);\n}\n;\n_.size_0 = 0;\nfunction $next_1(this$static){\n  if (this$static.index_0 >= this$static.this$0.size_0) {\n    throw new NoSuchElementException_0;\n  }\n  this$static.currentWidget = this$static.this$0.array[this$static.index_0];\n  ++this$static.index_0;\n  return this$static.currentWidget;\n}\n\nfunction $remove_5(this$static){\n  if (!this$static.currentWidget) {\n    throw new IllegalStateException_0;\n  }\n  this$static.this$0.parent_0.remove(this$static.currentWidget);\n  --this$static.index_0;\n  this$static.currentWidget = null;\n}\n\nfunction WidgetCollection$WidgetIterator_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(210, 1, {}, WidgetCollection$WidgetIterator_0);\n_.hasNext = function hasNext_1(){\n  return this.index_0 < this.this$0.size_0;\n}\n;\n_.next_0 = function next_2(){\n  return $next_1(this);\n}\n;\n_.remove_0 = function remove_8(){\n  $remove_5(this);\n}\n;\n_.index_0 = 0;\nfunction $clinit_PopupImplMozilla(){\n  $clinit_PopupImplMozilla = nullMethod;\n  isFF2Mac = isFF2Mac_0();\n}\n\nfunction $createElement_0(){\n  var outerElem;\n  outerElem = ($clinit_DOM() , $doc.createElement('div'));\n  if (isFF2Mac) {\n    $setInnerHTML(outerElem, '<div><\\/div>');\n    $scheduleDeferred(($clinit_SchedulerImpl() , INSTANCE_0), new PopupImplMozilla$1_0(outerElem));\n  }\n  return outerElem;\n}\n\nfunction $getContainerElement(outerElem){\n  return isFF2Mac?$getFirstChildElement(outerElem):outerElem;\n}\n\nfunction $getStyleElement(outerElem){\n  return isFF2Mac?outerElem:$getParentElement(outerElem);\n}\n\nfunction $setClip(popup, rect){\n  $setPropertyImpl(popup.style, 'clip', rect);\n  $setPropertyImpl(popup.style, 'display', ($clinit_Style$Display() , 'none'));\n  $setPropertyImpl(popup.style, 'display', '');\n}\n\nfunction isFF2Mac_0(){\n  function makeVersion(result){\n    return parseInt(result[1]) * 1000 + parseInt(result[2]);\n  }\n\n  var ua = navigator.userAgent;\n  if (ua.indexOf('Macintosh') != -1) {\n    var result_0 = /rv:([0-9]+)\\.([0-9]+)/.exec(ua);\n    if (result_0 && result_0.length == 3) {\n      if (makeVersion(result_0) <= 1008) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nvar isFF2Mac = false;\nfunction PopupImplMozilla$1_0(val$outerElem){\n  this.val$outerElem = val$outerElem;\n}\n\ndefineSeed(213, 1, {}, PopupImplMozilla$1_0);\n_.execute_1 = function execute_9(){\n  this.val$outerElem.style['overflow'] = ($clinit_Style$Overflow() , 'auto');\n}\n;\nfunction $getRuntimeValue(){\n  var ua = navigator.userAgent.toLowerCase();\n  var makeVersion = function(result){\n    return parseInt(result[1]) * 1000 + parseInt(result[2]);\n  }\n  ;\n  if (function(){\n    return ua.indexOf('webkit') != -1;\n  }\n  ())\n    return 'safari';\n  if (function(){\n    return ua.indexOf('msie') != -1 && $doc.documentMode >= 10;\n  }\n  ())\n    return 'ie10';\n  if (function(){\n    return ua.indexOf('msie') != -1 && $doc.documentMode >= 9;\n  }\n  ())\n    return 'ie9';\n  if (function(){\n    return ua.indexOf('msie') != -1 && $doc.documentMode >= 8;\n  }\n  ())\n    return 'ie8';\n  if (function(){\n    return ua.indexOf('gecko') != -1;\n  }\n  ())\n    return 'gecko1_8';\n  return 'unknown';\n}\n\nfunction $removeHandler(this$static){\n  $doRemove(this$static.this$0, this$static.val$type, this$static.val$handler);\n}\n\nfunction SimpleEventBus$1_0(this$0, val$type, val$handler){\n  this.this$0 = this$0;\n  this.val$type = val$type;\n  this.val$handler = val$handler;\n}\n\ndefineSeed(216, 1, {}, SimpleEventBus$1_0);\nfunction SimpleEventBus$2_0(this$0, val$type, val$handler){\n  this.this$0 = this$0;\n  this.val$type = val$type;\n  this.val$handler = val$handler;\n}\n\ndefineSeed(217, 1, makeCastMap([Q$SimpleEventBus$Command]), SimpleEventBus$2_0);\n_.execute_1 = function execute_10(){\n  $doAddNow(this.this$0, this.val$type, this.val$handler);\n}\n;\nfunction SimpleEventBus$3_0(this$0, val$type, val$handler){\n  this.this$0 = this$0;\n  this.val$type = val$type;\n  this.val$handler = val$handler;\n}\n\ndefineSeed(218, 1, makeCastMap([Q$SimpleEventBus$Command]), SimpleEventBus$3_0);\n_.execute_1 = function execute_11(){\n  $doRemoveNow(this.this$0, this.val$type, this.val$handler);\n}\n;\nfunction ArrayStoreException_0(){\n  RuntimeException_0.call(this);\n}\n\ndefineSeed(219, 21, makeCastMap([Q$Serializable, Q$Throwable]), ArrayStoreException_0);\nfunction $clinit_Boolean(){\n  $clinit_Boolean = nullMethod;\n  new Boolean_1(false);\n  TRUE = new Boolean_1(true);\n}\n\nfunction Boolean_1(value_0){\n  this.value_0 = value_0;\n}\n\ndefineSeed(220, 1, makeCastMap([Q$Serializable, Q$Boolean, Q$Comparable]), Boolean_1);\n_.equals$ = function equals_4(o){\n  return instanceOf(o, Q$Boolean) && dynamicCast(o, Q$Boolean).value_0 == this.value_0;\n}\n;\n_.hashCode$ = function hashCode_6(){\n  return this.value_0?1231:1237;\n}\n;\n_.toString$ = function toString_7(){\n  return this.value_0?'true':'false';\n}\n;\n_.value_0 = false;\nvar TRUE;\nfunction Class_0(){\n}\n\nfunction createForArray(packageName, className, seedId){\n  var clazz;\n  clazz = new Class_0;\n  clazz.typeName = packageName + className;\n  isInstantiable(seedId != 0?-seedId:0) && setClassLiteral(seedId != 0?-seedId:0, clazz);\n  clazz.modifiers = 4;\n  return clazz;\n}\n\nfunction createForClass(packageName, className, seedId){\n  var clazz;\n  clazz = new Class_0;\n  clazz.typeName = packageName + className;\n  isInstantiable(seedId) && setClassLiteral(seedId, clazz);\n  return clazz;\n}\n\nfunction createForEnum(packageName, className, seedId, enumConstantsFunc){\n  var clazz;\n  clazz = new Class_0;\n  clazz.typeName = packageName + className;\n  isInstantiable(seedId) && setClassLiteral(seedId, clazz);\n  clazz.modifiers = enumConstantsFunc?8:0;\n  return clazz;\n}\n\nfunction getSeedFunction(clazz){\n  var func = seedTable[clazz.seedId];\n  clazz = null;\n  return func;\n}\n\nfunction isInstantiable(seedId){\n  return typeof seedId == 'number' && seedId > 0;\n}\n\nfunction setClassLiteral(seedId, clazz){\n  var proto;\n  clazz.seedId = seedId;\n  if (seedId == 2) {\n    proto = String.prototype;\n  }\n   else {\n    if (seedId > 0) {\n      var seed = getSeedFunction(clazz);\n      if (seed) {\n        proto = seed.prototype;\n      }\n       else {\n        seed = seedTable[seedId] = function(){\n        }\n        ;\n        seed.___clazz$ = clazz;\n        return;\n      }\n    }\n     else {\n      return;\n    }\n  }\n  proto.___clazz$ = clazz;\n}\n\ndefineSeed(221, 1, {}, Class_0);\n_.toString$ = function toString_8(){\n  return ((this.modifiers & 2) != 0?'interface ':(this.modifiers & 1) != 0?'':'class ') + this.typeName;\n}\n;\n_.modifiers = 0;\n_.seedId = 0;\nfunction ClassCastException_0(){\n  RuntimeException_0.call(this);\n}\n\ndefineSeed(222, 21, makeCastMap([Q$Serializable, Q$Throwable]), ClassCastException_0);\nfunction IllegalArgumentException_0(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(223, 21, makeCastMap([Q$Serializable, Q$Throwable]), IllegalArgumentException_0);\nfunction IllegalStateException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction IllegalStateException_1(s){\n  RuntimeException_1.call(this, s);\n}\n\ndefineSeed(224, 21, makeCastMap([Q$Serializable, Q$Throwable]), IllegalStateException_0, IllegalStateException_1);\nfunction IndexOutOfBoundsException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction IndexOutOfBoundsException_1(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(225, 21, makeCastMap([Q$Serializable, Q$Throwable]), IndexOutOfBoundsException_0, IndexOutOfBoundsException_1);\ndefineSeed(227, 1, makeCastMap([Q$Serializable, Q$Number]));\nfunction Integer_0(value_0){\n  this.value_0 = value_0;\n}\n\nfunction toPowerOfTwoString(value_0){\n  var buf, digits, pos;\n  buf = initDim(_3C_classLit, makeCastMap([Q$Serializable]), -1, 8, 1);\n  digits = ($clinit_Number$__Digits() , digits_0);\n  pos = 7;\n  if (value_0 >= 0) {\n    while (value_0 > 15) {\n      buf[pos--] = digits[value_0 & 15];\n      value_0 >>= 4;\n    }\n  }\n   else {\n    while (pos > 0) {\n      buf[pos--] = digits[value_0 & 15];\n      value_0 >>= 4;\n    }\n  }\n  buf[pos] = digits[value_0 & 15];\n  return __valueOf(buf, pos, 8);\n}\n\nfunction valueOf(i){\n  var rebase, result;\n  if (i > -129 && i < 128) {\n    rebase = i + 128;\n    result = ($clinit_Integer$BoxedValues() , boxedValues)[rebase];\n    !result && (result = boxedValues[rebase] = new Integer_0(i));\n    return result;\n  }\n  return new Integer_0(i);\n}\n\ndefineSeed(226, 227, makeCastMap([Q$Serializable, Q$Comparable, Q$Integer, Q$Number]), Integer_0);\n_.equals$ = function equals_5(o){\n  return instanceOf(o, Q$Integer) && dynamicCast(o, Q$Integer).value_0 == this.value_0;\n}\n;\n_.hashCode$ = function hashCode_7(){\n  return this.value_0;\n}\n;\n_.toString$ = function toString_9(){\n  return '' + this.value_0;\n}\n;\n_.value_0 = 0;\nfunction $clinit_Integer$BoxedValues(){\n  $clinit_Integer$BoxedValues = nullMethod;\n  boxedValues = initDim(_3Ljava_lang_Integer_2_classLit, makeCastMap([Q$Serializable]), Q$Integer, 256, 0);\n}\n\nvar boxedValues;\nfunction cos_0(x_0){\n  return Math.cos(x_0);\n}\n\nfunction max_0(y_0){\n  return 5 > y_0?5:y_0;\n}\n\nfunction NullPointerException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction NullPointerException_1(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(230, 21, makeCastMap([Q$Serializable, Q$Throwable]), NullPointerException_0, NullPointerException_1);\nfunction $clinit_Number$__Digits(){\n  $clinit_Number$__Digits = nullMethod;\n  digits_0 = initValues(_3C_classLit, makeCastMap([Q$Serializable]), -1, [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122]);\n}\n\nvar digits_0;\nfunction StackTraceElement_0(methodName){\n  this.className_0 = 'Unknown';\n  this.methodName = methodName;\n  this.lineNumber = -1;\n}\n\ndefineSeed(232, 1, makeCastMap([Q$Serializable, Q$StackTraceElement]), StackTraceElement_0);\n_.toString$ = function toString_10(){\n  return this.className_0 + '.' + this.methodName + '(Unknown Source' + (this.lineNumber >= 0?':' + this.lineNumber:'') + ')';\n}\n;\n_.lineNumber = 0;\nfunction $charAt(this$static, index_0){\n  return this$static.charCodeAt(index_0);\n}\n\nfunction $equals(this$static, other){\n  if (!instanceOf(other, Q$String)) {\n    return false;\n  }\n  return String(this$static) == other;\n}\n\nfunction $equalsIgnoreCase(this$static, other){\n  if (other == null)\n    return false;\n  return this$static == other || this$static.toLowerCase() == other.toLowerCase();\n}\n\nfunction $indexOf_0(this$static, str){\n  return this$static.indexOf(str);\n}\n\nfunction $trim(this$static){\n  if (this$static.length == 0 || this$static[0] > ' ' && this$static[this$static.length - 1] > ' ') {\n    return this$static;\n  }\n  var r1 = this$static.replace(/^(\\s*)/, '');\n  var r2 = r1.replace(/\\s*$/, '');\n  return r2;\n}\n\nfunction __valueOf(x_0, start_0, end){\n  x_0 = x_0.slice(start_0, end);\n  return String.fromCharCode.apply(null, x_0);\n}\n\n_ = String.prototype;\n_.castableTypeMap$ = makeCastMap([Q$String, Q$Serializable, Q$CharSequence, Q$Comparable]);\n_.equals$ = function equals_6(other){\n  return $equals(this, other);\n}\n;\n_.hashCode$ = function hashCode_8(){\n  return getHashCode_0(this);\n}\n;\n_.toString$ = _.toString;\nfunction $clinit_String$HashCache(){\n  $clinit_String$HashCache = nullMethod;\n  back_0 = {};\n  front = {};\n}\n\nfunction compute(str){\n  var hashCode, i, n, nBatch;\n  hashCode = 0;\n  n = str.length;\n  nBatch = n - 4;\n  i = 0;\n  while (i < nBatch) {\n    hashCode = str.charCodeAt(i + 3) + 31 * (str.charCodeAt(i + 2) + 31 * (str.charCodeAt(i + 1) + 31 * (str.charCodeAt(i) + 31 * hashCode))) | 0;\n    i += 4;\n  }\n  while (i < n) {\n    hashCode = hashCode * 31 + $charAt(str, i++);\n  }\n  return hashCode | 0;\n}\n\nfunction getHashCode_0(str){\n  $clinit_String$HashCache();\n  var key = ':' + str;\n  var result = front[key];\n  if (result != null) {\n    return result;\n  }\n  result = back_0[key];\n  result == null && (result = compute(str));\n  increment();\n  return front[key] = result;\n}\n\nfunction increment(){\n  if (count_0 == 256) {\n    back_0 = front;\n    front = {};\n    count_0 = 0;\n  }\n  ++count_0;\n}\n\nvar back_0, count_0 = 0, front;\nfunction StringBuffer_0(){\n  this.impl = new StringBufferImplAppend_0;\n}\n\ndefineSeed(234, 1, makeCastMap([Q$CharSequence]), StringBuffer_0);\n_.toString$ = function toString_11(){\n  return this.impl.string;\n}\n;\nfunction $$init(this$static){\n  this$static.impl = new StringBufferImplAppend_0;\n}\n\nfunction $append_0(this$static, x_0){\n  $append(this$static.impl, x_0);\n  return this$static;\n}\n\nfunction StringBuilder_0(){\n  $$init(this);\n}\n\nfunction StringBuilder_1(s){\n  $$init(this);\n  $append(this.impl, s);\n}\n\ndefineSeed(235, 1, makeCastMap([Q$CharSequence]), StringBuilder_0, StringBuilder_1);\n_.toString$ = function toString_12(){\n  return this.impl.string;\n}\n;\nfunction UnsupportedOperationException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction UnsupportedOperationException_1(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(236, 21, makeCastMap([Q$Serializable, Q$Throwable]), UnsupportedOperationException_0, UnsupportedOperationException_1);\nfunction $advanceToFind(iter, o){\n  var t;\n  while (iter.hasNext()) {\n    t = iter.next_0();\n    if (o == null?t == null:equals__devirtual$(o, t)) {\n      return iter;\n    }\n  }\n  return null;\n}\n\nfunction $toString_0(this$static){\n  var comma, iter, sb, value_0;\n  sb = new StringBuffer_0;\n  comma = null;\n  $append(sb.impl, '[');\n  iter = this$static.iterator();\n  while (iter.hasNext()) {\n    comma != null?($append(sb.impl, comma) , sb):(comma = ', ');\n    value_0 = iter.next_0();\n    $append(sb.impl, value_0 === this$static?'(this Collection)':'' + value_0);\n  }\n  $append(sb.impl, ']');\n  return sb.impl.string;\n}\n\ndefineSeed(237, 1, {});\n_.add_0 = function add_0(o){\n  throw new UnsupportedOperationException_1('Add not supported on this collection');\n}\n;\n_.contains = function contains(o){\n  var iter;\n  iter = $advanceToFind(this.iterator(), o);\n  return !!iter;\n}\n;\n_.isEmpty = function isEmpty(){\n  return this.size_1() == 0;\n}\n;\n_.remove_1 = function remove_9(o){\n  var iter;\n  iter = $advanceToFind(this.iterator(), o);\n  if (iter) {\n    iter.remove_0();\n    return true;\n  }\n   else {\n    return false;\n  }\n}\n;\n_.toString$ = function toString_13(){\n  return $toString_0(this);\n}\n;\nfunction $keySet(this$static){\n  var entrySet;\n  entrySet = new AbstractHashMap$EntrySet_0(this$static);\n  return new AbstractMap$1_0(this$static, entrySet);\n}\n\ndefineSeed(239, 1, makeCastMap([Q$Map]));\n_.equals$ = function equals_7(obj){\n  var entry, entry$iterator, otherKey, otherMap, otherValue;\n  if (obj === this) {\n    return true;\n  }\n  if (!instanceOf(obj, Q$Map)) {\n    return false;\n  }\n  otherMap = dynamicCast(obj, Q$Map);\n  if (this.size_0 != otherMap.size_0) {\n    return false;\n  }\n  for (entry$iterator = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(otherMap)).this$0); $hasNext(entry$iterator.iter);) {\n    entry = entry$iterator.last = dynamicCast($next_3(entry$iterator.iter), Q$Map$Entry);\n    otherKey = entry.getKey();\n    otherValue = entry.getValue();\n    if (!(otherKey == null?this.nullSlotLive:instanceOf(otherKey, Q$String)?$hasStringValue(this, dynamicCast(otherKey, Q$String)):$hasHashValue(this, otherKey, ~~hashCode__devirtual$(otherKey)))) {\n      return false;\n    }\n    if (!equalsWithNullCheck(otherValue, otherKey == null?this.nullSlot:instanceOf(otherKey, Q$String)?$getStringValue(this, dynamicCast(otherKey, Q$String)):$getHashValue(this, otherKey, ~~hashCode__devirtual$(otherKey)))) {\n      return false;\n    }\n  }\n  return true;\n}\n;\n_.hashCode$ = function hashCode_9(){\n  var entry, entry$iterator, hashCode;\n  hashCode = 0;\n  for (entry$iterator = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(this)).this$0); $hasNext(entry$iterator.iter);) {\n    entry = entry$iterator.last = dynamicCast($next_3(entry$iterator.iter), Q$Map$Entry);\n    hashCode += entry.hashCode$();\n    hashCode = ~~hashCode;\n  }\n  return hashCode;\n}\n;\n_.toString$ = function toString_14(){\n  var comma, entry, iter, s;\n  s = '{';\n  comma = false;\n  for (iter = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(this)).this$0); $hasNext(iter.iter);) {\n    entry = iter.last = dynamicCast($next_3(iter.iter), Q$Map$Entry);\n    comma?(s += ', '):(comma = true);\n    s += '' + entry.getKey();\n    s += '=';\n    s += '' + entry.getValue();\n  }\n  return s + '}';\n}\n;\nfunction $addAllHashEntries(this$static, dest){\n  var hashCodeMap = this$static.hashCodeMap;\n  for (var hashCode in hashCodeMap) {\n    var hashCodeInt = parseInt(hashCode, 10);\n    if (hashCode == hashCodeInt) {\n      var array = hashCodeMap[hashCodeInt];\n      for (var i = 0, c = array.length; i < c; ++i) {\n        dest.add_0(array[i]);\n      }\n    }\n  }\n}\n\nfunction $addAllStringEntries(this$static, dest){\n  var stringMap = this$static.stringMap;\n  for (var key in stringMap) {\n    if (key.charCodeAt(0) == 58) {\n      var entry = new AbstractHashMap$MapEntryString_0(this$static, key.substring(1));\n      dest.add_0(entry);\n    }\n  }\n}\n\nfunction $clearImpl(this$static){\n  this$static.hashCodeMap = [];\n  this$static.stringMap = {};\n  this$static.nullSlotLive = false;\n  this$static.nullSlot = null;\n  this$static.size_0 = 0;\n}\n\nfunction $containsKey(this$static, key){\n  return key == null?this$static.nullSlotLive:instanceOf(key, Q$String)?$hasStringValue(this$static, dynamicCast(key, Q$String)):$hasHashValue(this$static, key, ~~hashCode__devirtual$(key));\n}\n\nfunction $get_1(this$static, key){\n  return key == null?this$static.nullSlot:instanceOf(key, Q$String)?$getStringValue(this$static, dynamicCast(key, Q$String)):$getHashValue(this$static, key, ~~hashCode__devirtual$(key));\n}\n\nfunction $getHashValue(this$static, key, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        return entry.getValue();\n      }\n    }\n  }\n  return null;\n}\n\nfunction $getStringValue(this$static, key){\n  return this$static.stringMap[':' + key];\n}\n\nfunction $hasHashValue(this$static, key, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction $hasStringValue(this$static, key){\n  return ':' + key in this$static.stringMap;\n}\n\nfunction $put_0(this$static, key, value_0){\n  return key == null?$putNullSlot(this$static, value_0):instanceOf(key, Q$String)?$putStringValue(this$static, dynamicCast(key, Q$String), value_0):$putHashValue(this$static, key, value_0, ~~hashCode__devirtual$(key));\n}\n\nfunction $putHashValue(this$static, key, value_0, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        var previous = entry.getValue();\n        entry.setValue(value_0);\n        return previous;\n      }\n    }\n  }\n   else {\n    array = this$static.hashCodeMap[hashCode] = [];\n  }\n  var entry = new MapEntryImpl_0(key, value_0);\n  array.push(entry);\n  ++this$static.size_0;\n  return null;\n}\n\nfunction $putNullSlot(this$static, value_0){\n  var result;\n  result = this$static.nullSlot;\n  this$static.nullSlot = value_0;\n  if (!this$static.nullSlotLive) {\n    this$static.nullSlotLive = true;\n    ++this$static.size_0;\n  }\n  return result;\n}\n\nfunction $putStringValue(this$static, key, value_0){\n  var result, stringMap = this$static.stringMap;\n  key = ':' + key;\n  key in stringMap?(result = stringMap[key]):++this$static.size_0;\n  stringMap[key] = value_0;\n  return result;\n}\n\nfunction $remove_6(this$static, key){\n  return key == null?$removeNullSlot(this$static):instanceOf(key, Q$String)?$removeStringValue(this$static, dynamicCast(key, Q$String)):$removeHashValue(this$static, key, ~~hashCode__devirtual$(key));\n}\n\nfunction $removeHashValue(this$static, key, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        array.length == 1?delete this$static.hashCodeMap[hashCode]:array.splice(i, 1);\n        --this$static.size_0;\n        return entry.getValue();\n      }\n    }\n  }\n  return null;\n}\n\nfunction $removeNullSlot(this$static){\n  var result;\n  result = this$static.nullSlot;\n  this$static.nullSlot = null;\n  if (this$static.nullSlotLive) {\n    this$static.nullSlotLive = false;\n    --this$static.size_0;\n  }\n  return result;\n}\n\nfunction $removeStringValue(this$static, key){\n  var result, stringMap = this$static.stringMap;\n  key = ':' + key;\n  if (key in stringMap) {\n    result = stringMap[key];\n    --this$static.size_0;\n    delete stringMap[key];\n  }\n  return result;\n}\n\ndefineSeed(238, 239, makeCastMap([Q$Map]));\n_.equalsBridge = function equalsBridge(value1, value2){\n  return maskUndefined(value1) === maskUndefined(value2) || value1 != null && equals__devirtual$(value1, value2);\n}\n;\n_.nullSlotLive = false;\n_.size_0 = 0;\ndefineSeed(241, 237, makeCastMap([Q$Set]));\n_.equals$ = function equals_8(o){\n  var iter, other, otherItem;\n  if (o === this) {\n    return true;\n  }\n  if (!instanceOf(o, Q$Set)) {\n    return false;\n  }\n  other = dynamicCast(o, Q$Set);\n  if (other.size_1() != this.size_1()) {\n    return false;\n  }\n  for (iter = other.iterator(); iter.hasNext();) {\n    otherItem = iter.next_0();\n    if (!this.contains(otherItem)) {\n      return false;\n    }\n  }\n  return true;\n}\n;\n_.hashCode$ = function hashCode_10(){\n  var hashCode, iter, next;\n  hashCode = 0;\n  for (iter = this.iterator(); iter.hasNext();) {\n    next = iter.next_0();\n    if (next != null) {\n      hashCode += hashCode__devirtual$(next);\n      hashCode = ~~hashCode;\n    }\n  }\n  return hashCode;\n}\n;\nfunction $contains(this$static, o){\n  var entry, key, value_0;\n  if (instanceOf(o, Q$Map$Entry)) {\n    entry = dynamicCast(o, Q$Map$Entry);\n    key = entry.getKey();\n    if ($containsKey(this$static.this$0, key)) {\n      value_0 = $get_1(this$static.this$0, key);\n      return $equals_0(entry.getValue(), value_0);\n    }\n  }\n  return false;\n}\n\nfunction AbstractHashMap$EntrySet_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(240, 241, makeCastMap([Q$Set]), AbstractHashMap$EntrySet_0);\n_.contains = function contains_0(o){\n  return $contains(this, o);\n}\n;\n_.iterator = function iterator_4(){\n  return new AbstractHashMap$EntrySetIterator_0(this.this$0);\n}\n;\n_.remove_1 = function remove_10(entry){\n  var key;\n  if ($contains(this, entry)) {\n    key = dynamicCast(entry, Q$Map$Entry).getKey();\n    $remove_6(this.this$0, key);\n    return true;\n  }\n  return false;\n}\n;\n_.size_1 = function size_1(){\n  return this.this$0.size_0;\n}\n;\nfunction $next_2(this$static){\n  return this$static.last = dynamicCast($next_3(this$static.iter), Q$Map$Entry);\n}\n\nfunction $remove_7(this$static){\n  if (!this$static.last) {\n    throw new IllegalStateException_1('Must call next() before remove().');\n  }\n   else {\n    $remove_8(this$static.iter);\n    $remove_6(this$static.this$0, this$static.last.getKey());\n    this$static.last = null;\n  }\n}\n\nfunction AbstractHashMap$EntrySetIterator_0(this$0){\n  var list;\n  this.this$0 = this$0;\n  list = new ArrayList_0;\n  this$0.nullSlotLive && $add_5(list, new AbstractHashMap$MapEntryNull_0(this$0));\n  $addAllStringEntries(this$0, list);\n  $addAllHashEntries(this$0, list);\n  this.iter = new AbstractList$IteratorImpl_0(list);\n}\n\ndefineSeed(242, 1, {}, AbstractHashMap$EntrySetIterator_0);\n_.hasNext = function hasNext_2(){\n  return $hasNext(this.iter);\n}\n;\n_.next_0 = function next_3(){\n  return $next_2(this);\n}\n;\n_.remove_0 = function remove_11(){\n  $remove_7(this);\n}\n;\n_.last = null;\ndefineSeed(244, 1, makeCastMap([Q$Map$Entry]));\n_.equals$ = function equals_9(other){\n  var entry;\n  if (instanceOf(other, Q$Map$Entry)) {\n    entry = dynamicCast(other, Q$Map$Entry);\n    if (equalsWithNullCheck(this.getKey(), entry.getKey()) && equalsWithNullCheck(this.getValue(), entry.getValue())) {\n      return true;\n    }\n  }\n  return false;\n}\n;\n_.hashCode$ = function hashCode_11(){\n  var keyHash, valueHash;\n  keyHash = 0;\n  valueHash = 0;\n  this.getKey() != null && (keyHash = hashCode__devirtual$(this.getKey()));\n  this.getValue() != null && (valueHash = hashCode__devirtual$(this.getValue()));\n  return keyHash ^ valueHash;\n}\n;\n_.toString$ = function toString_15(){\n  return this.getKey() + '=' + this.getValue();\n}\n;\nfunction AbstractHashMap$MapEntryNull_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(243, 244, makeCastMap([Q$Map$Entry]), AbstractHashMap$MapEntryNull_0);\n",
"_.getKey = function getKey(){\n  return null;\n}\n;\n_.getValue = function getValue(){\n  return this.this$0.nullSlot;\n}\n;\n_.setValue = function setValue(object){\n  return $putNullSlot(this.this$0, object);\n}\n;\nfunction AbstractHashMap$MapEntryString_0(this$0, key){\n  this.this$0 = this$0;\n  this.key = key;\n}\n\ndefineSeed(245, 244, makeCastMap([Q$Map$Entry]), AbstractHashMap$MapEntryString_0);\n_.getKey = function getKey_0(){\n  return this.key;\n}\n;\n_.getValue = function getValue_0(){\n  return $getStringValue(this.this$0, this.key);\n}\n;\n_.setValue = function setValue_0(object){\n  return $putStringValue(this.this$0, this.key, object);\n}\n;\nfunction checkIndex(index_0, size_0){\n  (index_0 < 0 || index_0 >= size_0) && indexOutOfBounds(index_0, size_0);\n}\n\nfunction indexOutOfBounds(index_0, size_0){\n  throw new IndexOutOfBoundsException_1('Index: ' + index_0 + ', Size: ' + size_0);\n}\n\ndefineSeed(246, 237, makeCastMap([Q$List]));\n_.add_1 = function add_1(index_0, element){\n  throw new UnsupportedOperationException_1('Add not supported on this list');\n}\n;\n_.add_0 = function add_2(obj){\n  this.add_1(this.size_1(), obj);\n  return true;\n}\n;\n_.equals$ = function equals_10(o){\n  var elem, elemOther, iter, iterOther, other;\n  if (o === this) {\n    return true;\n  }\n  if (!instanceOf(o, Q$List)) {\n    return false;\n  }\n  other = dynamicCast(o, Q$List);\n  if (this.size_1() != other.size_1()) {\n    return false;\n  }\n  iter = new AbstractList$IteratorImpl_0(this);\n  iterOther = other.iterator();\n  while (iter.i < iter.this$0_0.size_1()) {\n    elem = $next_3(iter);\n    elemOther = $next_3(iterOther);\n    if (!(elem == null?elemOther == null:equals__devirtual$(elem, elemOther))) {\n      return false;\n    }\n  }\n  return true;\n}\n;\n_.hashCode$ = function hashCode_12(){\n  var iter, k, obj;\n  k = 1;\n  iter = new AbstractList$IteratorImpl_0(this);\n  while (iter.i < iter.this$0_0.size_1()) {\n    obj = $next_3(iter);\n    k = 31 * k + (obj == null?0:hashCode__devirtual$(obj));\n    k = ~~k;\n  }\n  return k;\n}\n;\n_.iterator = function iterator_5(){\n  return new AbstractList$IteratorImpl_0(this);\n}\n;\n_.listIterator = function listIterator(){\n  return new AbstractList$ListIteratorImpl_0(this, 0);\n}\n;\n_.listIterator_0 = function listIterator_0(from){\n  return new AbstractList$ListIteratorImpl_0(this, from);\n}\n;\n_.remove_2 = function remove_12(index_0){\n  throw new UnsupportedOperationException_1('Remove not supported on this list');\n}\n;\nfunction $hasNext(this$static){\n  return this$static.i < this$static.this$0_0.size_1();\n}\n\nfunction $next_3(this$static){\n  if (this$static.i >= this$static.this$0_0.size_1()) {\n    throw new NoSuchElementException_0;\n  }\n  return this$static.this$0_0.get_0(this$static.last = this$static.i++);\n}\n\nfunction $remove_8(this$static){\n  if (this$static.last < 0) {\n    throw new IllegalStateException_0;\n  }\n  this$static.this$0_0.remove_2(this$static.last);\n  this$static.i = this$static.last;\n  this$static.last = -1;\n}\n\nfunction AbstractList$IteratorImpl_0(this$0){\n  this.this$0_0 = this$0;\n}\n\ndefineSeed(247, 1, {}, AbstractList$IteratorImpl_0);\n_.hasNext = function hasNext_3(){\n  return $hasNext(this);\n}\n;\n_.next_0 = function next_4(){\n  return $next_3(this);\n}\n;\n_.remove_0 = function remove_13(){\n  $remove_8(this);\n}\n;\n_.i = 0;\n_.last = -1;\nfunction $previous(this$static){\n  if (this$static.i <= 0) {\n    throw new NoSuchElementException_0;\n  }\n  return this$static.this$0.get_0(this$static.last = --this$static.i);\n}\n\nfunction AbstractList$ListIteratorImpl_0(this$0, start_0){\n  var size_0;\n  this.this$0 = this$0;\n  AbstractList$IteratorImpl_0.call(this, this$0);\n  size_0 = this$0.size_1();\n  (start_0 < 0 || start_0 > size_0) && indexOutOfBounds(start_0, size_0);\n  this.i = start_0;\n}\n\ndefineSeed(248, 247, {}, AbstractList$ListIteratorImpl_0);\nfunction $iterator(this$static){\n  var outerIter;\n  outerIter = new AbstractHashMap$EntrySetIterator_0(this$static.val$entrySet.this$0);\n  return new AbstractMap$1$1_0(outerIter);\n}\n\nfunction AbstractMap$1_0(this$0, val$entrySet){\n  this.this$0 = this$0;\n  this.val$entrySet = val$entrySet;\n}\n\ndefineSeed(249, 241, makeCastMap([Q$Set]), AbstractMap$1_0);\n_.contains = function contains_1(key){\n  return $containsKey(this.this$0, key);\n}\n;\n_.iterator = function iterator_6(){\n  return $iterator(this);\n}\n;\n_.size_1 = function size_2(){\n  return this.val$entrySet.this$0.size_0;\n}\n;\nfunction AbstractMap$1$1_0(val$outerIter){\n  this.val$outerIter = val$outerIter;\n}\n\ndefineSeed(250, 1, {}, AbstractMap$1$1_0);\n_.hasNext = function hasNext_4(){\n  return $hasNext(this.val$outerIter.iter);\n}\n;\n_.next_0 = function next_5(){\n  var entry;\n  entry = $next_2(this.val$outerIter);\n  return entry.getKey();\n}\n;\n_.remove_0 = function remove_14(){\n  $remove_7(this.val$outerIter);\n}\n;\nfunction $add_5(this$static, o){\n  setCheck(this$static.array, this$static.size_0++, o);\n  return true;\n}\n\nfunction $get_2(this$static, index_0){\n  checkIndex(index_0, this$static.size_0);\n  return this$static.array[index_0];\n}\n\nfunction $indexOf_1(this$static, o, index_0){\n  for (; index_0 < this$static.size_0; ++index_0) {\n    if (equalsWithNullCheck(o, this$static.array[index_0])) {\n      return index_0;\n    }\n  }\n  return -1;\n}\n\nfunction $remove_9(this$static, index_0){\n  var previous;\n  previous = (checkIndex(index_0, this$static.size_0) , this$static.array[index_0]);\n  splice_0(this$static.array, index_0, 1);\n  --this$static.size_0;\n  return previous;\n}\n\nfunction $remove_10(this$static, o){\n  var i;\n  i = $indexOf_1(this$static, o, 0);\n  if (i == -1) {\n    return false;\n  }\n  $remove_9(this$static, i);\n  return true;\n}\n\nfunction $set_0(this$static, index_0, o){\n  var previous;\n  previous = (checkIndex(index_0, this$static.size_0) , this$static.array[index_0]);\n  setCheck(this$static.array, index_0, o);\n  return previous;\n}\n\nfunction $toArray(this$static, out){\n  var i;\n  out.length < this$static.size_0 && (out = createFrom(out, this$static.size_0));\n  for (i = 0; i < this$static.size_0; ++i) {\n    setCheck(out, i, this$static.array[i]);\n  }\n  out.length > this$static.size_0 && setCheck(out, this$static.size_0, null);\n  return out;\n}\n\nfunction ArrayList_0(){\n  this.array = initDim(_3Ljava_lang_Object_2_classLit, makeCastMap([Q$Serializable]), Q$Object, 0, 0);\n}\n\nfunction splice_0(array, index_0, deleteCount){\n  array.splice(index_0, deleteCount);\n}\n\nfunction splice_1(array, index_0, deleteCount, value_0){\n  array.splice(index_0, deleteCount, value_0);\n}\n\ndefineSeed(251, 246, makeCastMap([Q$Serializable, Q$List]), ArrayList_0);\n_.add_1 = function add_3(index_0, o){\n  (index_0 < 0 || index_0 > this.size_0) && indexOutOfBounds(index_0, this.size_0);\n  splice_1(this.array, index_0, 0, o);\n  ++this.size_0;\n}\n;\n_.add_0 = function add_4(o){\n  return $add_5(this, o);\n}\n;\n_.contains = function contains_2(o){\n  return $indexOf_1(this, o, 0) != -1;\n}\n;\n_.get_0 = function get_2(index_0){\n  return $get_2(this, index_0);\n}\n;\n_.isEmpty = function isEmpty_0(){\n  return this.size_0 == 0;\n}\n;\n_.remove_2 = function remove_15(index_0){\n  return $remove_9(this, index_0);\n}\n;\n_.remove_1 = function remove_16(o){\n  return $remove_10(this, o);\n}\n;\n_.size_1 = function size_3(){\n  return this.size_0;\n}\n;\n_.size_0 = 0;\nfunction $clinit_Collections(){\n  $clinit_Collections = nullMethod;\n  EMPTY_LIST = new Collections$EmptyList_0;\n}\n\nvar EMPTY_LIST;\nfunction Collections$EmptyList_0(){\n}\n\ndefineSeed(253, 246, makeCastMap([Q$Serializable, Q$List]), Collections$EmptyList_0);\n_.contains = function contains_3(object){\n  return false;\n}\n;\n_.get_0 = function get_3(location_0){\n  throw new IndexOutOfBoundsException_0;\n}\n;\n_.size_1 = function size_4(){\n  return 0;\n}\n;\nfunction $equals_0(value1, value2){\n  return maskUndefined(value1) === maskUndefined(value2) || value1 != null && equals__devirtual$(value1, value2);\n}\n\nfunction HashMap_0(){\n  $clearImpl(this);\n}\n\ndefineSeed(254, 238, makeCastMap([Q$Serializable, Q$Map]), HashMap_0);\nfunction $add_6(this$static, o){\n  var old;\n  old = $put_0(this$static.map_0, o, this$static);\n  return old == null;\n}\n\nfunction $contains_0(this$static, o){\n  return $containsKey(this$static.map_0, o);\n}\n\nfunction $remove_11(this$static, o){\n  return $remove_6(this$static.map_0, o) != null;\n}\n\nfunction HashSet_0(){\n  this.map_0 = new HashMap_0;\n}\n\ndefineSeed(255, 241, makeCastMap([Q$Serializable, Q$Set]), HashSet_0);\n_.add_0 = function add_5(o){\n  return $add_6(this, o);\n}\n;\n_.contains = function contains_4(o){\n  return $contains_0(this, o);\n}\n;\n_.isEmpty = function isEmpty_1(){\n  return this.map_0.size_0 == 0;\n}\n;\n_.iterator = function iterator_7(){\n  return $iterator($keySet(this.map_0));\n}\n;\n_.remove_1 = function remove_17(o){\n  return $remove_11(this, o);\n}\n;\n_.size_1 = function size_5(){\n  return this.map_0.size_0;\n}\n;\n_.toString$ = function toString_16(){\n  return $toString_0($keySet(this.map_0));\n}\n;\nfunction MapEntryImpl_0(key, value_0){\n  this.key = key;\n  this.value_0 = value_0;\n}\n\ndefineSeed(256, 244, makeCastMap([Q$Map$Entry]), MapEntryImpl_0);\n_.getKey = function getKey_1(){\n  return this.key;\n}\n;\n_.getValue = function getValue_1(){\n  return this.value_0;\n}\n;\n_.setValue = function setValue_1(value_0){\n  var old;\n  old = this.value_0;\n  this.value_0 = value_0;\n  return old;\n}\n;\nfunction NoSuchElementException_0(){\n  RuntimeException_0.call(this);\n}\n\ndefineSeed(257, 21, makeCastMap([Q$Serializable, Q$Throwable]), NoSuchElementException_0);\nfunction equalsWithNullCheck(a, b){\n  return maskUndefined(a) === maskUndefined(b) || a != null && equals__devirtual$(a, b);\n}\n\ndefineSeed(260, 1, makeCastMap([Q$EventHandler]));\nfunction $clinit_Injector(){\n  $clinit_Injector = nullMethod;\n  INSTANCE_1 = new org_dselent_course_load_scheduler_client_gin_InjectorImpl_0;\n}\n\nvar INSTANCE_1;\nfunction org_dselent_course_load_scheduler_client_gin_InjectorImpl_0(){\n  this.fieldorg_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector = new org_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector_0;\n}\n\ndefineSeed(261, 1, {}, org_dselent_course_load_scheduler_client_gin_InjectorImpl_0);\nfunction $getFragment_com_google_gwt_event_shared(this$static){\n  !this$static.fieldFragment_com$google$gwt$event$shared && (this$static.fieldFragment_com$google$gwt$event$shared = new org_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector_fragment_0);\n  return this$static.fieldFragment_com$google$gwt$event$shared;\n}\n\nfunction $getFragment_org_dselent_course_load_scheduler_client_presenter(this$static){\n  !this$static.fieldFragment_org$dselent$course_load_scheduler$client$presenter && (this$static.fieldFragment_org$dselent$course_load_scheduler$client$presenter = new org_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector_fragment_4(this$static));\n  return this$static.fieldFragment_org$dselent$course_load_scheduler$client$presenter;\n}\n\nfunction $getFragment_org_dselent_course_load_scheduler_client_presenter_impl(this$static){\n  !this$static.fieldFragment_org$dselent$course_load_scheduler$client$presenter$impl && (this$static.fieldFragment_org$dselent$course_load_scheduler$client$presenter$impl = new org_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector_fragment_2(this$static));\n  return this$static.fieldFragment_org$dselent$course_load_scheduler$client$presenter$impl;\n}\n\nfunction $getFragment_org_dselent_course_load_scheduler_client_view(this$static){\n  !this$static.fieldFragment_org$dselent$course_load_scheduler$client$view && (this$static.fieldFragment_org$dselent$course_load_scheduler$client$view = new org_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector_fragment_8(this$static));\n  return this$static.fieldFragment_org$dselent$course_load_scheduler$client$view;\n}\n\nfunction $getFragment_org_dselent_course_load_scheduler_client_view_impl(this$static){\n  !this$static.fieldFragment_org$dselent$course_load_scheduler$client$view$impl && (this$static.fieldFragment_org$dselent$course_load_scheduler$client$view$impl = new org_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector_fragment_6);\n  return this$static.fieldFragment_org$dselent$course_load_scheduler$client$view$impl;\n}\n\nfunction org_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector_0(){\n}\n\ndefineSeed(262, 1, {}, org_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector_0);\n_.fieldFragment_com$google$gwt$event$shared = null;\n_.fieldFragment_org$dselent$course_load_scheduler$client$presenter = null;\n_.fieldFragment_org$dselent$course_load_scheduler$client$presenter$impl = null;\n_.fieldFragment_org$dselent$course_load_scheduler$client$view = null;\n_.fieldFragment_org$dselent$course_load_scheduler$client$view$impl = null;\nfunction BasePresenterImpl_0(){\n  new HashMap_0;\n}\n\ndefineSeed(263, 260, makeCastMap([Q$EventHandler]));\nfunction IndexPresenterImpl_0(view){\n  BasePresenterImpl_0.call(this);\n  this.view = view;\n}\n\ndefineSeed(264, 263, makeCastMap([Q$EventHandler]), IndexPresenterImpl_0);\nfunction SchedulePresenterImpl_0(){\n  BasePresenterImpl_0.call(this);\n}\n\ndefineSeed(265, 263, makeCastMap([Q$EventHandler]), SchedulePresenterImpl_0);\nfunction $go(this$static, container){\n  $clear(container);\n  $add_1(container, this$static.view);\n}\n\nfunction SideBarPresenterImpl_0(view){\n  BasePresenterImpl_0.call(this);\n  this.view = view;\n}\n\ndefineSeed(266, 263, makeCastMap([Q$EventHandler]), SideBarPresenterImpl_0);\nfunction $get_Key$type$org$dselent$course_load_scheduler$client$presenter$impl$IndexPresenterImpl$_annotation$$none$$(this$static){\n  var result;\n  result = new IndexPresenterImpl_0($get_Key$type$org$dselent$course_load_scheduler$client$view$IndexView$_annotation$$none$$($getFragment_org_dselent_course_load_scheduler_client_view(this$static.injector)));\n  $get_Key$type$com$google$gwt$event$shared$SimpleEventBus$_annotation$$none$$($getFragment_com_google_gwt_event_shared(this$static.injector));\n  return result;\n}\n\nfunction $get_Key$type$org$dselent$course_load_scheduler$client$presenter$impl$SchedulePresenterImpl$_annotation$$none$$(this$static){\n  var result;\n  result = new SchedulePresenterImpl_0(($get_Key$type$org$dselent$course_load_scheduler$client$presenter$IndexPresenter$_annotation$$none$$($getFragment_org_dselent_course_load_scheduler_client_presenter(this$static.injector)) , $get_Key$type$org$dselent$course_load_scheduler$client$view$ScheduleView$_annotation$$none$$($getFragment_org_dselent_course_load_scheduler_client_view(this$static.injector))));\n  $get_Key$type$com$google$gwt$event$shared$SimpleEventBus$_annotation$$none$$($getFragment_com_google_gwt_event_shared(this$static.injector));\n  return result;\n}\n\nfunction $get_Key$type$org$dselent$course_load_scheduler$client$presenter$impl$SideBarPresenterImpl$_annotation$$none$$(this$static){\n  var result;\n  result = new SideBarPresenterImpl_0(($get_Key$type$org$dselent$course_load_scheduler$client$presenter$IndexPresenter$_annotation$$none$$($getFragment_org_dselent_course_load_scheduler_client_presenter(this$static.injector)) , $get_Key$type$org$dselent$course_load_scheduler$client$view$SideBarView$_annotation$$none$$($getFragment_org_dselent_course_load_scheduler_client_view(this$static.injector))));\n  $get_Key$type$com$google$gwt$event$shared$SimpleEventBus$_annotation$$none$$($getFragment_com_google_gwt_event_shared(this$static.injector));\n  return result;\n}\n\nfunction org_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector_fragment_2(injector){\n  this.injector = injector;\n}\n\ndefineSeed(267, 1, {}, org_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector_fragment_2);\nfunction $get_Key$type$org$dselent$course_load_scheduler$client$presenter$IndexPresenter$_annotation$$none$$(this$static){\n  var result;\n  if (!this$static.singleton_Key$type$org$dselent$course_load_scheduler$client$presenter$IndexPresenter$_annotation$$none$$) {\n    result = $get_Key$type$org$dselent$course_load_scheduler$client$presenter$impl$IndexPresenterImpl$_annotation$$none$$($getFragment_org_dselent_course_load_scheduler_client_presenter_impl(this$static.injector));\n    this$static.singleton_Key$type$org$dselent$course_load_scheduler$client$presenter$IndexPresenter$_annotation$$none$$ = result;\n  }\n  return this$static.singleton_Key$type$org$dselent$course_load_scheduler$client$presenter$IndexPresenter$_annotation$$none$$;\n}\n\nfunction org_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector_fragment_4(injector){\n  this.injector = injector;\n}\n\ndefineSeed(268, 1, {}, org_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector_fragment_4);\n_.singleton_Key$type$org$dselent$course_load_scheduler$client$presenter$IndexPresenter$_annotation$$none$$ = null;\ndefineSeed(269, 169, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction IndexViewImpl_0(){\n  $initWidget(this, $build_f_VerticalPanel1(new IndexViewImpl_IndexViewImplUiBinderImpl$Widgets_0(this)));\n}\n\ndefineSeed(270, 269, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), IndexViewImpl_0);\nfunction $build_f_VerticalPanel1(this$static){\n  var f_VerticalPanel1, mainPanel, loadingImage, glassLoadingPanel, sb;\n  f_VerticalPanel1 = new VerticalPanel_0;\n  $add_3(f_VerticalPanel1, (mainPanel = new HTMLPanel_0((sb = new StringBuilder_0 , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_0(sb.impl.string)).html) , this$static.owner.mainPanel = mainPanel , mainPanel));\n  $add_3(f_VerticalPanel1, (loadingImage = new Image_1 , setStyleName(($clinit_DOM() , loadingImage.element), 'GBVBXYWDGI') , $setUrl_0(loadingImage, ($clinit_UriUtils() , new SafeUriString_0)) , loadingImage));\n  $add_3(f_VerticalPanel1, (glassLoadingPanel = new PopupPanel_0 , setStyleName($getStyleElement($getFirstChildElement(glassLoadingPanel.element)), 'GBVBXYWDFI') , setStyleName($getStyleElement($getFirstChildElement(glassLoadingPanel.element)), 'GBVBXYWDEI') , glassLoadingPanel));\n  return f_VerticalPanel1;\n}\n\nfunction IndexViewImpl_IndexViewImplUiBinderImpl$Widgets_0(owner){\n  this.owner = owner;\n  this.style_0 = (new IndexViewImpl_IndexViewImplUiBinderImpl_GenBundle_default_InlineClientBundleGenerator_0 , $clinit_IndexViewImpl_IndexViewImplUiBinderImpl_GenBundle_default_InlineClientBundleGenerator$styleInitializer() , style_0);\n  $ensureInjected(this.style_0);\n}\n\ndefineSeed(271, 1, {}, IndexViewImpl_IndexViewImplUiBinderImpl$Widgets_0);\nfunction IndexViewImpl_IndexViewImplUiBinderImpl_GenBundle_default_InlineClientBundleGenerator_0(){\n}\n\ndefineSeed(272, 1, {}, IndexViewImpl_IndexViewImplUiBinderImpl_GenBundle_default_InlineClientBundleGenerator_0);\nvar style_0;\nfunction $ensureInjected(this$static){\n  if (!this$static.injected) {\n    this$static.injected = true;\n    $clinit_StyleInjector();\n    $push_0(toInject, '.GBVBXYWDFI{position:fixed;width:100%;height:100%;visibility:hidden;}.GBVBXYWDEI{background-color:#000;opacity:0.8;}.GBVBXYWDGI{position:fixed;display:block;margin-left:50%;margin-right:50%;z-index:1;visibility:hidden;}');\n    schedule();\n    return true;\n  }\n  return false;\n}\n\nfunction IndexViewImpl_IndexViewImplUiBinderImpl_GenBundle_default_InlineClientBundleGenerator$1_0(){\n}\n\ndefineSeed(273, 1, {}, IndexViewImpl_IndexViewImplUiBinderImpl_GenBundle_default_InlineClientBundleGenerator$1_0);\n_.injected = false;\nfunction $clinit_IndexViewImpl_IndexViewImplUiBinderImpl_GenBundle_default_InlineClientBundleGenerator$styleInitializer(){\n  $clinit_IndexViewImpl_IndexViewImplUiBinderImpl_GenBundle_default_InlineClientBundleGenerator$styleInitializer = nullMethod;\n  style_0 = new IndexViewImpl_IndexViewImplUiBinderImpl_GenBundle_default_InlineClientBundleGenerator$1_0;\n}\n\nfunction ScheduleViewImpl_0(){\n  $initWidget(this, $build_htmlPanel(new ScheduleViewImpl_ScheduleViewImplUiBinderImpl$Widgets_0));\n}\n\ndefineSeed(276, 269, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), ScheduleViewImpl_0);\nfunction $build_grid(this$static){\n  var grid, label0, label1, label2, label3, label4, f_Label1, f_Label2, f_Label3, f_Label4, f_Label5, f_Label6, f_Label7, f_Label8, f_Label9, f_Label10, f_Label11, f_Label12, f_Label13, f_Label14, f_Label15, f_Label16, f_Label17, f_Label18, f_Label19, f_Label20;\n  grid = new Grid_0;\n  $resizeColumns(grid);\n  $resizeRows(grid);\n  $setWidget(grid, 0, 0, (label0 = new Label_0 , $setTextOrHtml(label0.directionalTextHelper, 'Label 0!') , $updateHorizontalAlignment(label0) , $setTextOrHtml(label0.directionalTextHelper, 'New Label') , $updateHorizontalAlignment(label0) , $addDomHandler(label0, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames1, ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE)) , label0));\n  $setWidget(grid, 0, 1, (label1 = new Label_0 , $setTextOrHtml(label1.directionalTextHelper, 'New Label') , $updateHorizontalAlignment(label1) , label1));\n  $setWidget(grid, 0, 2, (label2 = new Label_0 , $setTextOrHtml(label2.directionalTextHelper, 'New Label') , $updateHorizontalAlignment(label2) , label2));\n  $setWidget(grid, 0, 3, (label3 = new Label_0 , $setTextOrHtml(label3.directionalTextHelper, 'New Label') , $updateHorizontalAlignment(label3) , label3));\n  $setWidget(grid, 0, 4, (label4 = new Label_0 , $setTextOrHtml(label4.directionalTextHelper, 'New Label') , $updateHorizontalAlignment(label4) , label4));\n  $setWidget(grid, 1, 0, (f_Label1 = new Label_0 , $setTextOrHtml(f_Label1.directionalTextHelper, 'New Label') , $updateHorizontalAlignment(f_Label1) , f_Label1));\n  $setWidget(grid, 1, 1, (f_Label2 = new Label_0 , $setTextOrHtml(f_Label2.directionalTextHelper, 'New Label') , $updateHorizontalAlignment(f_Label2) , f_Label2));\n  $setWidget(grid, 1, 2, (f_Label3 = new Label_0 , $setTextOrHtml(f_Label3.directionalTextHelper, 'New Label') , $updateHorizontalAlignment(f_Label3) , f_Label3));\n  $setWidget(grid, 1, 3, (f_Label4 = new Label_0 , $setTextOrHtml(f_Label4.directionalTextHelper, 'New Label') , $updateHorizontalAlignment(f_Label4) , f_Label4));\n  $setWidget(grid, 1, 4, (f_Label5 = new Label_0 , $setTextOrHtml(f_Label5.directionalTextHelper, 'New Label') , $updateHorizontalAlignment(f_Label5) , f_Label5));\n  $setWidget(grid, 2, 0, (f_Label6 = new Label_0 , $setTextOrHtml(f_Label6.directionalTextHelper, 'New Label') , $updateHorizontalAlignment(f_Label6) , f_Label6));\n  $setWidget(grid, 2, 1, (f_Label7 = new Label_0 , $setTextOrHtml(f_Label7.directionalTextHelper, 'New Label') , $updateHorizontalAlignment(f_Label7) , f_Label7));\n  $setWidget(grid, 2, 2, (f_Label8 = new Label_0 , $setTextOrHtml(f_Label8.directionalTextHelper, 'New Label') , $updateHorizontalAlignment(f_Label8) , f_Label8));\n  $setWidget(grid, 2, 3, (f_Label9 = new Label_0 , $setTextOrHtml(f_Label9.directionalTextHelper, 'New Label') , $updateHorizontalAlignment(f_Label9) , f_Label9));\n  $setWidget(grid, 2, 4, (f_Label10 = new Label_0 , $setTextOrHtml(f_Label10.directionalTextHelper, 'New Label') , $updateHorizontalAlignment(f_Label10) , f_Label10));\n  $setWidget(grid, 3, 0, (f_Label11 = new Label_0 , $setTextOrHtml(f_Label11.directionalTextHelper, 'New Label') , $updateHorizontalAlignment(f_Label11) , f_Label11));\n  $setWidget(grid, 3, 1, (f_Label12 = new Label_0 , $setTextOrHtml(f_Label12.directionalTextHelper, 'New Label') , $updateHorizontalAlignment(f_Label12) , f_Label12));\n  $setWidget(grid, 3, 2, (f_Label13 = new Label_0 , $setTextOrHtml(f_Label13.directionalTextHelper, 'New Label') , $updateHorizontalAlignment(f_Label13) , f_Label13));\n  $setWidget(grid, 3, 3, (f_Label14 = new Label_0 , $setTextOrHtml(f_Label14.directionalTextHelper, 'New Label') , $updateHorizontalAlignment(f_Label14) , f_Label14));\n  $setWidget(grid, 3, 4, (f_Label15 = new Label_0 , $setTextOrHtml(f_Label15.directionalTextHelper, 'New Label') , $updateHorizontalAlignment(f_Label15) , f_Label15));\n  $setWidget(grid, 4, 0, (f_Label16 = new Label_0 , $setTextOrHtml(f_Label16.directionalTextHelper, 'New Label') , $updateHorizontalAlignment(f_Label16) , f_Label16));\n  $setWidget(grid, 4, 1, (f_Label17 = new Label_0 , $setTextOrHtml(f_Label17.directionalTextHelper, 'New Label') , $updateHorizontalAlignment(f_Label17) , f_Label17));\n  $setWidget(grid, 4, 2, (f_Label18 = new Label_0 , $setTextOrHtml(f_Label18.directionalTextHelper, 'New Label') , $updateHorizontalAlignment(f_Label18) , f_Label18));\n  $setWidget(grid, 4, 3, (f_Label19 = new Label_0 , $setTextOrHtml(f_Label19.directionalTextHelper, 'New Label') , $updateHorizontalAlignment(f_Label19) , f_Label19));\n  $setWidget(grid, 4, 4, (f_Label20 = new Label_0 , $setTextOrHtml(f_Label20.directionalTextHelper, 'New Label') , $updateHorizontalAlignment(f_Label20) , f_Label20));\n  ($clinit_DOM() , grid.element).style['width'] = '448px';\n  grid.element.style['height'] = '301px';\n  return grid;\n}\n\nfunction $build_htmlPanel(this$static){\n  var attachRecord0, htmlPanel;\n  htmlPanel = new HTMLPanel_0($html1(this$static.domId0).html);\n  attachRecord0 = attachToDom(($clinit_DOM() , htmlPanel.element));\n  $get(this$static.domId0Element);\n  attachRecord0.origParent?$insertBefore(attachRecord0.origParent, attachRecord0.element, attachRecord0.origSibling):orphan(attachRecord0.element);\n  $addAndReplaceElement(htmlPanel, $build_grid(this$static), $get(this$static.domId0Element));\n  return htmlPanel;\n}\n\nfunction ScheduleViewImpl_ScheduleViewImplUiBinderImpl$Widgets_0(){\n  var style;\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames1 = new ScheduleViewImpl_ScheduleViewImplUiBinderImpl$Widgets$1_0;\n  style = (new ScheduleViewImpl_ScheduleViewImplUiBinderImpl_GenBundle_default_InlineClientBundleGenerator_0 , $clinit_ScheduleViewImpl_ScheduleViewImplUiBinderImpl_GenBundle_default_InlineClientBundleGenerator$styleInitializer() , style_1);\n  $ensureInjected_0(style);\n  this.domId0 = $createUniqueId($doc);\n  this.domId0Element = new LazyDomElement_0(this.domId0);\n}\n\ndefineSeed(277, 1, {}, ScheduleViewImpl_ScheduleViewImplUiBinderImpl$Widgets_0);\nfunction ScheduleViewImpl_ScheduleViewImplUiBinderImpl$Widgets$1_0(){\n}\n\ndefineSeed(278, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), ScheduleViewImpl_ScheduleViewImplUiBinderImpl$Widgets$1_0);\nfunction ScheduleViewImpl_ScheduleViewImplUiBinderImpl_GenBundle_default_InlineClientBundleGenerator_0(){\n}\n\ndefineSeed(279, 1, {}, ScheduleViewImpl_ScheduleViewImplUiBinderImpl_GenBundle_default_InlineClientBundleGenerator_0);\nvar style_1;\nfunction $ensureInjected_0(this$static){\n  if (!this$static.injected) {\n    this$static.injected = true;\n    $clinit_StyleInjector();\n    $push_0(toInject, '');\n    schedule();\n    return true;\n  }\n  return false;\n}\n\nfunction ScheduleViewImpl_ScheduleViewImplUiBinderImpl_GenBundle_default_InlineClientBundleGenerator$1_0(){\n}\n\ndefineSeed(280, 1, {}, ScheduleViewImpl_ScheduleViewImplUiBinderImpl_GenBundle_default_InlineClientBundleGenerator$1_0);\n_.injected = false;\nfunction $clinit_ScheduleViewImpl_ScheduleViewImplUiBinderImpl_GenBundle_default_InlineClientBundleGenerator$styleInitializer(){\n  $clinit_ScheduleViewImpl_ScheduleViewImplUiBinderImpl_GenBundle_default_InlineClientBundleGenerator$styleInitializer = nullMethod;\n  style_1 = new ScheduleViewImpl_ScheduleViewImplUiBinderImpl_GenBundle_default_InlineClientBundleGenerator$1_0;\n}\n\nfunction $html1(arg0){\n  var sb;\n  sb = new StringBuilder_0;\n  $append(sb.impl, \"<span id='\");\n  $append_0(sb, htmlEscape(arg0));\n  $append(sb.impl, \"'><\\/span>\");\n  return new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_0(sb.impl.string);\n}\n\nfunction SideBarFacultyBottomImpl_0(){\n  var facBottomSection, course1, course2, course3, course4, course5;\n  $initWidget(this, (facBottomSection = new VerticalPanel_0 , $setHorizontalAlignment_0(facBottomSection, ($clinit_HasHorizontalAlignment() , ALIGN_CENTER)) , $setVerticalAlignment(facBottomSection, ($clinit_HasVerticalAlignment() , ALIGN_MIDDLE)) , $add_3(facBottomSection, (course1 = new Label_0 , $setTextOrHtml(course1.directionalTextHelper, 'Course #1 Name') , $updateHorizontalAlignment(course1) , course1)) , $add_3(facBottomSection, (course2 = new Label_0 , $setTextOrHtml(course2.directionalTextHelper, 'Course #2 Name') , $updateHorizontalAlignment(course2) , course2)) , $add_3(facBottomSection, (course3 = new Label_0 , $setTextOrHtml(course3.directionalTextHelper, 'Course #3 Name') , $updateHorizontalAlignment(course3) , course3)) , $add_3(facBottomSection, (course4 = new Label_0 , $setTextOrHtml(course4.directionalTextHelper, 'Course #4 Name') , $updateHorizontalAlignment(course4) , course4)) , $add_3(facBottomSection, (course5 = new Label_0 , $setTextOrHtml(course5.directionalTextHelper, 'Course #5 Name') , $updateHorizontalAlignment(course5) , course5)) , $setClassName(($clinit_DOM() , facBottomSection.element), 'WithPadding') , facBottomSection.element.style['width'] = '280px' , facBottomSection.element.style['height'] = '300px' , facBottomSection));\n}\n\ndefineSeed(283, 169, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), SideBarFacultyBottomImpl_0);\n",
"function SideBarFacultyMiddleImpl_0(){\n  var facMiddleSection, viewScheduleButton, sb, requestChangeButton, sb_0;\n  $initWidget(this, (facMiddleSection = new VerticalPanel_0 , $setHorizontalAlignment_0(facMiddleSection, ($clinit_HasHorizontalAlignment() , ALIGN_CENTER)) , $setVerticalAlignment(facMiddleSection, ($clinit_HasVerticalAlignment() , ALIGN_MIDDLE)) , $add_3(facMiddleSection, (viewScheduleButton = new Button_0 , $setHTML(viewScheduleButton, (sb = new StringBuilder_0 , $append(sb.impl, 'View Schedule') , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_0(sb.impl.string)).html) , viewScheduleButton)) , $add_3(facMiddleSection, (requestChangeButton = new Button_0 , $setHTML(requestChangeButton, (sb_0 = new StringBuilder_0 , $append(sb_0.impl, 'Request Schedule Change') , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_0(sb_0.impl.string)).html) , requestChangeButton)) , $setClassName(($clinit_DOM() , facMiddleSection.element), 'WithPadding') , facMiddleSection.element.style['width'] = '280px' , facMiddleSection.element.style['height'] = '200px' , facMiddleSection));\n}\n\ndefineSeed(285, 169, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), SideBarFacultyMiddleImpl_0);\nfunction SideBarTopViewImpl_0(){\n  var northSection, profilePhoto, profName, profDepartment, profRank, profEmail;\n  $initWidget(this, (northSection = new VerticalPanel_0 , $setHorizontalAlignment_0(northSection, ($clinit_HasHorizontalAlignment() , ALIGN_CENTER)) , $add_3(northSection, (profilePhoto = new Image_1 , ($clinit_DOM() , profilePhoto.element).style['width'] = '100' , $setUrl(profilePhoto, ($clinit_UriUtils() , new SafeUriString_0)) , profilePhoto.element.style['height'] = '100' , profilePhoto)) , $add_3(northSection, (profName = new Label_0 , $setTextOrHtml(profName.directionalTextHelper, 'Professor Name') , $updateHorizontalAlignment(profName) , $setHorizontalAlignment(profName, ALIGN_CENTER) , profName)) , $add_3(northSection, (profDepartment = new Label_0 , $setTextOrHtml(profDepartment.directionalTextHelper, 'Professor Department') , $updateHorizontalAlignment(profDepartment) , $setHorizontalAlignment(profDepartment, ALIGN_CENTER) , profDepartment)) , $add_3(northSection, (profRank = new Label_0 , $setTextOrHtml(profRank.directionalTextHelper, 'Professor Rank') , $updateHorizontalAlignment(profRank) , $setHorizontalAlignment(profRank, ALIGN_CENTER) , profRank)) , $add_3(northSection, (profEmail = new Label_0 , $setTextOrHtml(profEmail.directionalTextHelper, 'Professor Email') , $updateHorizontalAlignment(profEmail) , $setHorizontalAlignment(profEmail, ALIGN_CENTER) , profEmail)) , $setClassName(northSection.element, 'WithPadding') , northSection.element.style['width'] = '280px' , northSection.element.style['height'] = '400px' , northSection));\n}\n\ndefineSeed(288, 169, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), SideBarTopViewImpl_0);\nfunction SideBarViewImpl_0(){\n  var sideBarPanel;\n  $initWidget(this, (sideBarPanel = new DockLayoutPanel_0(($clinit_Style$Unit() , PX)) , $insert(sideBarPanel, new SideBarTopViewImpl_0, ($clinit_DockLayoutPanel$Direction() , NORTH), 400) , $insert(sideBarPanel, new SideBarFacultyBottomImpl_0, SOUTH, 300) , $insert(sideBarPanel, new SideBarFacultyMiddleImpl_0, CENTER_0, 0) , ($clinit_DOM() , sideBarPanel.element).style['width'] = '280px' , sideBarPanel.element.style['height'] = '900px' , sideBarPanel));\n}\n\ndefineSeed(290, 269, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), SideBarViewImpl_0);\nfunction $get_Key$type$org$dselent$course_load_scheduler$client$view$impl$IndexViewImpl$_annotation$$none$$(){\n  var created;\n  created = new IndexViewImpl_0;\n  return created;\n}\n\nfunction $get_Key$type$org$dselent$course_load_scheduler$client$view$impl$ScheduleViewImpl$_annotation$$none$$(){\n  var created;\n  created = new ScheduleViewImpl_0;\n  return created;\n}\n\nfunction $get_Key$type$org$dselent$course_load_scheduler$client$view$impl$SideBarViewImpl$_annotation$$none$$(){\n  var created;\n  created = new SideBarViewImpl_0;\n  return created;\n}\n\nfunction org_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector_fragment_6(){\n}\n\ndefineSeed(292, 1, {}, org_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector_fragment_6);\nfunction $get_Key$type$org$dselent$course_load_scheduler$client$view$IndexView$_annotation$$none$$(this$static){\n  var result;\n  if (!this$static.singleton_Key$type$org$dselent$course_load_scheduler$client$view$IndexView$_annotation$$none$$) {\n    result = $get_Key$type$org$dselent$course_load_scheduler$client$view$impl$IndexViewImpl$_annotation$$none$$($getFragment_org_dselent_course_load_scheduler_client_view_impl(this$static.injector));\n    this$static.singleton_Key$type$org$dselent$course_load_scheduler$client$view$IndexView$_annotation$$none$$ = result;\n  }\n  return this$static.singleton_Key$type$org$dselent$course_load_scheduler$client$view$IndexView$_annotation$$none$$;\n}\n\nfunction $get_Key$type$org$dselent$course_load_scheduler$client$view$ScheduleView$_annotation$$none$$(this$static){\n  var result;\n  if (!this$static.singleton_Key$type$org$dselent$course_load_scheduler$client$view$ScheduleView$_annotation$$none$$) {\n    result = $get_Key$type$org$dselent$course_load_scheduler$client$view$impl$ScheduleViewImpl$_annotation$$none$$($getFragment_org_dselent_course_load_scheduler_client_view_impl(this$static.injector));\n    this$static.singleton_Key$type$org$dselent$course_load_scheduler$client$view$ScheduleView$_annotation$$none$$ = result;\n  }\n  return this$static.singleton_Key$type$org$dselent$course_load_scheduler$client$view$ScheduleView$_annotation$$none$$;\n}\n\nfunction $get_Key$type$org$dselent$course_load_scheduler$client$view$SideBarView$_annotation$$none$$(this$static){\n  var result;\n  if (!this$static.singleton_Key$type$org$dselent$course_load_scheduler$client$view$SideBarView$_annotation$$none$$) {\n    result = $get_Key$type$org$dselent$course_load_scheduler$client$view$impl$SideBarViewImpl$_annotation$$none$$($getFragment_org_dselent_course_load_scheduler_client_view_impl(this$static.injector));\n    this$static.singleton_Key$type$org$dselent$course_load_scheduler$client$view$SideBarView$_annotation$$none$$ = result;\n  }\n  return this$static.singleton_Key$type$org$dselent$course_load_scheduler$client$view$SideBarView$_annotation$$none$$;\n}\n\nfunction org_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector_fragment_8(injector){\n  this.injector = injector;\n}\n\ndefineSeed(293, 1, {}, org_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector_fragment_8);\n_.singleton_Key$type$org$dselent$course_load_scheduler$client$view$IndexView$_annotation$$none$$ = null;\n_.singleton_Key$type$org$dselent$course_load_scheduler$client$view$ScheduleView$_annotation$$none$$ = null;\n_.singleton_Key$type$org$dselent$course_load_scheduler$client$view$SideBarView$_annotation$$none$$ = null;\nvar $entry = registerEntry();\nfunction gwtOnLoad(errFn, modName, modBase, softPermutationId){\n  $moduleName = modName;\n  $moduleBase = modBase;\n  if (errFn)\n    try {\n      $entry(init)();\n    }\n     catch (e) {\n      errFn(modName);\n    }\n   else {\n    $entry(init)();\n  }\n}\n\n",
"var Ljava_lang_Object_2_classLit = createForClass('java.lang.', 'Object', 1), Lcom_google_gwt_core_client_Scheduler_2_classLit = createForClass('com.google.gwt.core.client.', 'Scheduler', 27), Lcom_google_gwt_core_client_JavaScriptObject_2_classLit = createForClass('com.google.gwt.core.client.', 'JavaScriptObject$', 24), _3Ljava_lang_Object_2_classLit = createForArray('[Ljava.lang.', 'Object;', 294), Ljava_lang_Throwable_2_classLit = createForClass('java.lang.', 'Throwable', 23), Ljava_lang_Exception_2_classLit = createForClass('java.lang.', 'Exception', 22), Ljava_lang_RuntimeException_2_classLit = createForClass('java.lang.', 'RuntimeException', 21), Ljava_lang_StackTraceElement_2_classLit = createForClass('java.lang.', 'StackTraceElement', 232), _3Ljava_lang_StackTraceElement_2_classLit = createForArray('[Ljava.lang.', 'StackTraceElement;', 295), Lcom_google_gwt_lang_SeedUtil_2_classLit = createForClass('com.google.gwt.lang.', 'SeedUtil', 120), Ljava_lang_Enum_2_classLit = createForClass('java.lang.', 'Enum', 52), Ljava_lang_Boolean_2_classLit = createForClass('java.lang.', 'Boolean', 220), Ljava_lang_Number_2_classLit = createForClass('java.lang.', 'Number', 227), _3C_classLit = createForArray('', '[C', 296), Ljava_lang_Class_2_classLit = createForClass('java.lang.', 'Class', 221), Ljava_lang_Integer_2_classLit = createForClass('java.lang.', 'Integer', 226), _3Ljava_lang_Integer_2_classLit = createForArray('[Ljava.lang.', 'Integer;', 297), Ljava_lang_String_2_classLit = createForClass('java.lang.', 'String', 2), _3Ljava_lang_String_2_classLit = createForArray('[Ljava.lang.', 'String;', 298), Ljava_lang_ClassCastException_2_classLit = createForClass('java.lang.', 'ClassCastException', 222), Lcom_google_gwt_core_client_JavaScriptException_2_classLit = createForClass('com.google.gwt.core.client.', 'JavaScriptException', 20), Ljava_lang_StringBuilder_2_classLit = createForClass('java.lang.', 'StringBuilder', 235), Ljava_lang_ArrayStoreException_2_classLit = createForClass('java.lang.', 'ArrayStoreException', 219), Lcom_google_gwt_user_client_ui_UIObject_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'UIObject', 161), Lcom_google_gwt_user_client_ui_Widget_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Widget', 160), Lcom_google_gwt_user_client_ui_Panel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Panel', 159), Lcom_google_gwt_user_client_ui_ComplexPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ComplexPanel', 158), Lcom_google_gwt_user_client_ui_LayoutPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'LayoutPanel', 193), Lcom_google_gwt_user_client_ui_RootLayoutPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootLayoutPanel', 201), Lcom_google_gwt_user_client_ui_RootLayoutPanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootLayoutPanel$1', 202), Lcom_google_web_bindery_event_shared_UmbrellaException_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'UmbrellaException', 110), Lcom_google_gwt_event_shared_UmbrellaException_2_classLit = createForClass('com.google.gwt.event.shared.', 'UmbrellaException', 109), Lcom_google_gwt_user_client_ui_AttachDetachException_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException', 162), Lcom_google_gwt_user_client_ui_AttachDetachException$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException$1', 163), Lcom_google_gwt_user_client_ui_AttachDetachException$2_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException$2', 164), Lorg_dselent_course_1load_1scheduler_client_event_1handler_EventHandlerAdapter_2_classLit = createForClass('org.dselent.course_load_scheduler.client.event_handler.', 'EventHandlerAdapter', 260), Lorg_dselent_course_1load_1scheduler_client_presenter_impl_BasePresenterImpl_2_classLit = createForClass('org.dselent.course_load_scheduler.client.presenter.impl.', 'BasePresenterImpl', 263), Lorg_dselent_course_1load_1scheduler_client_presenter_impl_IndexPresenterImpl_2_classLit = createForClass('org.dselent.course_load_scheduler.client.presenter.impl.', 'IndexPresenterImpl', 264), Lorg_dselent_course_1load_1scheduler_client_presenter_impl_SideBarPresenterImpl_2_classLit = createForClass('org.dselent.course_load_scheduler.client.presenter.impl.', 'SideBarPresenterImpl', 266), Lorg_dselent_course_1load_1scheduler_client_presenter_impl_SchedulePresenterImpl_2_classLit = createForClass('org.dselent.course_load_scheduler.client.presenter.impl.', 'SchedulePresenterImpl', 265), Ljava_lang_NullPointerException_2_classLit = createForClass('java.lang.', 'NullPointerException', 230), Ljava_lang_IllegalArgumentException_2_classLit = createForClass('java.lang.', 'IllegalArgumentException', 223), Lcom_google_gwt_core_client_impl_StringBufferImpl_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StringBufferImpl', 36), Lcom_google_gwt_user_client_ui_AbsolutePanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AbsolutePanel', 157), Lcom_google_gwt_user_client_ui_RootPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel', 203), Lcom_google_gwt_user_client_ui_RootPanel$DefaultRootPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$DefaultRootPanel', 206), Lcom_google_gwt_user_client_ui_RootPanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$1', 204), Lcom_google_gwt_user_client_ui_RootPanel$3_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$3', 205), Lorg_dselent_course_1load_1scheduler_client_gin_org_1dselent_1course_1load_1scheduler_1client_1gin_1InjectorImpl_2_classLit = createForClass('org.dselent.course_load_scheduler.client.gin.', 'org_dselent_course_load_scheduler_client_gin_InjectorImpl', 261), Lcom_google_gwt_core_client_impl_StringBufferImplAppend_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StringBufferImplAppend', 37), Lcom_google_gwt_core_client_Duration_2_classLit = createForClass('com.google.gwt.core.client.', 'Duration', 18), Lcom_google_gwt_core_client_impl_SchedulerImpl_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'SchedulerImpl', 29), Lcom_google_gwt_core_client_impl_SchedulerImpl$Flusher_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'SchedulerImpl$Flusher', 30), Lcom_google_gwt_core_client_impl_SchedulerImpl$Rescuer_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'SchedulerImpl$Rescuer', 31), Lcom_google_web_bindery_event_shared_Event_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'Event', 93), Lcom_google_gwt_event_shared_GwtEvent_2_classLit = createForClass('com.google.gwt.event.shared.', 'GwtEvent', 92), Lcom_google_gwt_user_client_Window$ClosingEvent_2_classLit = createForClass('com.google.gwt.user.client.', 'Window$ClosingEvent', 143), Lcom_google_gwt_event_shared_HandlerManager_2_classLit = createForClass('com.google.gwt.event.shared.', 'HandlerManager', 104), Lcom_google_gwt_user_client_Window$WindowHandlers_2_classLit = createForClass('com.google.gwt.user.client.', 'Window$WindowHandlers', 144), Lcom_google_web_bindery_event_shared_Event$Type_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'Event$Type', 96), Lcom_google_gwt_event_shared_GwtEvent$Type_2_classLit = createForClass('com.google.gwt.event.shared.', 'GwtEvent$Type', 95), Lcom_google_web_bindery_event_shared_EventBus_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'EventBus', 103), Lcom_google_web_bindery_event_shared_SimpleEventBus_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus', 106), Lcom_google_gwt_event_shared_HandlerManager$Bus_2_classLit = createForClass('com.google.gwt.event.shared.', 'HandlerManager$Bus', 105), Lcom_google_web_bindery_event_shared_SimpleEventBus$1_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus$1', 216), Lcom_google_web_bindery_event_shared_SimpleEventBus$2_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus$2', 217), Lcom_google_web_bindery_event_shared_SimpleEventBus$3_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus$3', 218), Ljava_util_AbstractMap_2_classLit = createForClass('java.util.', 'AbstractMap', 239), Ljava_util_AbstractHashMap_2_classLit = createForClass('java.util.', 'AbstractHashMap', 238), Ljava_util_HashMap_2_classLit = createForClass('java.util.', 'HashMap', 254), Ljava_util_AbstractCollection_2_classLit = createForClass('java.util.', 'AbstractCollection', 237), Ljava_util_AbstractSet_2_classLit = createForClass('java.util.', 'AbstractSet', 241), Ljava_util_AbstractHashMap$EntrySet_2_classLit = createForClass('java.util.', 'AbstractHashMap$EntrySet', 240), Ljava_util_AbstractHashMap$EntrySetIterator_2_classLit = createForClass('java.util.', 'AbstractHashMap$EntrySetIterator', 242), Ljava_util_AbstractMapEntry_2_classLit = createForClass('java.util.', 'AbstractMapEntry', 244), Ljava_util_AbstractHashMap$MapEntryNull_2_classLit = createForClass('java.util.', 'AbstractHashMap$MapEntryNull', 243), Ljava_util_AbstractHashMap$MapEntryString_2_classLit = createForClass('java.util.', 'AbstractHashMap$MapEntryString', 245), Ljava_util_AbstractMap$1_2_classLit = createForClass('java.util.', 'AbstractMap$1', 249), Ljava_util_AbstractMap$1$1_2_classLit = createForClass('java.util.', 'AbstractMap$1$1', 250), Ljava_util_HashSet_2_classLit = createForClass('java.util.', 'HashSet', 255), Lcom_google_gwt_layout_client_Layout_2_classLit = createForClass('com.google.gwt.layout.client.', 'Layout', 123), Lcom_google_gwt_layout_client_Layout$Layer_2_classLit = createForClass('com.google.gwt.layout.client.', 'Layout$Layer', 125), Lcom_google_gwt_animation_client_Animation_2_classLit = createForClass('com.google.gwt.animation.client.', 'Animation', 3), Lcom_google_gwt_layout_client_Layout$1_2_classLit = createForClass('com.google.gwt.layout.client.', 'Layout$1', 124), Lcom_google_gwt_animation_client_Animation$1_2_classLit = createForClass('com.google.gwt.animation.client.', 'Animation$1', 4), Lcom_google_gwt_animation_client_AnimationScheduler_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationScheduler', 5), Lcom_google_gwt_animation_client_AnimationScheduler$AnimationHandle_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationScheduler$AnimationHandle', 6), Lcom_google_gwt_user_client_ui_LayoutCommand_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'LayoutCommand', 174), Lcom_google_gwt_user_client_impl_WindowImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'WindowImpl', 155), Lcom_google_gwt_user_client_impl_WindowImplMozilla_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'WindowImplMozilla', 156), Lcom_google_gwt_event_logical_shared_ResizeEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'ResizeEvent', 100), Ljava_lang_UnsupportedOperationException_2_classLit = createForClass('java.lang.', 'UnsupportedOperationException', 236), Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit = createForEnum('com.google.gwt.i18n.client.', 'HasDirection$Direction', 113, values_6), _3Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit = createForArray('[Lcom.google.gwt.i18n.client.', 'HasDirection$Direction;', 299), Lcom_google_gwt_user_client_Event$NativePreviewEvent_2_classLit = createForClass('com.google.gwt.user.client.', 'Event$NativePreviewEvent', 140), Lcom_google_gwt_user_client_ui_WidgetCollection_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'WidgetCollection', 209), _3Lcom_google_gwt_user_client_ui_Widget_2_classLit = createForArray('[Lcom.google.gwt.user.client.ui.', 'Widget;', 300), Lcom_google_gwt_user_client_ui_WidgetCollection$WidgetIterator_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'WidgetCollection$WidgetIterator', 210), Lorg_dselent_course_1load_1scheduler_client_gin_org_1dselent_1course_1load_1scheduler_1client_1gin_1Injector_1InjectorGinjector_2_classLit = createForClass('org.dselent.course_load_scheduler.client.gin.', 'org_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector', 262), Lorg_dselent_course_1load_1scheduler_client_presenter_impl_org_1dselent_1course_1load_1scheduler_1client_1gin_1Injector_1InjectorGinjector_1fragment_2_classLit = createForClass('org.dselent.course_load_scheduler.client.presenter.impl.', 'org_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector_fragment', 267), Lcom_google_gwt_layout_client_LayoutImpl_2_classLit = createForClass('com.google.gwt.layout.client.', 'LayoutImpl', 126), _3Ljava_lang_Boolean_2_classLit = createForArray('[Ljava.lang.', 'Boolean;', 301), Ljava_lang_StringBuffer_2_classLit = createForClass('java.lang.', 'StringBuffer', 234), Lcom_google_gwt_user_client_impl_DOMImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImpl', 145), Lcom_google_gwt_user_client_impl_DOMImpl$1_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImpl$1', 146), Lcom_google_gwt_user_client_impl_DOMImplStandard_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImplStandard', 148), Lcom_google_gwt_user_client_impl_DOMImplMozilla_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImplMozilla', 147), Ljava_lang_IllegalStateException_2_classLit = createForClass('java.lang.', 'IllegalStateException', 224), Lorg_dselent_course_1load_1scheduler_client_view_org_1dselent_1course_1load_1scheduler_1client_1gin_1Injector_1InjectorGinjector_1fragment_2_classLit = createForClass('org.dselent.course_load_scheduler.client.view.', 'org_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector_fragment', 293), Lorg_dselent_course_1load_1scheduler_client_presenter_org_1dselent_1course_1load_1scheduler_1client_1gin_1Injector_1InjectorGinjector_1fragment_2_classLit = createForClass('org.dselent.course_load_scheduler.client.presenter.', 'org_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector_fragment', 268), Ljava_util_AbstractList_2_classLit = createForClass('java.util.', 'AbstractList', 246), Ljava_util_ArrayList_2_classLit = createForClass('java.util.', 'ArrayList', 251), Ljava_util_AbstractList$IteratorImpl_2_classLit = createForClass('java.util.', 'AbstractList$IteratorImpl', 247), Ljava_util_AbstractList$ListIteratorImpl_2_classLit = createForClass('java.util.', 'AbstractList$ListIteratorImpl', 248), Lcom_google_gwt_dom_client_Style$Unit_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit', 72, values_4), _3Lcom_google_gwt_dom_client_Style$Unit_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Unit;', 302), Lcom_google_gwt_dom_client_Style$Display_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display', 51, values_0), _3Lcom_google_gwt_dom_client_Style$Display_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Display;', 303), Lcom_google_gwt_dom_client_Style$Overflow_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow', 57, values_1), _3Lcom_google_gwt_dom_client_Style$Overflow_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Overflow;', 304), Lcom_google_gwt_dom_client_Style$Position_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position', 62, values_2), _3Lcom_google_gwt_dom_client_Style$Position_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Position;', 305), Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign', 67, values_3), _3Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$TextAlign;', 306), Lcom_google_gwt_dom_client_Style$Visibility_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Visibility', 82, values_5), _3Lcom_google_gwt_dom_client_Style$Visibility_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Visibility;', 307), Lcom_google_gwt_dom_client_Style$Unit$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$1', 73, null), Lcom_google_gwt_dom_client_Style$Unit$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$2', 74, null), Lcom_google_gwt_dom_client_Style$Unit$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$3', 75, null), Lcom_google_gwt_dom_client_Style$Unit$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$4', 76, null), Lcom_google_gwt_dom_client_Style$Unit$5_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$5', 77, null), Lcom_google_gwt_dom_client_Style$Unit$6_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$6', 78, null), Lcom_google_gwt_dom_client_Style$Unit$7_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$7', 79, null), Lcom_google_gwt_dom_client_Style$Unit$8_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$8', 80, null), Lcom_google_gwt_dom_client_Style$Unit$9_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$9', 81, null), Lcom_google_gwt_dom_client_Style$Display$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display$1', 53, null), Lcom_google_gwt_dom_client_Style$Display$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display$2', 54, null), Lcom_google_gwt_dom_client_Style$Display$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display$3', 55, null), Lcom_google_gwt_dom_client_Style$Display$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display$4', 56, null), Lcom_google_gwt_dom_client_Style$Overflow$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow$1', 58, null), Lcom_google_gwt_dom_client_Style$Overflow$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow$2', 59, null), Lcom_google_gwt_dom_client_Style$Overflow$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow$3', 60, null), Lcom_google_gwt_dom_client_Style$Overflow$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow$4', 61, null), Lcom_google_gwt_dom_client_Style$Position$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position$1', 63, null), Lcom_google_gwt_dom_client_Style$Position$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position$2', 64, null), Lcom_google_gwt_dom_client_Style$Position$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position$3', 65, null), Lcom_google_gwt_dom_client_Style$Position$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position$4', 66, null), Lcom_google_gwt_dom_client_Style$TextAlign$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$1', 68, null), Lcom_google_gwt_dom_client_Style$TextAlign$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$2', 69, null), Lcom_google_gwt_dom_client_Style$TextAlign$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$3', 70, null), Lcom_google_gwt_dom_client_Style$TextAlign$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$4', 71, null), Lcom_google_gwt_dom_client_Style$Visibility$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Visibility$1', 83, null), Lcom_google_gwt_dom_client_Style$Visibility$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Visibility$2', 84, null), Lcom_google_gwt_event_shared_LegacyHandlerWrapper_2_classLit = createForClass('com.google.gwt.event.shared.', 'LegacyHandlerWrapper', 107), Ljava_lang_IndexOutOfBoundsException_2_classLit = createForClass('java.lang.', 'IndexOutOfBoundsException', 225), Ljava_util_MapEntryImpl_2_classLit = createForClass('java.util.', 'MapEntryImpl', 256), Lcom_google_gwt_event_logical_shared_CloseEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'CloseEvent', 99), Lcom_google_gwt_event_shared_org_1dselent_1course_1load_1scheduler_1client_1gin_1Injector_1InjectorGinjector_1fragment_2_classLit = createForClass('com.google.gwt.event.shared.', 'org_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector_fragment', 111), Lorg_dselent_course_1load_1scheduler_client_view_impl_org_1dselent_1course_1load_1scheduler_1client_1gin_1Injector_1InjectorGinjector_1fragment_2_classLit = createForClass('org.dselent.course_load_scheduler.client.view.impl.', 'org_dselent_course_load_scheduler_client_gin_Injector_InjectorGinjector_fragment', 292), Lcom_google_gwt_user_client_ui_Composite_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Composite', 169), Lorg_dselent_course_1load_1scheduler_client_view_impl_BaseViewImpl_2_classLit = createForClass('org.dselent.course_load_scheduler.client.view.impl.', 'BaseViewImpl', 269), Lorg_dselent_course_1load_1scheduler_client_view_impl_IndexViewImpl_2_classLit = createForClass('org.dselent.course_load_scheduler.client.view.impl.', 'IndexViewImpl', 270), Lcom_google_gwt_event_shared_EventBus_2_classLit = createForClass('com.google.gwt.event.shared.', 'EventBus', 102), Lcom_google_gwt_event_shared_SimpleEventBus_2_classLit = createForClass('com.google.gwt.event.shared.', 'SimpleEventBus', 108), Lorg_dselent_course_1load_1scheduler_client_view_impl_ScheduleViewImpl_2_classLit = createForClass('org.dselent.course_load_scheduler.client.view.impl.', 'ScheduleViewImpl', 276), Lorg_dselent_course_1load_1scheduler_client_view_impl_SideBarViewImpl_2_classLit = createForClass('org.dselent.course_load_scheduler.client.view.impl.', 'SideBarViewImpl', 290), Lcom_google_gwt_aria_client_Attribute_2_classLit = createForClass('com.google.gwt.aria.client.', 'Attribute', 15), Ljava_util_NoSuchElementException_2_classLit = createForClass('java.util.', 'NoSuchElementException', 257), Lcom_google_gwt_aria_client_PrimitiveValueAttribute_2_classLit = createForClass('com.google.gwt.aria.client.', 'PrimitiveValueAttribute', 16), Lcom_google_gwt_aria_client_AriaValueAttribute_2_classLit = createForClass('com.google.gwt.aria.client.', 'AriaValueAttribute', 14), Lorg_dselent_course_1load_1scheduler_client_view_impl_IndexViewImpl_1IndexViewImplUiBinderImpl$Widgets_2_classLit = createForClass('org.dselent.course_load_scheduler.client.view.impl.', 'IndexViewImpl_IndexViewImplUiBinderImpl$Widgets', 271), Lcom_google_gwt_user_client_ui_HTMLPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLPanel', 178), Lorg_dselent_course_1load_1scheduler_client_view_impl_ScheduleViewImpl_1ScheduleViewImplUiBinderImpl$Widgets_2_classLit = createForClass('org.dselent.course_load_scheduler.client.view.impl.', 'ScheduleViewImpl_ScheduleViewImplUiBinderImpl$Widgets', 277), Lorg_dselent_course_1load_1scheduler_client_view_impl_ScheduleViewImpl_1ScheduleViewImplUiBinderImpl$Widgets$1_2_classLit = createForClass('org.dselent.course_load_scheduler.client.view.impl.', 'ScheduleViewImpl_ScheduleViewImplUiBinderImpl$Widgets$1', 278), Lcom_google_gwt_animation_client_AnimationSchedulerImpl_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImpl', 7), Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImplTimer', 10), Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$AnimationHandleImpl_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImplTimer$AnimationHandleImpl', 13), _3Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$AnimationHandleImpl_2_classLit = createForArray('[Lcom.google.gwt.animation.client.', 'AnimationSchedulerImplTimer$AnimationHandleImpl;', 308), Lcom_google_gwt_user_client_Timer_2_classLit = createForClass('com.google.gwt.user.client.', 'Timer', 12), Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$1_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImplTimer$1', 11), Lcom_google_gwt_animation_client_AnimationSchedulerImplMozilla_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImplMozilla', 8), Lcom_google_gwt_animation_client_AnimationSchedulerImplMozilla$AnimationHandleImpl_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImplMozilla$AnimationHandleImpl', 9), Ljava_util_Collections$EmptyList_2_classLit = createForClass('java.util.', 'Collections$EmptyList', 253), Lcom_google_gwt_event_dom_client_DomEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'DomEvent', 91), Lcom_google_gwt_event_dom_client_DomEvent$Type_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'DomEvent$Type', 94), Lcom_google_gwt_user_client_ui_CellPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'CellPanel', 168), Lcom_google_gwt_user_client_ui_VerticalPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'VerticalPanel', 208), Lcom_google_gwt_user_client_ui_HasHorizontalAlignment$AutoHorizontalAlignmentConstant_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HasHorizontalAlignment$AutoHorizontalAlignmentConstant', 184), Lcom_google_gwt_user_client_ui_HasHorizontalAlignment$HorizontalAlignmentConstant_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HasHorizontalAlignment$HorizontalAlignmentConstant', 185), Lcom_google_gwt_user_client_ui_HasVerticalAlignment$VerticalAlignmentConstant_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HasVerticalAlignment$VerticalAlignmentConstant', 186), Lcom_google_gwt_user_client_ui_DockLayoutPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DockLayoutPanel', 171), Lcom_google_gwt_user_client_ui_DockLayoutPanel$Direction_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'DockLayoutPanel$Direction', 172, values_7), _3Lcom_google_gwt_user_client_ui_DockLayoutPanel$Direction_2_classLit = createForArray('[Lcom.google.gwt.user.client.ui.', 'DockLayoutPanel$Direction;', 309), Lcom_google_gwt_user_client_ui_DockLayoutPanel$LayoutData_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DockLayoutPanel$LayoutData', 175), Lcom_google_gwt_user_client_ui_DockLayoutPanel$DockAnimateCommand_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DockLayoutPanel$DockAnimateCommand', 173), Lcom_google_gwt_event_dom_client_PrivateMap_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'PrivateMap', 97), Lcom_google_gwt_uibinder_client_LazyDomElement_2_classLit = createForClass('com.google.gwt.uibinder.client.', 'LazyDomElement', 133), Lcom_google_gwt_user_client_ui_Image_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Image', 187), Lcom_google_gwt_user_client_ui_Image$State_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Image$State', 188), Lcom_google_gwt_user_client_ui_Image$UnclippedState_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Image$UnclippedState', 190), Lcom_google_gwt_user_client_ui_Image$State$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Image$State$1', 189), Lcom_google_gwt_user_client_ui_SimplePanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'SimplePanel', 195), Lcom_google_gwt_user_client_ui_PopupPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel', 194), Lcom_google_gwt_user_client_ui_PopupPanel$ResizeAnimation_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel$ResizeAnimation', 199), Lcom_google_gwt_user_client_ui_PopupPanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel$1', 196), Lcom_google_gwt_user_client_ui_PopupPanel$3_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel$3', 197), Lcom_google_gwt_user_client_ui_PopupPanel$4_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel$4', 198), Lcom_google_gwt_user_client_ui_SimplePanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'SimplePanel$1', 207), Lcom_google_gwt_uibinder_client_UiBinderUtil$TempAttachment_2_classLit = createForClass('com.google.gwt.uibinder.client.', 'UiBinderUtil$TempAttachment', 135), Lcom_google_gwt_user_client_ui_HTMLTable_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable', 177), Lcom_google_gwt_user_client_ui_Grid_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Grid', 176), Lcom_google_gwt_user_client_ui_HTMLTable$CellFormatter_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable$CellFormatter', 180), Lcom_google_gwt_user_client_ui_HTMLTable$ColumnFormatter_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable$ColumnFormatter', 181), Lcom_google_gwt_user_client_ui_HTMLTable$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable$1', 179), Lorg_dselent_course_1load_1scheduler_client_view_impl_SideBarTopViewImpl_2_classLit = createForClass('org.dselent.course_load_scheduler.client.view.impl.', 'SideBarTopViewImpl', 288), Lorg_dselent_course_1load_1scheduler_client_view_impl_SideBarFacultyBottomImpl_2_classLit = createForClass('org.dselent.course_load_scheduler.client.view.impl.', 'SideBarFacultyBottomImpl', 283), Lorg_dselent_course_1load_1scheduler_client_view_impl_SideBarFacultyMiddleImpl_2_classLit = createForClass('org.dselent.course_load_scheduler.client.view.impl.', 'SideBarFacultyMiddleImpl', 285), Lorg_dselent_course_1load_1scheduler_client_view_impl_IndexViewImpl_1IndexViewImplUiBinderImpl_1GenBundle_1default_1InlineClientBundleGenerator_2_classLit = createForClass('org.dselent.course_load_scheduler.client.view.impl.', 'IndexViewImpl_IndexViewImplUiBinderImpl_GenBundle_default_InlineClientBundleGenerator', 272), Lorg_dselent_course_1load_1scheduler_client_view_impl_IndexViewImpl_1IndexViewImplUiBinderImpl_1GenBundle_1default_1InlineClientBundleGenerator$1_2_classLit = createForClass('org.dselent.course_load_scheduler.client.view.impl.', 'IndexViewImpl_IndexViewImplUiBinderImpl_GenBundle_default_InlineClientBundleGenerator$1', 273), Lorg_dselent_course_1load_1scheduler_client_view_impl_ScheduleViewImpl_1ScheduleViewImplUiBinderImpl_1GenBundle_1default_1InlineClientBundleGenerator_2_classLit = createForClass('org.dselent.course_load_scheduler.client.view.impl.', 'ScheduleViewImpl_ScheduleViewImplUiBinderImpl_GenBundle_default_InlineClientBundleGenerator', 279), Lorg_dselent_course_1load_1scheduler_client_view_impl_ScheduleViewImpl_1ScheduleViewImplUiBinderImpl_1GenBundle_1default_1InlineClientBundleGenerator$1_2_classLit = createForClass('org.dselent.course_load_scheduler.client.view.impl.', 'ScheduleViewImpl_ScheduleViewImplUiBinderImpl_GenBundle_default_InlineClientBundleGenerator$1', 280), Lcom_google_gwt_safehtml_shared_OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_2_classLit = createForClass('com.google.gwt.safehtml.shared.', 'OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml', 128), Lcom_google_gwt_user_client_ui_LabelBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'LabelBase', 192), Lcom_google_gwt_user_client_ui_Label_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Label', 191), Lcom_google_gwt_safehtml_shared_SafeHtmlString_2_classLit = createForClass('com.google.gwt.safehtml.shared.', 'SafeHtmlString', 129), Lcom_google_gwt_user_client_impl_ElementMapperImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'ElementMapperImpl', 149), Lcom_google_gwt_user_client_impl_ElementMapperImpl$FreeNode_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'ElementMapperImpl$FreeNode', 150), Lcom_google_gwt_safehtml_shared_SafeUriString_2_classLit = createForClass('com.google.gwt.safehtml.shared.', 'SafeUriString', 131), Lcom_google_gwt_user_client_ui_impl_PopupImplMozilla$1_2_classLit = createForClass('com.google.gwt.user.client.ui.impl.', 'PopupImplMozilla$1', 213), Lcom_google_gwt_user_client_ui_DirectionalTextHelper_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DirectionalTextHelper', 170), Lcom_google_gwt_event_dom_client_HumanInputEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'HumanInputEvent', 90), Lcom_google_gwt_event_dom_client_MouseEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseEvent', 89), Lcom_google_gwt_event_dom_client_ClickEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'ClickEvent', 88), Lcom_google_gwt_user_client_impl_HistoryImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'HistoryImpl', 152), Lcom_google_gwt_user_client_impl_HistoryImplTimer_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'HistoryImplTimer', 154), Lcom_google_gwt_user_client_impl_HistoryImplMozilla_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'HistoryImplMozilla', 153), Lcom_google_gwt_dom_client_StyleInjector$StyleInjectorImpl_2_classLit = createForClass('com.google.gwt.dom.client.', 'StyleInjector$StyleInjectorImpl', 87), Lcom_google_gwt_dom_client_StyleInjector$1_2_classLit = createForClass('com.google.gwt.dom.client.', 'StyleInjector$1', 86), Lcom_google_gwt_event_logical_shared_ValueChangeEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'ValueChangeEvent', 101), Lcom_google_gwt_user_client_ui_FocusWidget_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FocusWidget', 167), Lcom_google_gwt_user_client_ui_ButtonBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ButtonBase', 166), Lcom_google_gwt_user_client_ui_Button_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Button', 165);\n$sendStats('moduleStartup', 'moduleEvalEnd');\ngwtOnLoad(__gwtModuleFunction.__errFn, __gwtModuleFunction.__moduleName, __gwtModuleFunction.__moduleBase, __gwtModuleFunction.__softPermutationId,__gwtModuleFunction.__computePropValue);\n$sendStats('moduleStartup', 'end');\n//# sourceURL=course_load_scheduler-0.js\n"]);
